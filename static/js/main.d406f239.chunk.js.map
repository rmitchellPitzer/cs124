{"version":3,"sources":["modules/dataController/actions.js","modules/dataController/reducer.js","modules/dataController/store.js","modules/dataController/TaskDataController.js","modules/dataController/AppDataController.js","components/Action Commands/ActionButton.js","components/Header.js","components/Tasks/Task.js","components/Tasks/TaskList.js","components/Section/SectionButton.js","components/Section/SectionBar.js","components/Section/SectionContainer.js","components/Action Commands/ActionMenuItem.js","components/Action Commands/ActionMenu.js","App.js","index.js"],"names":["CREATE_TASK","DELETE_TASK","UPDATE_TASK_TEXT","TOGGLE_TASK_COMPLETION","DELETE_ALL_COMPLETED_TASK","TOGGLE_TODO_LIST","TOGGLE_COMPLETED_LIST","SHOW_MENU","HIDE_MENU","initialState","tasks","showCompleted","showTodo","showMenu","createTask","state","task","text","isCompleted","id","uuidv4","newState","map","x","push","deleteTask","filter","updateTaskText","newTasks","find","toggleTaskCompletion","deleteAllCompletedTasks","toggleCompletedList","toggleToDoList","hideMenu","store","createStore","action","type","payload","TaskDataController","updateTaskTextAction","dispatch","toggleTaskCompletionAction","deleteTaskAction","getState","AppDataController","handleOnClick","ActionButton","class","onClick","icon","faPlus","Header","props","Task","classes","alt","value","onChange","e","checked","event","currentTarget","handleTextEvent","TaskList","key","connect","isOpen","isToDo","showToDo","faAngleDown","faAngleRight","toggleTodoList","SectionBar","className","sectionTitle","ownProps","todo","showContainer","completed","ActionMenuItem","command","menuItems","deleteAllCompleted","faMinus","ActionMenu","closeMenu","menuItem","menuIsActive","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d406f239.chunk.js","sourcesContent":["export const CREATE_TASK = \"createTask\"\r\nexport const DELETE_TASK = \"deleteTask\"\r\nexport const UPDATE_TASK_TEXT = \"updateTaskText\"\r\nexport const TOGGLE_TASK_COMPLETION = \"toggleTaskCompletion\"\r\nexport const DELETE_ALL_COMPLETED_TASK = \"deleteAllCompletedTasks\"\r\nexport const TOGGLE_TODO_LIST = \"toggleTodoList\"\r\nexport const TOGGLE_COMPLETED_LIST = \"toggleCompletedList\"\r\nexport const SHOW_MENU = \"showMenu\"\r\nexport const HIDE_MENU = \"hideMenu\"\r\n\r\nexport const showMenuAction = () => ({type:SHOW_MENU})\r\nexport const hideMenuAction = () => ({type:HIDE_MENU})\r\nexport const createTaskAction = () => ({type:CREATE_TASK})\r\nexport const deleteTaskAction = (id) => ({type:DELETE_TASK, payload:{id}})\r\nexport const updateTaskTextAction = (id,text) => ({type: UPDATE_TASK_TEXT,payload: {id,text}})\r\nexport const toggleTaskCompletionAction = (id) => ({type: TOGGLE_TASK_COMPLETION,payload:{id}})\r\nexport const deleteAllCompletedTasksAction = () => ({type: DELETE_ALL_COMPLETED_TASK})\r\nexport const toggleCompletedListAction = () => ({type:TOGGLE_COMPLETED_LIST})\r\nexport const toggleToDoListAction = () => ({type:TOGGLE_TODO_LIST})\r\n","/* eslint-disable no-lone-blocks */\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CREATE_TASK, DELETE_ALL_COMPLETED_TASK, DELETE_TASK, HIDE_MENU, SHOW_MENU, TOGGLE_COMPLETED_LIST, TOGGLE_TASK_COMPLETION, TOGGLE_TODO_LIST, UPDATE_TASK_TEXT } from './actions';\r\n\r\nconst initialState = {\r\n    tasks: [],\r\n    showCompleted: false,\r\n    showTodo: true,\r\n    showMenu: false \r\n}\r\n\r\nfunction createTask(state) {\r\n    const id = uuidv4()\r\n    const task = {text:\"\",isCompleted:false,id}\r\n    const newState = state.tasks.map(x => x)\r\n    newState.push(task)\r\n\r\n    return {\r\n        ...state,\r\n        tasks:newState\r\n    }\r\n \r\n}\r\n\r\nfunction deleteTask(state,id) {\r\n    const tasks = state.tasks.filter(task => task.id !== id)\r\n    return {\r\n        ...state,\r\n        tasks \r\n    }\r\n}\r\n\r\nfunction updateTaskText(state,{id,text}) {\r\n    const newTasks = state.tasks.map(x => x)\r\n    const task = newTasks.find(task => task.id === id)\r\n    if (!task) return state\r\n\r\n    task.text = text \r\n\r\n\r\n    return {\r\n        ...state,\r\n        tasks: newTasks\r\n    }\r\n}\r\n\r\nfunction toggleTaskCompletion(state,id) {\r\n    const newTasks = state.tasks.map(x => x)\r\n    const task = newTasks.find(task => task.id === id)\r\n    task.isCompleted = !task.isCompleted\r\n\r\n    return {\r\n        ...state,\r\n        tasks:newTasks \r\n    }\r\n\r\n}\r\n\r\nfunction deleteAllCompletedTasks(state) {\r\n   const newTasks = state.tasks.filter(task => task.isCompleted !== true)\r\n   return {\r\n       ...state,\r\n       tasks:newTasks \r\n   }\r\n}\r\n\r\nfunction toggleCompletedList(state) {\r\n    return {\r\n        ...state,\r\n        showCompleted: !state.showCompleted\r\n    }\r\n}\r\n\r\nfunction toggleToDoList(state) {\r\n    return {\r\n        ...state,\r\n        showTodo: !state.showTodo \r\n    }\r\n}\r\n\r\nfunction showMenu(state) {\r\n    return {\r\n        ...state,\r\n        showMenu: true \r\n        }\r\n}\r\n\r\nfunction hideMenu(state) {\r\n    return {\r\n        ...state,\r\n        showMenu:false \r\n    }\r\n}\r\n\r\nexport default function toDoReducer(state = initialState, action){\r\n    switch (action.type){\r\n        case CREATE_TASK: return createTask(state)\r\n        case DELETE_TASK: return deleteTask(state,action.payload.id)\r\n        case UPDATE_TASK_TEXT: return updateTaskText(state,action.payload)\r\n        case TOGGLE_TASK_COMPLETION: return toggleTaskCompletion(state,action.payload.id)\r\n        case DELETE_ALL_COMPLETED_TASK: return deleteAllCompletedTasks(state)\r\n        case TOGGLE_TODO_LIST: return toggleToDoList(state)\r\n        case TOGGLE_COMPLETED_LIST: return toggleCompletedList(state)\r\n        case SHOW_MENU: return showMenu(state)\r\n        case HIDE_MENU: return hideMenu(state)\r\n        default:\r\n            return state \r\n    }\r\n\r\n\r\n}","import {createStore} from \"redux\"\r\nimport rootReducer  from \"./reducer\"\r\n\r\nconst store = createStore(rootReducer)\r\nexport default store ","import { createTaskAction, deleteAllCompletedTasksAction, deleteTaskAction, toggleTaskCompletionAction, updateTaskTextAction } from \"./actions\"\r\nimport store from \"./store.js\"\r\nclass TaskDataController {\r\n    static updateTaskText(id,text) {\r\n            const action = updateTaskTextAction(id,text)\r\n            store.dispatch(action)\r\n    }\r\n\r\n    static toggleTaskCompletion(id) {\r\n        const action = toggleTaskCompletionAction(id)\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static createTask() {\r\n        const action = createTaskAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static deleteTask(id) {\r\n        const action = deleteTaskAction(id)\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static deleteAllCompleted() {\r\n        const action = deleteAllCompletedTasksAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static todo() {\r\n        return store.getState()\r\n        .tasks.filter(task => task.isCompleted === false)\r\n    }\r\n\r\n    static completed() {\r\n        return store.getState()\r\n        .tasks.filter(task => task.isCompleted === true)\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\nexport default TaskDataController","import { hideMenuAction, showMenuAction, toggleCompletedListAction, toggleToDoListAction } from \"./actions.js\"\r\nimport store from \"./store.js\"\r\n\r\nexport default class AppDataController {\r\n\r\n    static toggleTodoList() {\r\n        const action = toggleToDoListAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static showToDo() {\r\n        return store.getState().showTodo \r\n    }\r\n    \r\n    static showCompleted() {\r\n        return store.getState().showCompleted \r\n    }\r\n\r\n    static showMenu() {\r\n        const action = showMenuAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static closeMenu() {\r\n        const action = hideMenuAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static menuIsActive() {\r\n        return store.getState().showMenu \r\n    }\r\n\r\n    static toggleCompletedList() {\r\n        const action = toggleCompletedListAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n}","import AppDataController from \"../../modules/dataController/AppDataController\"\r\nimport \"../../css/action_button.css\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nfunction handleOnClick() {\r\n    AppDataController.showMenu()\r\n}\r\n\r\nexport default function ActionButton() {\r\n    return (\r\n        <button \r\n            class=\"action-button\"\r\n            onClick={handleOnClick}\r\n        >\r\n        <FontAwesomeIcon icon={faPlus} />\r\n        </button>\r\n    )\r\n}\r\n\r\n","import \"../css/banner.css\"\r\n\r\n\r\nexport default function Header(props) {\r\n\r\n    return (\r\n        <div class=\"banner\">\r\n            <h1 class=\"title\"> Todoiz.IO</h1>\r\n        </div>\r\n    )\r\n}","import \"../../css/task.css\"\r\nimport TaskDataController from \"../../modules/dataController/TaskDataController\"\r\n/*\r\nprops: {\r\n    text:string;\r\n    isCompleted:boolean\r\n    id:string \r\n}\r\n*/\r\nexport default function Task(props) {\r\n    const classes = `task-item ${props.isCompleted ? 'completed' : ''}`\r\n    return (\r\n        <div class={classes}>\r\n            <input \r\n                alt='task completion status' \r\n                class='checkbox' \r\n                type=\"checkbox\"\r\n                value={ props.isCompleted}\r\n                onChange= {(e) => handleCheckBoxEvent(props.id)}\r\n                checked= {props.isCompleted}\r\n            />\r\n            <input \r\n                class='task-text' \r\n                type='text' \r\n                alt='task text' \r\n                onChange= { (e) => handleTextEvent(props.id,e)}\r\n                value={props.text}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction handleTextEvent(id,event) {\r\n    const text = event.currentTarget.value\r\n    TaskDataController.updateTaskText(id,text)\r\n}\r\n\r\nfunction handleCheckBoxEvent(id) {\r\n    TaskDataController.toggleTaskCompletion(id)\r\n}","import Task from \"./Task\";\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nprops:{\r\n    tasks: TaskItem[]\r\n\r\n}\r\n*/\r\nexport default function TaskList(props) {\r\n\r\n    return (\r\n        <div class='container'>\r\n            {\r\n            props.tasks.map(task => {\r\n            return <Task \r\n                        {...task}\r\n                        key={task.id}\r\n                    />\r\n            })\r\n            }\r\n        </div>   \r\n    )\r\n    \r\n}","import { faAngleDown, faAngleRight } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { connect } from \"react-redux\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController\"\r\n\r\nfunction SectionButton(props) {\r\n    const icon = props.isOpen ? faAngleDown : faAngleRight\r\n    return (\r\n        <button class=\"drop-down\" onClick={(e) => handleOnClick(props.isToDo)}>\r\n            <FontAwesomeIcon icon={icon} />\r\n        </button>\r\n    )\r\n}   \r\n\r\nfunction handleOnClick(isToDo) {\r\n    if (isToDo) {\r\n        AppDataController.toggleTodoList()\r\n    }\r\n    else AppDataController.toggleCompletedList()\r\n}\r\n\r\nfunction mapToState(state,{isToDo}) {\r\n    return {\r\n        isOpen: \r\n            isToDo ? AppDataController.showToDo() \r\n            : AppDataController.showCompleted()\r\n        }\r\n}\r\n\r\nexport default connect(mapToState)(SectionButton)","import \"../../css/bar.css\"\r\nimport \"../../css/todo.css\"\r\nimport \"../../css/completed.css\"\r\nimport SectionButton from \"./SectionButton\"\r\n\r\nexport default function SectionBar(props) {\r\n    const classes = `bar ${props.className}`\r\n    return (\r\n        <div class={classes}>\r\n            <SectionButton isToDo = { props.className === \"todo-bar\" }/>\r\n            <h1 class=\"bar-title\"> {props.sectionTitle} </h1>\r\n        </div>  \r\n    )\r\n}","import { connect } from \"react-redux\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController.js\"\r\nimport TaskDataController from \"../../modules/dataController/TaskDataController.js\"\r\nimport TaskList from \"../Tasks/TaskList.js\"\r\nimport SectionBar from \"./SectionBar.js\"\r\n\r\n/*\r\n@props: {\r\n    className: \"todo-bar| completed-bar\";\r\n    sectionTitle: string;\r\n    tasks: TaskItem[]\r\n    showContainer: boolean\r\n}\r\n*/\r\nfunction SectionContainer(props) {\r\n    return (\r\n        <div>\r\n            <SectionBar sectionTitle = {props.sectionTitle} className={props.className}/>\r\n            { props.showContainer && <TaskList tasks={props.tasks} />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction mapStateToProps(state,ownProps) {\r\n    const isToDo = ownProps.sectionTitle === \"To Do\"\r\n\r\n    if (isToDo) return { \r\n        tasks: TaskDataController.todo(),\r\n        showContainer: AppDataController.showToDo()\r\n    }\r\n    \r\n    return {\r\n        tasks: TaskDataController.completed(),\r\n        showContainer: AppDataController.showCompleted()\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(SectionContainer)","\r\n\r\n\r\n/* \r\n\r\n\r\nprops: {\r\n    text: string;\r\n    command: Function \r\n    icon: FontAwesomeIcon\r\n}\r\n*/\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function ActionMenuItem(props) {\r\n\r\n    return (\r\n        <button onClick={() => props.command()} class=\"action-item\">\r\n            { props.icon && <FontAwesomeIcon icon= {props.icon}/> }\r\n            <div class=\"action-text\">\r\n                <p> {props.text} </p>\r\n            </div>\r\n        </button>\r\n    )\r\n}\r\n\r\n","import ActionMenuItem from \"./ActionMenuItem.js\"\r\nimport \"../../css/action_list.css\"\r\nimport TaskDataController from \"../../modules/dataController/TaskDataController.js\"\r\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController.js\"\r\n/*\r\nprops: {\r\n    menuItems: MenuItem[]\r\n}\r\n\r\nmenuItem {\r\n    text: string;\r\n\r\n    command: Function\r\n}\r\n*/\r\nconst menuItems = [\r\n    {text:\"Add Task\", command: TaskDataController.createTask, icon: faPlus},\r\n    {text: \"Clear Completed Tasks\", command: TaskDataController.deleteAllCompleted, icon: faMinus},\r\n]\r\n\r\nexport default function ActionMenu(props) {\r\n    return (\r\n        <div class='overlay'onClick= {AppDataController.closeMenu}>\r\n            <div class='action-container'>\r\n                { menuItems.map(menuItem => {\r\n                    return <ActionMenuItem {...menuItem} key={menuItem.text}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n     \r\n    )\r\n}","import \"./css/global.css\"\r\nimport \"typeface-roboto\"\r\nimport TaskDataController from './modules/dataController/TaskDataController.js';\r\nimport ActionButton from \"./components/Action Commands/ActionButton\";\r\nimport AppDataController from \"./modules/dataController/AppDataController\";\r\nimport Header from './components/Header';\r\nimport SectionContainer from \"./components/Section/SectionContainer.js\"\r\nimport ActionMenu from \"./components/Action Commands/ActionMenu\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction App({menuIsActive}) {\r\n\r\n  return (\r\n    <div class='container'>\r\n      <Header/>\r\n      <SectionContainer \r\n        className='todo-bar' \r\n        sectionTitle=\"To Do\"\r\n      />\r\n      <SectionContainer \r\n        className='completed-bar' \r\n        sectionTitle=\"Completed\"\r\n      />\r\n      { menuIsActive && <ActionMenu/> }\r\n      <ActionButton/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    menuIsActive: AppDataController.menuIsActive()\r\n  }\r\n}\r\n\r\nexport default connect(mapToState)(App)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./modules/dataController/store.js\"\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}