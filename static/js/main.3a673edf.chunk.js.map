{"version":3,"sources":["modules/sorting/sortingAlgorithm.js","modules/localStore/actions/menuActions.js","modules/localStore/actions/taskActions.js","modules/localStore/actions/sortActions.js","modules/localStore/reducer/components/taskReducer.js","modules/localStore/actions/authActions.js","modules/localStore/reducer/components/authReducer.js","modules/localStore/reducer/components/priorityMenuReducer.js","modules/localStore/reducer/components/sortMenuReducer.js","modules/localStore/reducer/components/taskMenuReducer.js","modules/localStore/actions/listActions.js","modules/localStore/actions/listSettingsActions.js","modules/localStore/reducer/components/listReducer.js","modules/localStore/actions/newListMenuAction.js","modules/localStore/reducer/components/newListMenuReducer.js","modules/localStore/reducer/components/settingsReducer.js","modules/localStore/actions/requestAction.js","modules/localStore/reducer/components/requestReducer.js","modules/localStore/reducer/index.js","modules/localStore/store.js","modules/dataController/AppDataController.js","modules/db/firebase.js","modules/db/firebaseConfig.js","modules/db/index.js","modules/localStore/constants.js","modules/dataController/DataSyncController.js","modules/listController/index.js","modules/dataController/TaskDataController.js","components/Priority/PriorityButton/PriorityButton.js","modules/focusRecentTaskOrLast.js","components/Tasks/Task.js","components/Tasks/TaskList.js","components/Section/SectionButton.js","components/Section/FilterButton.js","components/Header/DropDownButton.js","components/Action Commands/ActionMenuItem.js","components/Action Commands/ActionMenu.js","components/Section/SectionBar.js","components/Section/SectionContainer.js","components/Undo/UndoButton.js","modules/dataController/TaskOrderController.js","components/SortMenu/addFilterButton.js","components/SortMenu/CloseMenuButton.js","components/SortMenu/SortEntry/EntryOrderButton.js","components/SortMenu/SortEntry/SortCriteriaDropDown.js","components/SortMenu/SortEntry/isAscendingButton.js","components/SortMenu/SortEntry/DeleteButton.js","components/SortMenu/SortEntry/SortEntryContainer.js","components/SortMenu/SortMenuContainer.js","components/TaskMenu/TaskMenuBar/TaskMenuCloseButton.js","components/TaskMenu/TaskMenuBar/TaskMenuDeleteButton.js","components/TaskMenu/TaskMenuBar/TaskMenuBar.js","components/TaskMenu/TaskEditor.js","components/TaskMenu/TaskMenu.js","components/Priority/PriorityIcon.js","components/Priority/PriorityMenu/PriorityItem.js","components/Priority/PriorityMenu/PriorityCloseButton.js","components/Priority/PriorityMenu/PriorityMenuBar.js","components/Priority/PriorityMenu/PriorityMenuContainer.js","components/Action Commands/ActionButton.js","components/ActiveListBanner/SettingsButton.js","components/ActiveListBanner/ActiveListHeading.js","components/ActiveListBanner/BackButton.js","components/ActiveListBanner/index.js","components/Main/index.js","components/Header/Header.js","components/SignInScreen/index.js","components/ListComponent/ListContainer/ListBanner.js","components/ListComponent/ListContainer/ListItem.js","components/ListComponent/ListContainer/NewListButton.js","components/ListComponent/ListContainer/ListItems.js","components/ListComponent/ListContainer/index.js","components/ListComponent/index.js","components/Dialog/Overlay.js","components/Dialog/Menu.js","components/Dialog/DialogHeading.js","components/ListComponent/NewListMenu/ListName.js","components/Dialog/DialogButton.js","components/Dialog/TwoButtonMenu.js","components/ListComponent/NewListMenu/index.js","components/ListSettings/ListSettingsHeading.js","components/ListSettings/CloseSettingsButton.js","components/ListSettings/ListSettingsBanner.js","components/ListSettings/SettingsCommand.js","components/ListSettings/SettingsCommandContainer.js","components/Dialog/TextInput.js","components/ListSettings/ChangeNameMenu/index.js","components/Dialog/DialogText.js","components/ListComponent/DeleteListMenu/index.js","components/ListSettings/ListSettingsShareBanner.js","components/ShareMenu/ShareMenuBanner.js","components/ShareMenu/User.js","components/ShareMenu/UsersContainer.js","components/Dialog/SingleButtonMenu.js","components/ShareMenu/ShareWithDialog.js","components/ShareMenu/ShareWithDialogTwo.js","components/RemoveDialog/index.js","components/ShareMenu/index.js","components/RemoveSharedDialog/index.js","components/ListSettings/index.js","components/ShareRequest/index.js","App.js","modules/setup/initSubscriptions.js","modules/AuthListener/index.js","modules/setup/init.js","index.js"],"names":["NAME","TIME","PRIORITY","applySorting","sortDataList","tasks","i","length","sortData","sortFunction","getSortFunction","sortTasks","prevSortData","sortBySecondaryKey","map","x","sort","a","b","isAscending","prevSortFunction","valuesAreEqual","field","sortByName","sortByTime","sortByPriority","taskA","taskB","comparison","text","localeCompare","priority","creationDate","SHOW_DROPDOWN_MENU","HIDE_DROPDOWN_MENU","SHOW_PRIORITY_MENU","HIDE_PRIORITY_MENU","SHOW_TASK_MENU","HIDE_TASK_MENU","TOGGLE_TASK_COMPLETION","TOGGLE_TODO_LIST","TOGGLE_COMPLETED_LIST","UNDO_TASK","SHOW_UNDO","HIDE_UNDO","PUSH_TASKS_TO_STACK","POP_STACK","SET_ACTIVE_TASK","UPDATE_TASKS","SHOW_SORT_FIELD_MENU","HIDE_SORT_FIELD_MENU","UPDATE_SORTING_FIELDS","initialState","stack","showTodo","showCompleted","activeTask","showUndo","sortingFields","updateTasks","state","oldTasks","sortingAlgorithm","setActiveTask","popStack","pop","pushTasksToStack","push","undoTask","toggleTaskCompletion","id","newTasks","task","find","isCompleted","toggleCompletedList","toggleToDoList","hideUndo","updateSortingFields","UPDATE_AUTH_STATUS","updateAuthStatusAction","isSignedIn","type","updateAuthStatus","showPriorityMenu","payload","priorityMenuActiveID","showSortMenu","showTaskMenu","hidePriorityMenu","hideSortFieldMenu","showSortFieldMenu","showDropDownMenu","hideTaskMenu","hideDropDownMenu","TOGGLE_OWNED_LISTS","TOGGLE_PENDING_LISTS","TOGGLE_SHARED_LISTS","UPDATE_OWNED_LISTS","UPDATE_SHARED_LISTS","UPDATE_PENDING_LISTS","NAV_TO_LIST","UPDATE_ACTIVE_LIST_NAME","navToListAction","list","HIDE_LIST_SETTINGS","SHOW_LIST_SETTINGS","SHOW_CHANGE_NAME_MENU","HIDE_CHANGE_NAME_MENU","UPDATE_LIST_NAME","SHOW_DELETE_LIST_MENU","HIDE_DELETE_LIST_MENU","SHOW_SHARE_MENU","HIDE_SHARE_MENU","SHOW_SHARE_DIALOG_ONE","HIDE_SHARE_DIALOG_ONE","SHOW_SHARE_DIALOG_TWO","HIDE_SHARE_DIALOG_TWO","UPDATE_SHARE_USER","SHOW_REMOVE_SHARED_MENU","HIDE_REMOVE_SHARED_MENU","updateShareUserAction","user","hideShareDialogOneAction","showShareDialogTwoAction","updateListNameAction","hideListSettingsAction","ownedLists","sharedLists","pendingLists","showOwnedLists","showSharedLists","showPendingLists","showListSettings","showRemoveSharedMenu","activeList","hideRemoveSharedMenu","updateActiveListName","title","navToList","updatePendingLists","updateSharedLists","updateOwnedLists","togglePendingLists","toggleSharedLists","toggleOwnedLists","SHOW_NEW_LIST_MENU","HIDE_NEW_LIST_MENU","UPDATE_NEW_LIST_NAME","updateNewListName","name","showNewListMenu","newListName","hideNewListMenu","listTitle","showChangeNameMenu","showDeleteListMenu","showShareMenu","shareWithUser","showShareDialogOne","showShareDialogTwo","updateShareUser","hideShareDialogTwo","hideShareDialogOne","hideShareMenu","hideDeleteListMenu","updateListName","hideChangeNameMenu","hideListSettings","SHOW_REQUEST_MENU","HIDE_REQUEST_MENU","UPDATE_ACTIVE_REQUEST","SHOW_REMOVE_MENU","HIDE_REMOVE_MENU","UPDATE_SELECTED_USER","hideRequestMenuAction","activeRequest","selectedUser","showRequestMenu","showRemoveMenu","hideRemoveMenu","updateSelectedUser","updateActiveRequest","hideRequestMenu","combineReducers","action","auth","sortMenu","taskMenu","lists","newListMenu","listSettings","request","createStore","rootReducer","AppDataController","store","dispatch","getState","showPriorityMenuAction","setActiveTaskAction","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","USERS_COLLECTION","TASK_SUBCOLLECTION","_db","db","_taskSubscription","_sortSubscription","_ownedListSubscription","_pendingListSubscription","_sharedListSubscription","query","this","onSnapshot","snapshot","docs","doc","data","console","log","shared","updateTasksAction","_sortSubscrption","updateSortingFieldsAction","clearTaskSub","clearListSub","LIST_COLLECTION","FieldValue","ListController","getActiveListCollection","get","owner","update","pendingUsers","arrayUnion","email","currentUser","collection","arrayRemove","usersSharedWith","DataSyncController","delete","setTaskSubscription","setSortSubscription","uuidv4","set","taskID","Date","now","collectionRef","TaskDataController","getTask","where","s","ref","filter","restoredState","exists","updateTask","classList","priorityText","p","PriorityButton","classes","className","onClick","hideSortMenu","element","document","getElementsByClassName","focus","openPriorityMenu","focusRecentTaskOrLast","lastTask","getLastTask","lastTaskID","getElementById","findAppropriateTask","actionButton","focusActionButton","event","key","sibling","getSibling","deleteTask","previousElementSibling","ariaLabel","priorityLevels","Map","connect","ownProps","isSelected","menuIsOpen","props","class","onKeyDown","e","shouldDeleteTaskEvent","alt","value","onChange","handleCheckBoxEvent","checked","TaskList","arialLabel","isToDo","isOpen","showToDo","icon","faAngleDown","faAngleRight","toggleTodoList","toggleButton","openSortFieldMenu","FilterButton","faSort","handleOnClick","DropDownButton","classNames","hasCompletedTasks","faEllipsisV","ActionMenuItem","command","closeMenu","autoFocus","menuItems","deleteAllCompleted","setTimeout","faMinus","ActionMenu","menuItem","SectionBar","sectionTitle","hasCompletedTask","menuIsActive","todo","showContainer","completed","undoTaskDelete","UndoButton","TaskOrderController","hasValidField","getSortFields","sortFilters","isAlreadyEnabled","enableFilter","old","newField","prevField","f","hasFieldAlready","updateSortFields","hasName","hasTime","hasPriority","addSortField","sortFields","getDoc","newSortingFields","newIndex","currentIndex","getCurrentIndexOfField","entry","splice","addFilterSection","addRandomField","AddFilterButton","sortCloseButton","CloseMenuButton","newOrder","changeSortFieldOrder","result","onOrderChange","parseInt","currentTarget","index","_","SortCriteriaDropDown","changeSortField","change","changeAscending","IsAscendingButton","faSortAmountUp","faSortAmountDown","DeleteButton","fieldName","removeSortField","SortEntryContainer","TaskMenuCloseButton","TaskMenuBar","updateTaskText","isEnter","inputForm","createTask","newID","onKeyPress","shouldCreateNewTask","updateActiveTask","TaskMenu","PriorityIcon","selection","isSelection","tabIndex","updateTaskPriority","closePriorityMenu","PriorityCloseButton","PriorityMenuBar","priorityData","PriorityMenuContainer","ActionButton","faPlus","SettingsButton","showSettings","faCog","ActiveListHeading","heading","BackButton","goToListMenu","faAngleLeft","isOwnedList","Header","uiConfig","signInSuccessUrl","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","SignInScreen","firebaseAuth","ListBanner","showList","listType","YOUR_LISTS","toggleOwnListMenu","SHARED_LISTS","toggleSharedListMenu","PENDING_LISTS","togglePendingListMenu","toggleList","faChevronDown","faChevronRight","ListItem","updateActiveRequestAction","showRequest","NewListButton","showMenu","ListItems","listItems","ListContainer","Overlay","children","Menu","DialogHeading","ListName","placeholder","DialogButton","TwoButtonMenu","leftText","leftClasses","leftCommand","rightText","rightClasses","rightCommand","NewListMenu","confirmNewList","createList","CloseSettingsButton","closeSettings","ListSettingsBanner","SettingsCommand","_private","isAllowed","SettingsCommandContainer","commands","clearAll","signOut","TextInput","changeEvent","ChangeNameMenu","updateName","setListName","hideMenu","DialogText","DeleteListMenu","deleteList","deleteActiveList","ListSettingsShareBanner","closeShareSettings","ShareMenuBanner","openShareMenu","User","faTimesCircle","SingleButtonMenu","ShareWithDialog","sendRequest","sendShareRequest","removeAccess","newList","removeUser","RemoveSharedDialog","acceptShareRequest","rejectShareRequest","accept","reject","setOwnedListSubscription","setPendingSubscription","setSharedSubscription","AuthListener","onAuthStateChanged","hasUserFile","createUser","initSubscriptions","uid","pendingRequests","sentRequestIDs","init","ReactDOM","render"],"mappings":"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","file":"static/js/main.3a673edf.chunk.js","sourcesContent":["/*\r\n\r\n@ISortData: {\r\nfield:\"name\"|\"time\"|\"priority\",\r\nisAscending:Boolean\r\n}\r\n\r\n@ITask: {\r\n    _id:String (UUIDV4);\r\n    isCompleted:Boolean;\r\n    text:String;\r\n    creationDate:Number (Unix);\r\n    priority: Number;\r\n}\r\n */\r\n\r\nexport const NAME = \"name\"\r\nexport const TIME = \"time\"\r\nexport const PRIORITY = \"priority\"\r\n\r\nexport default function applySorting(sortDataList,tasks) {\r\n    for (let i = 0; i < sortDataList.length; i++) {\r\n        const sortData = sortDataList[i]\r\n        const sortFunction = getSortFunction(sortData)\r\n        if (isFirstSortField(i)) {\r\n           sortTasks(tasks,sortFunction,sortData)\r\n        }\r\n        else {\r\n            const prevSortData = sortDataList[i - 1]\r\n            const prevSortFunction = getSortFunction(prevSortData)\r\n            sortBySecondaryKey(prevSortData,prevSortFunction,sortData,tasks,sortFunction)\r\n        }\r\n\r\n    }\r\n    return tasks.map(x => x)\r\n}\r\n\r\nfunction isFirstSortField(index) {\r\n    return index == 0\r\n}\r\n\r\nfunction sortTasks(tasks,sortFunction,sortData) {\r\n    tasks.sort((a, b) => sortFunction(a, b, sortData.isAscending))\r\n}\r\n\r\nfunction sortBySecondaryKey(prevSortData,prevSortFunction,sortData,tasks,sortFunction) {\r\n    tasks.sort((a,b) => {\r\n        if (valuesAreEqual(prevSortData,prevSortFunction,a,b)) {\r\n            return sortFunction(a,b,sortData.isAscending)\r\n        }\r\n    })\r\n}\r\n\r\nfunction valuesAreEqual(sortData,sortFunction,a,b) {\r\n    return sortFunction(a,b,sortData.isAscending) == 0\r\n}\r\n\r\nfunction getSortFunction({field,isAscending}) {\r\n    switch (field) {\r\n        case NAME : return sortByName;\r\n        case TIME: return sortByTime;\r\n        case PRIORITY: return sortByPriority;\r\n        default: return\r\n    }\r\n}\r\n\r\nfunction sortByName(taskA,taskB,isAscending) {\r\n    const comparison = taskA.text.localeCompare(taskB.text)\r\n    return isAscending ? comparison : -1 * comparison\r\n}\r\n\r\nfunction sortByPriority(taskA,taskB,isAscending) {\r\n    if (taskA.priority == -1) return 1\r\n    if (taskB.priority == -1) return -1\r\n\r\n    const comparison = taskA.priority - taskB.priority\r\n    return isAscending ? -1 * comparison : comparison\r\n}\r\n\r\nfunction sortByTime(taskA,taskB,isAscending) {\r\n    const comparison = taskA.creationDate - taskB.creationDate\r\n    return isAscending ? comparison : -1 * comparison\r\n}","export const SHOW_DROPDOWN_MENU = \"showDropDownMenu\"\nexport const HIDE_DROPDOWN_MENU = \"hideDropDownMenu\"\nexport const SHOW_PRIORITY_MENU = \"showPriorityMenu\"\nexport const HIDE_PRIORITY_MENU = \"hidePriorityMenu\"\nexport const SHOW_TASK_MENU = \"showTaskMenu\"\nexport const HIDE_TASK_MENU = \"hideTaskMenu\"\nexport const TOGGLE_TASK_COMPLETION = \"toggleTaskCompletion\"\nexport const TOGGLE_TODO_LIST = \"toggleTodoList\"\nexport const TOGGLE_COMPLETED_LIST = \"toggleCompletedList\"\nexport const UNDO_TASK = \"undoTask\"\nexport const SHOW_UNDO = \"showUndo\"\nexport const HIDE_UNDO = \"hideUndo\"\n\nexport const showUndoAction = () => ({type:SHOW_UNDO})\nexport const hideUndoAction = () => ({type:HIDE_UNDO})\nexport const undoTaskAction = () => ({type:UNDO_TASK})\nexport const toggleCompletedListAction = () => ({type:TOGGLE_COMPLETED_LIST})\nexport const toggleToDoListAction = () => ({type:TOGGLE_TODO_LIST})\nexport const showDropDownMenuAction = () => ({type: SHOW_DROPDOWN_MENU})\nexport const hideDropDownMenuAction = () => ({type: HIDE_DROPDOWN_MENU})\nexport const showPriorityMenuAction = (id) => ({type: SHOW_PRIORITY_MENU, payload: {id}})\nexport const hidePriorityMenuAction = () => ({type: HIDE_PRIORITY_MENU})\nexport const showTaskMenuAction = () => ({type: SHOW_TASK_MENU})\nexport const hideTaskMenuAction = () => ({type: HIDE_TASK_MENU})","export const CREATE_TASK = \"createTask\"\nexport const DELETE_TASK = \"deleteTask\"\nexport const PUSH_TASKS_TO_STACK = \"pushTasksToStack\"\nexport const POP_STACK = \"popStack\"\nexport const SET_ACTIVE_TASK = \"setActiveTask\"\nexport const UPDATE_TASKS = \"updateTasks\"\n\nexport const createTaskAction = () => ({type:CREATE_TASK})\nexport const deleteTaskAction = (id) => ({type:DELETE_TASK, payload:{id}})\nexport const pushTasksToStackAction = () => ({type: PUSH_TASKS_TO_STACK})\nexport const popStackAction = () => ({type: POP_STACK})\nexport const setActiveTaskAction = (id) => ({type:SET_ACTIVE_TASK,payload:{id}})\nexport const updateTasksAction = (tasks) => ({type:UPDATE_TASKS,payload:{tasks}})","export const SHOW_SORT_FIELD_MENU = \"showSortFieldMenu\"\nexport const HIDE_SORT_FIELD_MENU = \"hideSortFieldMenu\"\nexport const UPDATE_SORTING_FIELDS = \"updateSortingFields\"\n\nexport const updateSortingFieldsAction = (sortingFields) => ({type: UPDATE_SORTING_FIELDS, payload: {sortingFields}})\nexport const showSortFieldAction = () => ({type: SHOW_SORT_FIELD_MENU})\nexport const hideSortFieldAction = () => ({type: HIDE_SORT_FIELD_MENU})","import sortingAlgorithm from \"../../../sorting/sortingAlgorithm\";\nimport {\n    HIDE_UNDO,\n    SHOW_UNDO,\n    TOGGLE_COMPLETED_LIST,\n    TOGGLE_TASK_COMPLETION,\n    TOGGLE_TODO_LIST,\n    UNDO_TASK\n} from \"../../actions/menuActions\";\nimport {POP_STACK, PUSH_TASKS_TO_STACK, SET_ACTIVE_TASK, UPDATE_TASKS} from \"../../actions/taskActions\";\nimport {UPDATE_SORTING_FIELDS} from \"../../actions/sortActions\";\nconst initialState = {\n    tasks: [],\n    stack: [],\n    showTodo: false,\n    showCompleted: false,\n    activeTask: null,\n    showUndo: false,\n    sortingFields:[],\n}\n\nfunction updateTasks(state,oldTasks) {\n    const tasks = sortingAlgorithm(state.sortingFields,oldTasks)\n    return {\n        ...state,\n        tasks\n    }\n}\nfunction setActiveTask(state,activeTask) {\n    return {\n        ...state,\n        activeTask\n    }\n}\nfunction popStack(state) {\n    const stack = [...state.stack]\n    stack.pop()\n\n    return {\n        ...state,\n        stack\n    }\n}\nfunction pushTasksToStack(state) {\n    const stack = [...state.stack]\n    stack.push(state.tasks)\n\n    return {\n        ...state,\n        stack,\n    }\n}\nfunction undoTask(state) {\n    const stack = state.stack.map(x => x)\n\n    return {\n        ...state,\n        tasks: stack.pop(),\n        stack\n    }\n}\nfunction toggleTaskCompletion(state,id) {\n    const newTasks = state.tasks.map(x => x)\n    const task = newTasks.find(task => task.id === id)\n    task.isCompleted = !task.isCompleted\n\n    return {\n        ...state,\n        tasks:newTasks\n    }\n\n}\nfunction toggleCompletedList(state) {\n    return {\n        ...state,\n        showCompleted: !state.showCompleted\n    }\n}\nfunction toggleToDoList(state) {\n    return {\n        ...state,\n        showTodo: !state.showTodo\n    }\n}\nfunction showUndo(state) {\n    return {\n        ...state,\n        showUndo: true\n    }\n}\nfunction hideUndo(state) {\n    return {\n        ...state,\n        showUndo: false\n    }\n}\nfunction updateSortingFields(state,{sortingFields}) {\n    const tasks = sortingAlgorithm(sortingFields,state.tasks)\n    return {\n        ...state,\n        tasks,\n        sortingFields\n    }\n}\n\nexport default function taskReducer(state = initialState, action) {\n    switch(action.type) {\n        case TOGGLE_TODO_LIST: return toggleToDoList(state)\n        case TOGGLE_COMPLETED_LIST: return toggleCompletedList(state)\n        case SHOW_UNDO: return showUndo(state)\n        case HIDE_UNDO: return hideUndo(state)\n        case UPDATE_TASKS: return updateTasks(state,action.payload.tasks)\n        case SET_ACTIVE_TASK: return setActiveTask(state,action.payload.id)\n        case PUSH_TASKS_TO_STACK: return pushTasksToStack(state)\n        case POP_STACK: return popStack(state)\n        case UNDO_TASK: return undoTask(state)\n        case UPDATE_SORTING_FIELDS: return updateSortingFields(state,action.payload)\n        case TOGGLE_TASK_COMPLETION: return toggleTaskCompletion(state,action.payload.id)\n        default:\n            return state\n    }\n}","export const UPDATE_AUTH_STATUS = \"updateSignInStatus\"\n\nexport function updateAuthStatusAction(isSignedIn) {\n    return {\n        type: UPDATE_AUTH_STATUS,\n        isSignedIn\n    }\n}\n\n","import {UPDATE_AUTH_STATUS} from \"../../actions/authActions\";\n\nfunction updateAuthStatus(state,isSignedIn) {\n    return {\n        ...state,\n        isSignedIn\n    }\n}\n\nconst initialState = {\n    isSignedIn:false,\n}\n\nexport default function authReducer(state = initialState ,action) {\n    switch (action.type) {\n        case UPDATE_AUTH_STATUS: return updateAuthStatus(state,action.isSignedIn)\n        default:\n            return state\n    }\n}","import {HIDE_PRIORITY_MENU, SHOW_PRIORITY_MENU} from \"../../actions/menuActions\";\n\nfunction showPriorityMenu(state,payload) {\n    return {\n        ...state,\n        priorityMenuActiveID: payload.id,\n        showPriorityMenu:true,\n        showSortMenu: false,\n        showTaskMenu: false,\n    }\n}\nfunction hidePriorityMenu(state) {\n    return {\n        ...state,\n        showPriorityMenu:false,\n    }\n}\nconst initialState = {\n    showPriorityMenu: false ,\n    priorityMenuActiveID: null,\n}\n\nexport default function priorityMenuReducer(state = initialState, action) {\n    switch(action.type) {\n        case SHOW_PRIORITY_MENU: return showPriorityMenu(state,action.payload)\n        case HIDE_PRIORITY_MENU: return hidePriorityMenu(state)\n        default:\n            return state\n    }\n}","import sortingAlgorithm from \"../../../sorting/sortingAlgorithm\";\nimport {HIDE_SORT_FIELD_MENU, SHOW_SORT_FIELD_MENU, UPDATE_SORTING_FIELDS} from \"../../actions/sortActions\";\n\nconst initialState = {\n    showSortMenu: false,\n}\n\nfunction hideSortFieldMenu(state) {\n    return {\n        ...state,\n        showSortMenu: false\n    }\n}\nfunction showSortFieldMenu(state) {\n    return {\n        ...state,\n        showSortMenu: true,\n        showPriorityMenu: false,\n        showTaskMenu: false,\n    }\n}\n\nexport default function sortingReducer(state = initialState, action) {\n    switch(action.type) {\n        case SHOW_SORT_FIELD_MENU: return showSortFieldMenu(state)\n        case HIDE_SORT_FIELD_MENU: return hideSortFieldMenu(state)\n        default:\n            return state\n    }\n}","import {HIDE_DROPDOWN_MENU, HIDE_TASK_MENU, SHOW_DROPDOWN_MENU, SHOW_TASK_MENU} from \"../../actions/menuActions\";\n\nfunction showTaskMenu(state) {\n    return {\n        ...state,\n        showDropDownMenu: false,\n        showPriorityMenu: false,\n        showTaskMenu: true\n    }\n}\nfunction hideTaskMenu(state) {\n    return {\n        ...state,\n        showTaskMenu: false\n    }\n}\nfunction showDropDownMenu(state) {\n    return {\n        ...state,\n        showDropDownMenu: true\n    }\n}\nfunction hideDropDownMenu(state) {\n    return {\n        ...state,\n        showDropDownMenu:false\n    }\n}\n\nconst initialState = {\n    showTaskMenu: false,\n    showDropDownMenu: false\n}\n\nexport default function taskMenuReducer(state = initialState,action) {\n    switch (action.type) {\n        case SHOW_TASK_MENU: return showTaskMenu(state)\n        case HIDE_TASK_MENU: return hideTaskMenu(state)\n        case SHOW_DROPDOWN_MENU: return showDropDownMenu(state)\n        case HIDE_DROPDOWN_MENU: return hideDropDownMenu(state)\n        default:\n            return state\n    }\n}","export const TOGGLE_OWNED_LISTS = \"toggleOwnedLists\"\nexport const TOGGLE_PENDING_LISTS = \"togglePendingLists\"\nexport const TOGGLE_SHARED_LISTS =\"toggleSharedLists\"\n\nexport const UPDATE_OWNED_LISTS = \"updateOwnedLists\"\nexport const UPDATE_SHARED_LISTS = \"updateSharedLists\"\nexport const UPDATE_PENDING_LISTS = \"updatePendingLists\"\nexport const NAV_TO_LIST = \"navToList\"\nexport const UPDATE_ACTIVE_LIST_NAME = \"updateActiveListName\"\n\n\nexport function updateActiveListNameAction(name) {\n    return {\n        type: UPDATE_ACTIVE_LIST_NAME,\n        name\n    }\n}\n\nexport function toggleOwnedListsAction() {\n    return {\n        type: TOGGLE_OWNED_LISTS,\n    }\n}\n\nexport function togglePendingListsAction() {\n    return {\n        type: TOGGLE_PENDING_LISTS\n    }\n}\n\nexport function toggleSharedListsAction() {\n    return {\n        type: TOGGLE_SHARED_LISTS\n    }\n}\n\nexport function updateOwnedListsAction(lists) {\n    return {\n        type: UPDATE_OWNED_LISTS,\n        lists\n    }\n}\n\nexport function updateSharedListsAction(lists) {\n    return {\n        type: UPDATE_SHARED_LISTS,\n        lists\n    }\n}\n\nexport function updatePendingListsAction(lists) {\n    return {\n        type: UPDATE_PENDING_LISTS,\n        lists\n    }\n}\n\nexport function navToListAction(list) {\n    return {\n        type: NAV_TO_LIST,\n        list\n    }\n}\n\n\n\n","export const HIDE_LIST_SETTINGS = \"hideListSettings\"\nexport const SHOW_LIST_SETTINGS = \"showListSettings\"\nexport const SHOW_CHANGE_NAME_MENU = \"showChangeNameMenu\"\nexport const HIDE_CHANGE_NAME_MENU = \"hideChangeNameMenu\"\nexport const UPDATE_LIST_NAME = \"updateListName\"\nexport const SHOW_DELETE_LIST_MENU = \"showDeleteListMenu\"\nexport const HIDE_DELETE_LIST_MENU = \"hideDeleteListMenu\"\nexport const SHOW_SHARE_MENU = \"showShareMenu\"\nexport const HIDE_SHARE_MENU = \"hideShareMenu\"\nexport const SHOW_SHARE_DIALOG_ONE = \"showShareDialogOne\"\nexport const HIDE_SHARE_DIALOG_ONE = \"hideShareDialogOne\"\nexport const SHOW_SHARE_DIALOG_TWO = \"showShareDialogTwo\"\nexport const HIDE_SHARE_DIALOG_TWO = \"hideShareDialogTwo\"\nexport const UPDATE_SHARE_USER = \"updateShareUser\"\nexport const SHOW_REMOVE_SHARED_MENU = \"showRemoveSharedMenu\"\nexport const HIDE_REMOVE_SHARED_MENU = \"hideRemoveSharedMenu\"\n\nexport function showRemoveSharedMenuAction() {\n    return {type: SHOW_REMOVE_SHARED_MENU}\n}\n\nexport function hideRemoveSharedMenuAction() {\n    return {type: HIDE_REMOVE_SHARED_MENU}\n}\n\nexport function updateShareUserAction(user) {\n    return {type: UPDATE_SHARE_USER, user}\n}\n\nexport function showShareDialogOneAction() {\n    return {type: SHOW_SHARE_DIALOG_ONE}\n}\n\nexport function hideShareDialogOneAction() {\n    return {type: HIDE_SHARE_DIALOG_ONE}\n}\n\nexport function showShareDialogTwoAction() {\n    return {type: SHOW_SHARE_DIALOG_TWO}\n}\n\nexport function hideShareDialogTwoAction() {\n    return {type: HIDE_SHARE_DIALOG_TWO}\n}\n\nexport function showShareMenuAction() {\n    return {type: SHOW_SHARE_MENU}\n}\n\nexport function hideShareMenuAction() {\n    return {type: HIDE_SHARE_MENU}\n}\n\nexport function hideDeleteListMenuAction() {\n    return {type: HIDE_DELETE_LIST_MENU}\n}\n\nexport function showDeleteListMenuAction() {\n    return {type: SHOW_DELETE_LIST_MENU}\n}\n\nexport function hideChangeNameMenuAction() {\n    return {type: HIDE_CHANGE_NAME_MENU}\n}\n\nexport function updateListNameAction(text) {\n    return {type: UPDATE_LIST_NAME, text}\n}\n\nexport function hideListSettingsAction() {\n    return { type: HIDE_LIST_SETTINGS}\n}\n\nexport function showListSettingsAction() {\n    return {type: SHOW_LIST_SETTINGS}\n}\n\nexport function showChangeNameMenuAction() {\n    return {type: SHOW_CHANGE_NAME_MENU}\n}\n","import {\n    NAV_TO_LIST,\n    TOGGLE_OWNED_LISTS,\n    TOGGLE_PENDING_LISTS,\n    TOGGLE_SHARED_LISTS, UPDATE_ACTIVE_LIST_NAME,\n    UPDATE_OWNED_LISTS, UPDATE_PENDING_LISTS, UPDATE_SHARED_LISTS\n} from \"../../actions/listActions\";\nimport {HIDE_REMOVE_SHARED_MENU, SHOW_REMOVE_SHARED_MENU} from \"../../actions/listSettingsActions\";\n\nconst initialState = {\n    ownedLists:[],\n    sharedLists:[],\n    pendingLists:[],\n    showOwnedLists:false,\n    showSharedLists:false,\n    showPendingLists:false,\n    showListSettings:false,\n    showRemoveSharedMenu:false,\n    activeList: null,\n}\n\nexport default function listReducer(state = initialState,action) {\n    switch(action.type) {\n        case TOGGLE_OWNED_LISTS: return toggleOwnedLists(state)\n        case TOGGLE_SHARED_LISTS: return toggleSharedLists(state)\n        case TOGGLE_PENDING_LISTS: return togglePendingLists(state)\n        case UPDATE_OWNED_LISTS: return updateOwnedLists(state,action.lists)\n        case UPDATE_SHARED_LISTS: return updateSharedLists(state,action.lists)\n        case UPDATE_PENDING_LISTS: return updatePendingLists(state,action.lists)\n        case NAV_TO_LIST: return navToList(state,action.list)\n        case UPDATE_ACTIVE_LIST_NAME: return updateActiveListName(state,action.name)\n        case SHOW_REMOVE_SHARED_MENU: return showRemoveSharedMenu(state)\n        case HIDE_REMOVE_SHARED_MENU: return hideRemoveSharedMenu(state)\n        default:\n            return state\n    }\n}\n\nfunction showRemoveSharedMenu(state) {\n    return {\n        ...state,\n        showRemoveSharedMenu: true\n    }\n}\n\nfunction hideRemoveSharedMenu(state) {\n    return {\n        ...state,\n        showRemoveSharedMenu: false\n    }\n}\nfunction updateActiveListName(state,title) {\n    const {activeList} = state\n    return {\n        ...state,\n        activeList: {...activeList,title}\n    }\n}\n\nfunction navToList(state,activeList) {\n    return {\n        ...state,\n        activeList\n    }\n}\n\nfunction updatePendingLists(state,pendingLists) {\n    return {\n        ...state,\n        pendingLists\n    }\n}\n\nfunction updateSharedLists(state,sharedLists) {\n    return {\n        ...state,\n        sharedLists\n    }\n}\n\nfunction updateOwnedLists(state,ownedLists) {\n    return {\n        ...state,\n        ownedLists\n    }\n}\n\nfunction togglePendingLists(state) {\n    return {\n        ...state,\n        showPendingLists:!state.showPendingLists\n    }\n}\n\nfunction toggleSharedLists(state) {\n    return {\n        ...state,\n        showSharedLists: !state.showSharedLists\n    }\n}\n\nfunction toggleOwnedLists(state) {\n    return {\n        ...state,\n        showOwnedLists:!state.showOwnedLists\n    }\n}","export const SHOW_NEW_LIST_MENU = \"showNewListMenu\"\nexport const HIDE_NEW_LIST_MENU = \"hideNewListMenu\"\nexport const UPDATE_NEW_LIST_NAME = \"updateNewListName\"\n\n\nexport function showNewListMenuAction() {\n    return {type:SHOW_NEW_LIST_MENU}\n}\n\nexport function hideNewListMenuAction() {\n    return {type: HIDE_NEW_LIST_MENU}\n}\n\nexport function updateNewListName(name) {\n    return {type:UPDATE_NEW_LIST_NAME,name}\n}","import {HIDE_NEW_LIST_MENU, SHOW_NEW_LIST_MENU, UPDATE_NEW_LIST_NAME} from \"../../actions/newListMenuAction\";\n\n\nconst initialState = {\n    showNewListMenu: false,\n    newListName: \"\"\n}\n\nexport default function newListMenuReducer(state = initialState, action) {\n    switch (action.type) {\n        case UPDATE_NEW_LIST_NAME:  return updateNewListName(state,action.name)\n        case SHOW_NEW_LIST_MENU: return showNewListMenu(state)\n        case HIDE_NEW_LIST_MENU: return hideNewListMenu(state)\n        default:\n            return state\n    }\n}\n\nfunction showNewListMenu(state) {\n    return {\n        ...state,\n        showNewListMenu:true\n    }\n}\n\nfunction hideNewListMenu(state) {\n    return {\n        ...state,\n        showNewListMenu: false,\n    }\n\n}\nfunction updateNewListName(state,newListName) {\n    return {\n        ...state,\n        newListName\n    }\n}\n","import {\n    HIDE_CHANGE_NAME_MENU,\n    HIDE_DELETE_LIST_MENU,\n    HIDE_LIST_SETTINGS,\n    HIDE_SHARE_DIALOG_ONE,\n    HIDE_SHARE_DIALOG_TWO,\n    HIDE_SHARE_MENU,\n    SHOW_CHANGE_NAME_MENU,\n    SHOW_DELETE_LIST_MENU,\n    SHOW_LIST_SETTINGS,\n    SHOW_SHARE_DIALOG_ONE,\n    SHOW_SHARE_DIALOG_TWO,\n    SHOW_SHARE_MENU,\n    UPDATE_LIST_NAME,\n    UPDATE_SHARE_USER\n} from \"../../actions/listSettingsActions\";\n\nconst initialState = {\n    showListSettings:false,\n    listTitle:null,\n    showChangeNameMenu:false,\n    showDeleteListMenu:false,\n    showShareMenu:false,\n    shareWithUser:null,\n    showShareDialogOne:false,\n    showShareDialogTwo:false\n}\n\nexport default function settingsReducer(state = initialState,action) {\n    switch(action.type) {\n        case HIDE_LIST_SETTINGS: return hideListSettings(state)\n        case SHOW_LIST_SETTINGS: return showListSettings(state)\n        case SHOW_CHANGE_NAME_MENU: return showChangeNameMenu(state)\n        case HIDE_CHANGE_NAME_MENU: return hideChangeNameMenu(state)\n        case UPDATE_LIST_NAME: return updateListName(state,action.text)\n        case SHOW_DELETE_LIST_MENU: return showDeleteListMenu(state)\n        case HIDE_DELETE_LIST_MENU: return hideDeleteListMenu(state)\n        case SHOW_SHARE_MENU: return showShareMenu(state)\n        case HIDE_SHARE_MENU: return hideShareMenu(state)\n        case SHOW_SHARE_DIALOG_ONE: return showShareDialogOne(state)\n        case HIDE_SHARE_DIALOG_ONE: return hideShareDialogOne(state)\n        case SHOW_SHARE_DIALOG_TWO: return showShareDialogTwo(state)\n        case HIDE_SHARE_DIALOG_TWO: return hideShareDialogTwo(state)\n        case UPDATE_SHARE_USER: return updateShareUser(state,action.user)\n        default:\n            return state\n    }\n}\n\nfunction updateShareUser(state,shareWithUser){\n    return {\n        ...state,\n        shareWithUser\n    }\n}\n\nfunction showShareDialogTwo(state) {\n    return {\n        ...state,\n        showShareDialogTwo:true\n    }\n}\n\nfunction hideShareDialogTwo(state) {\n    return {\n        ...state,\n        showShareDialogTwo:false\n    }\n}\nfunction showShareDialogOne(state) {\n    return {\n        ...state,\n        showShareDialogOne:true\n    }\n}\n\nfunction hideShareDialogOne(state) {\n    return {\n        ...state,\n        showShareDialogOne:false\n    }\n}\nfunction showShareMenu(state) {\n    return {\n        ...state,\n        showShareMenu:true\n    }\n}\n\nfunction hideShareMenu(state) {\n    return {\n        ...state,\n        showShareMenu:false\n    }\n}\n\nfunction hideDeleteListMenu(state) {\n    return {\n        ...state,\n        showDeleteListMenu: false\n    }\n}\nfunction showDeleteListMenu(state) {\n    return {\n        ...state,\n        showDeleteListMenu:true\n    }\n}\n\nfunction updateListName(state,listTitle){\n    return {\n        ...state,\n        listTitle,\n\n    }\n}\nfunction hideChangeNameMenu(state) {\n    return {\n        ...state,\n        showChangeNameMenu:false\n    }\n}\n\nfunction showChangeNameMenu(state) {\n    return {\n        ...state,\n        showChangeNameMenu:true\n    }\n}\nfunction hideListSettings(state) {\n    return {\n        ...state,\n        showListSettings: false,\n    }\n}\n\nfunction showListSettings(state) {\n    return {\n        ...state,\n        showListSettings: true,\n    }\n}","export const SHOW_REQUEST_MENU = \"showRequestMenu\"\nexport const HIDE_REQUEST_MENU = \"hideRequestMenu\"\nexport const UPDATE_ACTIVE_REQUEST = \"updateActiveRequest\"\nexport const SHOW_REMOVE_MENU = \"showRemoveMenu\"\nexport const HIDE_REMOVE_MENU = \"hideRemoveMenu\"\nexport const UPDATE_SELECTED_USER = \"updateSelectedUser\"\n\nexport function updateSelectedUser(user) {\n    return {\n        type: UPDATE_SELECTED_USER,\n        user\n    }\n}\n\nexport function showRemoveMenuAction() {\n    return {type: SHOW_REMOVE_MENU}\n}\n\nexport function hideRemoveMenuAction() {\n    return {type: HIDE_REMOVE_MENU}\n}\n\n\nexport function updateActiveRequestAction(list) {\n    return {type: UPDATE_ACTIVE_REQUEST, list}\n}\n\nexport function showRequestMenuAction() {\n    return {\n        type: SHOW_REQUEST_MENU\n    }\n}\n\nexport function hideRequestMenuAction() {\n    return {\n        type: HIDE_REQUEST_MENU\n    }\n}","import {\n    HIDE_REMOVE_MENU,\n    HIDE_REQUEST_MENU, SHOW_REMOVE_MENU,\n    SHOW_REQUEST_MENU,\n    UPDATE_ACTIVE_REQUEST,\n    UPDATE_SELECTED_USER\n} from \"../../actions/requestAction\";\n\n\nconst initialState = {\n    activeRequest: null,\n    selectedUser: null,\n    showRequestMenu:false,\n    showRemoveMenu:false,\n\n}\n\nexport default function requestReducer(state = initialState,action) {\n    switch (action.type) {\n        case SHOW_REQUEST_MENU: return showRequestMenu(state)\n        case HIDE_REQUEST_MENU: return hideRequestMenu(state)\n        case UPDATE_ACTIVE_REQUEST: return updateActiveRequest(state,action.list)\n        case UPDATE_SELECTED_USER: return updateSelectedUser(state,action.user)\n        case SHOW_REMOVE_MENU: return showRemoveMenu(state)\n        case HIDE_REMOVE_MENU: return hideRemoveMenu(state)\n        default:\n            return state\n    }\n}\n\nfunction showRemoveMenu(state) {\n    return {\n        ...state,\n        showRemoveMenu:true\n    }\n}\n\nfunction hideRemoveMenu(state) {\n    return {\n        ...state,\n        showRemoveMenu:false\n    }\n}\nfunction updateSelectedUser(state,selectedUser) {\n    return {\n        ...state,\n        selectedUser\n    }\n}\n\nfunction updateActiveRequest(state,activeRequest) {\n    return {\n        ...state,\n        activeRequest\n    }\n}\n\nfunction showRequestMenu(state) {\n    return {\n        ...state,\n        showRequestMenu:true\n    }\n}\n\nfunction hideRequestMenu(state) {\n    return {\n        ...state,\n        showRequestMenu: false\n    }\n}","import {combineReducers} from \"redux\";\r\nimport taskReducer from \"./components/taskReducer\";\r\nimport authReducer from \"./components/authReducer\";\r\nimport priorityMenuReducer from \"./components/priorityMenuReducer\";\r\nimport sortMenuReducer from \"./components/sortMenuReducer\"\r\nimport taskMenuReducer from \"./components/taskMenuReducer\";\r\nimport listReducer from \"./components/listReducer\";\r\nimport newListMenuReducer from \"./components/newListMenuReducer\";\r\nimport settingsReducer from \"./components/settingsReducer\";\r\nimport requestReducer from \"./components/requestReducer\";\r\n\r\nexport default combineReducers(\r\n    {\r\n        tasks:taskReducer,\r\n        auth:authReducer,\r\n        priority:priorityMenuReducer,\r\n        sortMenu:sortMenuReducer,\r\n        taskMenu:taskMenuReducer,\r\n        lists: listReducer,\r\n        newListMenu:newListMenuReducer,\r\n        listSettings:settingsReducer,\r\n        request: requestReducer\r\n    }\r\n)","import { createStore} from \"redux\"\r\nimport rootReducer  from \"./reducer/index\"\r\nexport default createStore(rootReducer)","import store from \"../localStore/store.js\"\r\nimport {\r\n    hideDropDownMenuAction,\r\n    hidePriorityMenuAction,\r\n    hideTaskMenuAction, hideUndoAction, showDropDownMenuAction,\r\n    showPriorityMenuAction,\r\n    showTaskMenuAction, showUndoAction, toggleCompletedListAction, toggleToDoListAction, undoTaskAction\r\n} from \"../localStore/actions/menuActions\";\r\nimport {hideSortFieldAction, showSortFieldAction} from \"../localStore/actions/sortActions\";\r\nimport {setActiveTaskAction} from \"../localStore/actions/taskActions\";\r\n\r\nexport default class AppDataController {\r\n\r\n    static toggleTodoList() {\r\n        const action = toggleToDoListAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static activeTask() {\r\n        return store.getState().tasks.activeTask\r\n    }\r\n\r\n    static showSortMenu() {\r\n        return store.getState().tasks.showSortMenu\r\n    }\r\n\r\n    static hideSortMenu() {\r\n        const action = hideSortFieldAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static openSortFieldMenu() {\r\n        const action = showSortFieldAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static showToDo() {\r\n        return store.getState().tasks.showTodo\r\n    }\r\n    \r\n    static showCompleted() {\r\n        return store.getState().tasks.showCompleted\r\n    }\r\n\r\n    static showDropDownMenu() {\r\n        const action = showDropDownMenuAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static closeMenu() {\r\n        const action = hideDropDownMenuAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static menuIsActive() {\r\n        return store.getState().taskMenu.showDropDownMenu\r\n    }\r\n\r\n    static toggleCompletedList() {\r\n        const action = toggleCompletedListAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static showUndo() {\r\n        const action = showUndoAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static hideUndo() {\r\n        const action = hideUndoAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static undoTask() {\r\n        const action = undoTaskAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static undoIsActive() {\r\n        return store.getState().tasks.showUndo\r\n    }\r\n\r\n    static showPriorityMenu(id) {\r\n        const action = showPriorityMenuAction(id)\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static hidePriorityMenu() {\r\n        const action = hidePriorityMenuAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static showTaskMenu() {\r\n        const action = showTaskMenuAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static hideTaskMenu() {\r\n        const action = hideTaskMenuAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static setActiveTask(id) {\r\n        const action = setActiveTaskAction(id)\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static getLastTask() {\r\n       const {tasks} = store.getState()\r\n        const {length} = tasks.tasks\r\n        if (length == 0) return null\r\n        return tasks[length - 1]\r\n    }\r\n\r\n}","import firebaseConfig from \"./firebaseConfig\"\nimport firebase from \"firebase/compat\";\n\nfirebase.initializeApp(firebaseConfig)\nexport default firebase","export default  {\r\n    apiKey: \"AIzaSyCX-SKr6NJLpnc0-fvxLOC8fORYMNY67AQ\",\r\n    authDomain: \"classproject124-c3fc8.firebaseapp.com\",\r\n    projectId: \"classproject124-c3fc8\",\r\n    storageBucket: \"classproject124-c3fc8.appspot.com\",\r\n    messagingSenderId: \"597806616477\",\r\n    appId: \"1:597806616477:web:0956d0b95073c73c9f6974\",\r\n    measurementId: \"G-FJ0WB34RNT\"\r\n}","import firebase from \"./firebase\"\r\nexport default  firebase.firestore()","export const USERS_COLLECTION = \"users\"\r\nexport const DEFAULT_DOC_ID = \"default\"\r\nexport const LIST_SUBCOLLECTION = \"lists\"\r\nexport const TASK_SUBCOLLECTION = \"tasks\"","import db from \"../db/index\"\r\nimport store from \"../localStore/store\"\r\nimport {updateSortingFieldsAction} from \"../localStore/actions/sortActions\";\r\nimport {updateTasksAction} from \"../localStore/actions/taskActions\";\r\nimport {\r\n    updateOwnedListsAction,\r\n    updatePendingListsAction,\r\n    updateSharedListsAction\r\n} from \"../localStore/actions/listActions\";\r\n\r\nclass DataSyncController {\r\n    _db = db\r\n    _taskSubscription = null\r\n    _sortSubscription = null\r\n    _ownedListSubscription = null\r\n    _pendingListSubscription = null\r\n    _sharedListSubscription = null\r\n\r\n\r\n    setPendingSubscription(query) {\r\n        if (!!this._pendingListSubscription) this._pendingListSubscription()\r\n\r\n        this._pendingListSubscription = query.onSnapshot(snapshot => {\r\n            const list = snapshot.docs.map(doc => doc.data())\r\n            console.log(list)\r\n            store.dispatch(updatePendingListsAction(list))\r\n        })\r\n    }\r\n\r\n    setSharedSubscription(query) {\r\n        if (!!this._sharedListSubscription) this._sharedListSubscription()\r\n\r\n        this._sharedListSubscription = query.onSnapshot(snapshot => {\r\n            const shared = snapshot.docs.map(doc => doc.data())\r\n            store.dispatch(updateSharedListsAction(shared))\r\n        })\r\n    }\r\n\r\n    setTaskSubscription(query) {\r\n        if (!!this._taskSubscription) this._taskSubscription()\r\n\r\n        this._taskSubscription = query.onSnapshot( snapshot => {\r\n            const tasks = snapshot.docs.map(task => task.data())\r\n            const action = updateTasksAction(tasks)\r\n            store.dispatch(action)\r\n        })\r\n    }\r\n\r\n    setOwnedListSubscription(query) {\r\n        if (!!this._ownedListSubscription) this._ownedListSubscription()\r\n\r\n        this._ownedListSubscription = query.onSnapshot(snapshot => {\r\n            const ownedLists = snapshot.docs.map(lists => lists.data())\r\n            const action = updateOwnedListsAction(ownedLists)\r\n            store.dispatch(action)\r\n        })\r\n    }\r\n\r\n    setSortSubscription(query) {\r\n\r\n        this._sortSubscrption = query.onSnapshot(snapshot => {\r\n            const {sortingFields} = snapshot.data()\r\n            const action = updateSortingFieldsAction(sortingFields)\r\n            store.dispatch(action)\r\n        })\r\n\r\n    }\r\n\r\n    clearTaskSub() {\r\n        if (!!this._taskSubscription) this._taskSubscription()\r\n        if (!!this._sortSubscrption) this._sortSubscrption()\r\n        this._taskSubscription = null\r\n        this._sortSubscrption = null\r\n    }\r\n\r\n    clearListSub() {\r\n        if (!!this._ownedListSubscription) this._ownedListSubscription()\r\n        this._ownedListSubscription = null\r\n        if (!!this._sharedListSubscription) this._sharedListSubscription()\r\n        this._sharedListSubscription = null\r\n        if (!!this._pendingListSubscription) this._pendingListSubscription()\r\n        this._pendingListSubscription = null\r\n    }\r\n\r\n    clearAll() {\r\n        this.clearTaskSub()\r\n        this.clearListSub()\r\n    }\r\n}\r\n\r\nexport default new DataSyncController()","import {\n    navToListAction,\n    toggleOwnedListsAction,\n    togglePendingListsAction,\n    toggleSharedListsAction, updateActiveListNameAction\n} from \"../localStore/actions/listActions\";\nimport db from \"../db/index\"\nimport firebase from \"../db/firebase\"\nimport {v4 as uuidv4} from \"uuid\"\nimport store from \"../localStore/store\";\nimport DataSyncController from \"../dataController/DataSyncController\";\nimport {TASK_SUBCOLLECTION, USERS_COLLECTION} from \"../localStore/constants\";\nimport {getActiveListCollection} from \"../dataController/TaskDataController\";\nexport const LIST_COLLECTION = \"lists\"\nexport const SHARE_COLLECTION = \"requests\"\nconst {FieldValue} = firebase.firestore\n\nexport default class ListController {\n\n    static toggleOwnListMenu() {\n        const action = toggleOwnedListsAction()\n        store.dispatch(action)\n    }\n\n    static async sendShareRequest(user) {\n        const doc = await getActiveListCollection().get()\n        if (doc.data().owner == user) return\n\n       await getActiveListCollection().update({\n            pendingUsers: FieldValue.arrayUnion(user)\n        })\n    }\n\n    static async acceptShareRequest(list) {\n        const {email} = firebase.auth().currentUser\n\n        await db.collection(LIST_COLLECTION).doc(list.id).update({\n            pendingUsers: FieldValue.arrayRemove(email),\n            usersSharedWith: FieldValue.arrayUnion(email)\n        })\n\n    }\n\n    static async rejectShareRequest(list) {\n        const {email} = firebase.auth().currentUser\n\n        await db.collection(LIST_COLLECTION).doc(list.id).update({\n            pendingUsers: FieldValue.arrayRemove(email)\n        })\n    }\n\n    static async removeAccess(user) {\n        await getActiveListCollection().update({\n            usersSharedWith: FieldValue.arrayRemove(user)\n        })\n\n        return await getActiveListCollection().get()\n    }\n\n    static toggleSharedListMenu() {\n        const action = toggleSharedListsAction()\n        store.dispatch(action)\n    }\n\n    static togglePendingListMenu() {\n        const action = togglePendingListsAction()\n        store.dispatch(action)\n    }\n\n    static async deleteActiveList() {\n        DataSyncController.clearTaskSub()\n        await getActiveListCollection().delete()\n        store.dispatch(navToListAction(null))\n\n    }\n\n    static async updateListName(title) {\n        await getActiveListCollection().update({\n            title\n        })\n\n        store.dispatch(updateActiveListNameAction(title))\n    }\n\n    static navToList(list) {\n        const action = navToListAction(list)\n        store.dispatch(action)\n        if (!list) return\n\n        DataSyncController\n            .setTaskSubscription(\n                db\n                .collection(LIST_COLLECTION)\n                .doc(list.id)\n                .collection(TASK_SUBCOLLECTION)\n            )\n        DataSyncController\n            .setSortSubscription(\n                db\n                .collection(LIST_COLLECTION)\n                .doc(list.id)\n\n            )\n    }\n\n    static async createList(title) {\n        const id = uuidv4()\n        const owner = firebase.auth().currentUser\n        if (!owner) return\n\n        await db.collection(LIST_COLLECTION).doc(id).set({\n            id,\n            title,\n            owner:owner.email,\n            usersSharedWith:[],\n            pendingUsers:[],\n            sortingFields:[]\n        })\n        const taskID = uuidv4()\n\n        await db\n            .collection(LIST_COLLECTION)\n            .doc(id)\n            .collection(TASK_SUBCOLLECTION)\n            .doc(taskID)\n            .set({\n                isCompleted: false,\n                text: \"\",\n                id:taskID,\n                priority: -1,\n                creationDate: Date.now()\n            })\n\n    }\n}","import store from \"../localStore/store.js\"\r\nimport db from \"../db/index\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {TASK_SUBCOLLECTION} from \"../localStore/constants\"\r\nimport {popStackAction, pushTasksToStackAction} from \"../localStore/actions/taskActions\";\r\nimport {LIST_COLLECTION} from \"../listController\";\r\nconst collectionRef = db.collection(LIST_COLLECTION)\r\n\r\nclass TaskDataController {\r\n\r\n    static async updateTaskText(id,text) {\r\n        const task = await getTask(id)\r\n        await task.update({text})\r\n    } \r\n\r\n    static async toggleTaskCompletion(id) {\r\n        const doc = getTask(id)\r\n        const task = await doc.get()\r\n        if (!task) return \r\n        const {isCompleted} = task.data()\r\n        await doc.update({\r\n            isCompleted:!isCompleted\r\n        })\r\n    }\r\n\r\n    static createTask() {\r\n        if (!getActiveListCollection()) return\r\n        const id = uuidv4()\r\n        getActiveListCollection()\r\n            .collection(TASK_SUBCOLLECTION)\r\n            .doc(id)\r\n            .set({\r\n                isCompleted: false,\r\n                text: \"\",\r\n                id,\r\n                priority: -1,\r\n                creationDate: Date.now()\r\n            })\r\n        return id\r\n    }\r\n\r\n    static async deleteTask(id) {\r\n        const task = await getTask(id)\r\n        if (!task) return\r\n        await task.delete() \r\n    }\r\n\r\n    static async deleteAllCompleted() {\r\n        if (!getActiveListCollection()) return\r\n        const action = pushTasksToStackAction()\r\n        store.dispatch(action)\r\n\r\n        const tasks = await\r\n            getActiveListCollection()\r\n            .collection(TASK_SUBCOLLECTION)\r\n            .where(\"isCompleted\",\"==\",true)\r\n            .get()\r\n\r\n        for (const task of tasks.docs) {\r\n            await task.ref.delete()\r\n        }\r\n    }\r\n\r\n    static todo() {\r\n        return store.getState().\r\n        tasks.tasks.filter(task => task.isCompleted === false)\r\n    }\r\n\r\n    static completed() {\r\n        return store.getState()\r\n            .tasks.tasks.filter(task => task.isCompleted === true)\r\n    }\r\n\r\n    static async updateTaskPriority(id,priority) {\r\n        const task = await  getTask(id)\r\n        await task.update({\r\n            priority\r\n        })\r\n    }\r\n\r\n    static getTask(id) {\r\n        return store.getState().tasks.tasks.find(task => task.id == id)\r\n    }\r\n\r\n    static async undoTaskDelete() {\r\n        const stack = store.getState().tasks.stack\r\n        const restoredState = stack.pop()\r\n        if (!restoredState) return\r\n\r\n        for (const task of restoredState) {\r\n            if (!getTask(task.id).exists) {\r\n                await updateTask(task)\r\n            }\r\n        }\r\n\r\n        const action = popStackAction()\r\n        store.dispatch(action)\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction getTask(id) {\r\n    if (!getActiveListCollection()) return\r\n    return getActiveListCollection().collection(TASK_SUBCOLLECTION).doc(id)\r\n}\r\n\r\nasync function updateTask(task) {\r\n    if (!getActiveListCollection()) return\r\n    await getActiveListCollection().collection(TASK_SUBCOLLECTION).doc(task.id).set(task)\r\n}\r\n\r\nexport function getActiveListCollection() {\r\n    const {activeList} = store.getState().lists\r\n    if (!activeList) return\r\n    return collectionRef.doc(activeList.id)\r\n}\r\n\r\nexport default TaskDataController","import AppDataController from \"../../../modules/dataController/AppDataController\";\r\n\r\nconst classList = {\r\n    0: \"high-priority\",\r\n    1: \"medium-priority\",\r\n    2: \"low-priority\",\r\n\r\n}\r\n\r\nfunction openPriorityMenu(id) {\r\n        AppDataController.hideTaskMenu()\r\n        AppDataController.hideSortMenu()\r\n        AppDataController.showPriorityMenu(id)\r\n        const element = document.getElementsByClassName(\"priority-item\")\r\n        if (element[0]) element[0].focus()\r\n\r\n}\r\n\r\nfunction priorityText(priority) {\r\n    const p = classList[priority]\r\n    return p ? p : \"no-priority\"\r\n}\r\n\r\nexport default function PriorityButton({id,priority,text}) {\r\n    const classes = priority == -1 ? \"no-priority\" : classList[priority]\r\n\r\n    return <button\r\n            aria-label={`Priority Button with ${priorityText(priority)} for task with text ${text}`}\r\n            className={classes + \" priority-icon\"}\r\n            onClick={() => openPriorityMenu(id)}\r\n            >\r\n            </button>\r\n}","import AppDataController from \"./dataController/AppDataController\";\n\nexport default function focusRecentTaskOrLast() {\n    const task = findAppropriateTask()\n    if (!task) return focusActionButton()\n    task.getElementsByClassName(\"task-text\")[0].focus()\n}\n\nfunction findAppropriateTask() {\n    let taskID = AppDataController.activeTask()\n    const lastTask = AppDataController.getLastTask()\n    const lastTaskID = !!lastTask? lastTask.id : null\n\n    if (!taskID) {\n        taskID = lastTaskID\n    }\n\n    if (!taskID) return\n    const task = document.getElementById(taskID)\n    if (!task) return document.getElementById(lastTaskID)\n    return task\n}\n\nfunction focusActionButton() {\n    const actionButton = document.getElementById(\"action-button\")\n    if (!actionButton) return\n    actionButton.focus()\n}\n\n","import \"../../css/task.css\"\r\nimport TaskDataController from \"../../modules/dataController/TaskDataController\"\r\nimport PriorityButton from \"../Priority/PriorityButton/PriorityButton\";\r\nimport {connect} from \"react-redux\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController\";\r\nimport focusRecentTaskOrLast from \"../../modules/focusRecentTaskOrLast\";\r\n/*\r\nprops: {\r\n    text:string;\r\n    isCompleted:boolean\r\n    id:string \r\n}\r\n*/\r\n\r\nasync function shouldDeleteTaskEvent(event,id) {\r\n    const isDelete = event.key === \"Delete\"\r\n    if (isDelete)  {\r\n        const sibling = getSibling(id)\r\n        await TaskDataController.deleteTask(id)\r\n        if (sibling) sibling.focus()\r\n    }\r\n}\r\n\r\nfunction getSibling(id) {\r\n    const task = document.getElementById(id)\r\n    if (!task) return null\r\n    return task.previousElementSibling\r\n}\r\n\r\nfunction openTaskMenu(id) {\r\n\r\n    AppDataController.showTaskMenu()\r\n    AppDataController.hideSortMenu()\r\n    AppDataController.hidePriorityMenu()\r\n    AppDataController.setActiveTask(id)\r\n}\r\n\r\nfunction ariaLabel({priority,isCompleted,text}) {\r\n    const priorityLevels = new Map()\r\n        .set(0,\"High Priorty\")\r\n        .set(-1,\"No Priority\")\r\n        .set(1,\"Medium Priority\")\r\n        .set(2,\"Low Priority\")\r\n\r\n    return `Task with text ${text} has priority level ${priorityLevels.get(priority)} and is ${isCompleted ? \"completed\": \"not completed \"}`\r\n}\r\n\r\nfunction Task(props) {\r\n     const classes = `task-item ${props.isCompleted ? 'completed' : ''} ${props.isSelected ? 'selected-task' : ''}`\r\n    return (\r\n        <div\r\n            aria-label={ariaLabel(props)}\r\n            id={props.id}\r\n            class={classes}\r\n            onKeyDown={(e) => shouldDeleteTaskEvent(e,props.id)}\r\n        >\r\n            <input \r\n                alt='task completion status' \r\n                class='checkbox'\r\n                type=\"checkbox\"\r\n                aria-label={props.isCompleted ? `Mark task with text ${props.text} as to do`: `Mark task with text ${props.text} as completed `}\r\n                value={ props.isCompleted}\r\n                onChange= {(e) => handleCheckBoxEvent(props.id)}\r\n                checked= {props.isCompleted}\r\n            />\r\n\r\n            <button\r\n                aria-label={`To do item with text: ${props.text}`}\r\n                class='task-text'\r\n                alt='task text'\r\n                onClick={() => openTaskMenu(props.id)}\r\n            >\r\n                {props.text}\r\n            </button>\r\n            <PriorityButton text={props.text} id={props.id} priority={props.priority}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction handleTextEvent(id,event) {\r\n    const text = event.currentTarget.value\r\n    TaskDataController.updateTaskText(id,text)\r\n}\r\n\r\nasync function handleCheckBoxEvent(id) {\r\n    await TaskDataController.toggleTaskCompletion(id)\r\n    focusRecentTaskOrLast()\r\n}\r\n\r\n\r\nfunction menuIsOpen(state) {\r\n    return state.showTaskMenu || state.showSortMenu || state.showPriorityMenu\r\n}\r\n\r\nfunction mapToState(state,ownProps) {\r\n    const isSelected = ownProps.id == state.activeTask && menuIsOpen(state)\r\n     return {\r\n         isSelected\r\n     }\r\n}\r\n\r\nexport default connect(mapToState)(Task)","import Task from \"./Task\";\r\nimport \"../../css/container.css\"\r\n\r\n\r\n\r\n\r\n/*\r\nprops:{\r\n    tasks: TaskItem[]\r\n\r\n}\r\n*/\r\nexport default function TaskList(props) {\r\n\r\n    return (\r\n        <div class='container scroll-container'>\r\n            {\r\n            props.tasks.map(task => {\r\n            return <Task \r\n                        {...task}\r\n                        key={task.id}\r\n                    />\r\n            })\r\n            }\r\n        </div>   \r\n    )\r\n    \r\n}","import { faAngleDown, faAngleRight } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { connect } from \"react-redux\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController\"\r\n\r\n\r\nfunction arialLabel({isToDo,isOpen}) {\r\n    if (isToDo) {\r\n        if (isOpen) return \"Close To Do Section\"\r\n        return \"Open To Do Section \"\r\n    }\r\n    else {\r\n        if (isOpen) return \"Close Completed Section\"\r\n        return \"Open Completed Section \"\r\n    }\r\n}\r\nfunction SectionButton(props) {\r\n    const icon = props.isOpen ? faAngleDown : faAngleRight\r\n    return (\r\n        <button\r\n            class=\"drop-down\"\r\n            onClick={(e) => handleOnClick(props.isToDo)}\r\n            aria-label={arialLabel(props)}\r\n        >\r\n            <FontAwesomeIcon icon={icon} />\r\n        </button>\r\n    )\r\n}   \r\n\r\nfunction handleOnClick(isToDo) {\r\n    if (isToDo) {\r\n        AppDataController.toggleTodoList()\r\n    }\r\n    else AppDataController.toggleCompletedList()\r\n}\r\n\r\nfunction mapToState(state,{isToDo}) {\r\n    return {\r\n        isOpen: \r\n            isToDo ? AppDataController.showToDo() \r\n            : AppDataController.showCompleted()\r\n        }\r\n}\r\n\r\nexport default connect(mapToState)(SectionButton)","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSort} from \"@fortawesome/free-solid-svg-icons\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController\";\r\nimport \"../../css/sort_button.css\"\r\n\r\nfunction toggleButton() {\r\n   AppDataController.openSortFieldMenu()\r\n}\r\n\r\nexport default function FilterButton(props) {\r\n   const classes = !props.isToDo ? \"sort-button hide\" : \"sort-button\"\r\n   return  (\r\n       <button\r\n           id=\"filter-button\"\r\n           className={classes}\r\n           onClick={toggleButton}\r\n           aria-label=\"Open Sort Filter\"\r\n       >\r\n            <FontAwesomeIcon icon={faSort}/>\r\n       </button>\r\n      )\r\n}\r\n\r\n\r\n\r\n\r\n","import \"../../css/banner.css\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { faEllipsisV} from \"@fortawesome/free-solid-svg-icons\"\nimport AppDataController from \"../../modules/dataController/AppDataController\";\n\nfunction handleOnClick() {\n    AppDataController.showDropDownMenu()\n}\n\nexport default function DropDownButton({hasCompletedTasks}) {\n    const classNames = !hasCompletedTasks ? \"banner-drop-down hidden\" : \"banner-drop-down\"\n    return (\n        <button\n            aria-label=\"Clear Task Drop Down\"\n            className={classNames}\n            onClick={handleOnClick}\n        >\n            <FontAwesomeIcon icon={ faEllipsisV }/>\n        </button>\n    )\n}","/*\r\n\r\n\r\nprops: {\r\n    text: string;\r\n    command: Function \r\n    icon: FontAwesomeIcon\r\n}\r\n*/\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport AppDataController from \"../../modules/dataController/AppDataController\";\r\n\r\nfunction shouldClose(event) {\r\n    const isEscape = event.key == \"Escape\"\r\n    if (isEscape) AppDataController.closeMenu()\r\n}\r\n\r\nexport default function ActionMenuItem(props) {\r\n\r\n    return (\r\n        <button\r\n            onClick={() => props.command()}\r\n            class=\"action-item\"\r\n            onKeyDown={(e) => shouldClose(e)}\r\n            autoFocus\r\n        >\r\n            { props.icon && <FontAwesomeIcon icon= {props.icon}/> }\r\n            <div class=\"action-text\">\r\n                <p> {props.text} </p>\r\n            </div>\r\n        </button>\r\n    )\r\n}\r\n\r\n","import ActionMenuItem from \"./ActionMenuItem.js\"\r\nimport \"../../css/action_list.css\"\r\nimport TaskDataController from \"../../modules/dataController/TaskDataController.js\"\r\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController.js\"\r\n/*\r\nprops: {\r\n    menuItems: MenuItem[]\r\n}\r\n\r\nmenuItem {\r\n    text: string;\r\n\r\n    command: Function\r\n}\r\n*/\r\n\r\n\r\nfunction deleteAll() {\r\n    TaskDataController.deleteAllCompleted()\r\n    AppDataController.closeMenu()\r\n    AppDataController.showUndo()\r\n    setTimeout( () => {\r\n        AppDataController.hideUndo()\r\n    },3000)\r\n    \r\n}\r\nconst menuItems = [\r\n    {text: \"Clear Completed Tasks\", command:deleteAll, icon: faMinus},\r\n]\r\n\r\n\r\nexport default function ActionMenu(props) {\r\n    return (\r\n        <div >\r\n            <div className='action-container' >\r\n                {menuItems.map(menuItem => {\r\n                    return <ActionMenuItem  {...menuItem} key={menuItem.text}/>\r\n                })}\r\n            </div>\r\n            <div className='overlay' onClick={AppDataController.closeMenu}/>\r\n        </div>\r\n    )\r\n}","import \"../../css/bar.css\"\r\nimport \"../../css/todo.css\"\r\nimport \"../../css/completed.css\"\r\nimport SectionButton from \"./SectionButton\"\r\nimport FilterButton from \"./FilterButton\"\r\nimport DropDownButton from \"../Header/DropDownButton\";\r\nimport ActionMenu from \"../Action Commands/ActionMenu\";\r\n\r\nexport default function SectionBar(props) {\r\n    const classes = `bar ${props.className}`\r\n    return (\r\n        <div class={classes}>\r\n            <SectionButton\r\n                isToDo = { props.className === \"todo-bar\" }\r\n            />\r\n            <h1 class=\"bar-title\"> {props.sectionTitle} </h1>\r\n             <FilterButton isToDo={props.isToDo}/>\r\n            {!props.isToDo && <DropDownButton hasCompletedTasks={props.hasCompletedTask} />}\r\n             { !props.isToDo  &&  props.menuIsActive && <ActionMenu /> }\r\n        </div>  \r\n    )\r\n}","import { connect } from \"react-redux\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController.js\"\r\nimport TaskDataController from \"../../modules/dataController/TaskDataController.js\"\r\nimport TaskList from \"../Tasks/TaskList.js\"\r\nimport SectionBar from \"./SectionBar.js\"\r\n\r\n/*\r\n@props: {\r\n    className: \"todo-bar| completed-bar\";\r\n    sectionTitle: string;\r\n    tasks: TaskItem[]\r\n    showContainer: boolean\r\n}\r\n*/\r\n\r\nfunction SectionContainer(props) {\r\n    return (\r\n\r\n\r\n    <div>\r\n        <SectionBar\r\n            isToDo = {props.isToDo}\r\n            hasCompletedTask = {props.hasCompletedTasks}\r\n            menuIsActive = {props.menuIsActive}\r\n            sectionTitle = {props.sectionTitle}\r\n            className={props.className}\r\n        />\r\n        { props.showContainer && <TaskList tasks={props.tasks} />}\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state,ownProps) {\r\n    const isToDo = ownProps.sectionTitle === \"To Do\"\r\n\r\n    if (isToDo) return { \r\n        tasks: TaskDataController.todo(),\r\n        showContainer: AppDataController.showToDo(),\r\n        isToDo: true,\r\n        showSortMenu: state.showSortMenu\r\n    }\r\n\r\n    const hasCompletedTask = TaskDataController.completed().length > 0\r\n    return {\r\n        tasks: TaskDataController.completed(),\r\n        menuIsActive: AppDataController.menuIsActive(),\r\n        showContainer: AppDataController.showCompleted(),\r\n        hasCompletedTasks:hasCompletedTask,\r\n        isToDo: false,\r\n        showSortMenu: state.showSortMenu\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SectionContainer)","import \"../../css/action_button.css\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController\"\r\nimport TaskDataController from \"../../modules/dataController/TaskDataController\";\r\n\r\nasync function undoTask() {\r\n    await TaskDataController.undoTaskDelete()\r\n    AppDataController.hideUndo()\r\n}\r\n\r\nexport default function UndoButton() {\r\n    return (\r\n        <div class=\"undo\">\r\n            <p> Completed tasks cleared</p>\r\n            <button\r\n                aria-label=\"Undo Cleared Tasks\"\r\n                alt=\"undo task clear\"\r\n                onClick={undoTask}\r\n                autoFocus\r\n            >\r\n                Undo\r\n            </button>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n","import db from \"../db/index\"\r\nimport {USERS_COLLECTION,DEFAULT_DOC_ID} from \"../localStore/constants\"\r\nimport {NAME, PRIORITY, TIME} from \"../sorting/sortingAlgorithm\";\r\nimport {getActiveListCollection} from \"./TaskDataController\";\r\nconst collectionRef = db.collection(USERS_COLLECTION)\r\n\r\n\r\nexport default class TaskOrderController {\r\n\r\n    static async addSortField(field,isAscending) {\r\n        if (!TaskOrderController.hasValidField(field)) return\r\n\r\n        const sortFilters = await getSortFields()\r\n        if (!sortFilters) return\r\n        if (isAlreadyEnabled(field,sortFilters)) return\r\n        else enableFilter(sortFilters,field,!!isAscending)\r\n    }\r\n\r\n    static hasValidField(field) {\r\n        return field == NAME || field == PRIORITY || field == TIME\r\n    }\r\n\r\n    static async changeSortField(old,newField) {\r\n        if (!TaskOrderController.hasValidField(old)) return\r\n        if (!TaskOrderController.hasValidField(newField)) return\r\n\r\n        const sortFilters = await getSortFields()\r\n        const prevField = sortFilters.find(f => f.field == old)\r\n        const hasFieldAlready = sortFilters.find(f => f.field == newField)\r\n        if (!prevField) return\r\n        prevField.field = hasFieldAlready ? old : newField\r\n        await updateSortFields(sortFilters)\r\n    }\r\n\r\n    static async changeAscending(field,isAscending) {\r\n        const sortFilters = await getSortFields()\r\n        const prevField = sortFilters.find(f => f.field == field)\r\n        if (!prevField) return\r\n        prevField.isAscending = !!isAscending\r\n        await updateSortFields(sortFilters)\r\n\r\n\r\n    }\r\n\r\n    static async addRandomField() {\r\n        const sortFilters = await getSortFields()\r\n        if (!sortFilters) return\r\n\r\n        const hasName = !!sortFilters.find(f => f.field == \"name\")\r\n        const hasTime = !!sortFilters.find(f => f.field == \"time\")\r\n        const hasPriority = !!sortFilters.find(f => f.field == \"priority\")\r\n\r\n        if (!hasName) await TaskOrderController.addSortField(\"name\",true)\r\n        else if (!hasTime) await TaskOrderController.addSortField(\"time\",true)\r\n        else if (!hasPriority) await TaskOrderController.addSortField(\"priority\",true)\r\n\r\n\r\n    }\r\n\r\n    static async removeSortField(field) {\r\n        const sortFields = await getSortFields()\r\n        const doc = getDoc()\r\n        if (!sortFields) return\r\n        const newSortingFields = sortFields.filter(f => f.field !== field)\r\n        await updateSortFields(newSortingFields)\r\n    }\r\n\r\n    static async changeSortFieldOrder(field,newIndex) {\r\n        const sortFields = await getSortFields()\r\n        if (!sortFields || newIndex < 0 || newIndex >= sortFields.length) return\r\n\r\n        const currentIndex = getCurrentIndexOfField(field,sortFields)\r\n        if (currentIndex == -1 ) return\r\n\r\n        const entry = sortFields.splice(currentIndex,1)\r\n        sortFields.splice(newIndex,0,entry[0])\r\n\r\n        await updateSortFields(sortFields)\r\n    }\r\n\r\n}\r\n\r\nfunction getDoc() {\r\n    return getActiveListCollection()\r\n}\r\n\r\nasync function getSortFields() {\r\n    const data = await getDoc().get()\r\n    return data ? data.data().sortingFields : null\r\n}\r\n\r\nasync function updateSortFields(sortingFields) {\r\n    const doc = getDoc()\r\n    await doc.update({sortingFields})\r\n}\r\n\r\nfunction getCurrentIndexOfField(field,sortFields) {\r\n        for (let i = 0 ; i < sortFields.length ;i++) {\r\n            const data = sortFields[i]\r\n            if (data.field == field) return i\r\n        }\r\n        return -1\r\n}\r\n\r\nfunction isAlreadyEnabled(field,sortFilters) {\r\n    return !!sortFilters.find(filter => filter.field == field)\r\n}\r\n\r\nasync function enableFilter(sortingFields,field,isAscending) {\r\n    const doc = getDoc()\r\n    sortingFields.push({field,isAscending})\r\n    await updateSortFields(sortingFields)\r\n}\r\n\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus} from \"@fortawesome/free-solid-svg-icons\"\r\nimport TaskOrderController from \"../../modules/dataController/TaskOrderController\";\r\n\r\nasync function addFilterSection() {\r\n  await TaskOrderController.addRandomField()\r\n}\r\n\r\nexport default function AddFilterButton(props) {\r\n    const classes = props.sortingFields.length < 3\r\n        ? \"sortButton sort-button-color\"\r\n        : \"hide\"\r\n\r\n    return (\r\n        <button\r\n            onClick={addFilterSection}\r\n            className={classes}\r\n            aria-label=\"Add a Sort Field\"\r\n            autoFocus\r\n        >\r\n            <span> + Field </span>\r\n        </button>\r\n    )\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faWindowClose} from \"@fortawesome/free-solid-svg-icons\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController\";\r\nimport focusRecentTaskOrLast from \"../../modules/focusRecentTaskOrLast\";\r\n\r\nfunction closeMenu() {\r\n    AppDataController.hideSortMenu()\r\n    const sortCloseButton = document.getElementById(\"filter-button\")\r\n    if (!sortCloseButton) return\r\n    sortCloseButton.focus()\r\n}\r\nexport default function CloseMenuButton(props) {\r\n    return (\r\n        <button\r\n            id=\"sort-close-button\"\r\n            className=\"sort-close-button sort-button-color\"\r\n            aria-label=\"Close Sort Filter\"\r\n            onClick={closeMenu}\r\n        >\r\n           <span> x </span>\r\n        </button>\r\n    )\r\n\r\n}","import TaskOrderController from \"../../../modules/dataController/TaskOrderController\";\r\nimport \"../../../css/sort_entry.css\"\r\nimport {connect} from \"react-redux\"\r\n\r\nfunction EntryOrderButton(props) {\r\n\r\n    return (\r\n        <div>\r\n            <select\r\n                aria-label=\"Change Sorting Order\"\r\n                className=\"sort-order\"\r\n                onChange={ (result) => onOrderChange(props.field,parseInt(result.currentTarget.value))}\r\n                value={props.index}\r\n                autoFocus={props.index == 0}\r\n            >\r\n                {\r\n                    props.sortingFields.map((_,i) => {\r\n                        return <option key={i} value={i}> {i + 1} </option>\r\n                    })\r\n                }\r\n            </select>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nasync function onOrderChange(field,newOrder) {\r\n    console.log(newOrder)\r\n    await TaskOrderController.changeSortFieldOrder(field,newOrder)\r\n}\r\n\r\nfunction mapState(state) {\r\n    return {\r\n        sortingFields:state.tasks.sortingFields\r\n    }\r\n}\r\n\r\nexport default connect(mapState)(EntryOrderButton)\r\n\r\n","import TaskOrderController from \"../../../modules/dataController/TaskOrderController\";\r\nimport \"../../../css/sort_entry.css\"\r\n\r\nfunction change(old,event) {\r\n    TaskOrderController.changeSortField(old,event.currentTarget.value)\r\n}\r\n\r\nexport default function SortCriteriaDropDown(props) {\r\n\r\n    return(\r\n        <div >\r\n            <label> By </label>\r\n            <select\r\n                aria-label=\"Sort By Dropdown\"\r\n                className=\"sort-type\"\r\n                onChange={(event) => change(props.field,event)}\r\n                value={props.field}\r\n            >\r\n                <option value='name' > Name </option>\r\n                <option value=\"time\"> Creation Date</option>\r\n                <option value=\"priority\"> Priority </option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import TaskOrderController from \"../../../modules/dataController/TaskOrderController\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSortAmountUp, faSortAmountDown} from \"@fortawesome/free-solid-svg-icons\"\r\nasync function change(field,value) {\r\n    await TaskOrderController.changeAscending(field,!value)\r\n}\r\n\r\nexport default function IsAscendingButton(props) {\r\n    const icon = props.isAscending ? faSortAmountUp :faSortAmountDown\r\n    return (\r\n        <div>\r\n            <button\r\n                className=\"direction-button\"\r\n                onClick={() => change(props.field,props.isAscending)}\r\n                aria-label={props.isAscending ? \"Sort in Descending Order\" : \"Sort in Ascending Order\"}\r\n            >\r\n                <FontAwesomeIcon icon={icon}></FontAwesomeIcon>\r\n            </button>\r\n        </div>\r\n\r\n    )\r\n}","import TaskOrderController from \"../../../modules/dataController/TaskOrderController\";\r\n\r\n\r\nfunction deleteSort(fieldName) {\r\n    TaskOrderController.removeSortField(fieldName)\r\n}\r\n\r\nexport default function DeleteButton(props) {\r\n\r\n    return (\r\n        <button\r\n            className=\"delete-button\"\r\n            onClick={() => deleteSort(props.field)}\r\n            aria-label=\"Delete Sorting Field\"\r\n        >\r\n            <span> x </span>\r\n        </button>\r\n    )\r\n}\r\n\r\n","import EntryOrderButton from \"./EntryOrderButton\";\r\nimport SortCriteriaDropDown from \"./SortCriteriaDropDown\";\r\nimport IsAscendingButton from \"./isAscendingButton\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport \"../../../css/sort_entry.css\"\r\n/*\r\n@props() {\r\nfield\r\nisAscending\r\nindex\r\n\r\n}\r\n */\r\n\r\nfunction ariaLabel({field,index,isAscending}) {\r\n    return `Sort by ${field} with index ${index} in ${isAscending ? \"ascending\" : \"descending\"} order`\r\n}\r\n\r\nexport default function SortEntryContainer(props) {\r\n    return (\r\n        <div\r\n            className=\"entry-container\"\r\n            aria-label={ariaLabel(props)}\r\n        >\r\n            <EntryOrderButton\r\n                field={props.field}\r\n                index={props.index}\r\n            />\r\n            <SortCriteriaDropDown\r\n                field={props.field}\r\n            />\r\n            <IsAscendingButton\r\n                isAscending={props.isAscending}\r\n                field={props.field}\r\n            />\r\n            <DeleteButton field={props.field}/>\r\n        </div>\r\n    )\r\n}","import \"../../css/sort_container.css\"\r\nimport AddFilterButton from \"./addFilterButton\"\r\nimport CloseMenuButton from \"./CloseMenuButton\"\r\nimport {connect} from \"react-redux\"\r\nimport SortEntryContainer from \"./SortEntry/SortEntryContainer\"\r\n\r\n\r\nfunction SortMenuContainer(props) {\r\n    return (\r\n        <div className=\"sort-container\">\r\n            <div className=\"sort-bar\">\r\n                <h2 className=\"sort-title\"> Sort </h2>\r\n                <div className='sort-section'>\r\n                    <AddFilterButton sortingFields={props.sortingFields}/>\r\n                    <CloseMenuButton/>\r\n                </div>\r\n            </div>\r\n            <div class='field-container'>\r\n                {\r\n                    props.sortingFields.map((data,index) => {\r\n                        return <SortEntryContainer key={index} index={index} {...data} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction mapToState(state) {\r\n    return {\r\n        sortingFields: state.tasks.sortingFields\r\n    }\r\n}\r\n\r\nexport default connect(mapToState)(SortMenuContainer)","import \"../../../css/task_menu.css\"\nimport AppDataController from \"../../../modules/dataController/AppDataController\";\nimport focusRecentTaskOrLast from \"../../../modules/focusRecentTaskOrLast\";\n\nfunction closeMenu() {\n    AppDataController.hideTaskMenu()\n    focusRecentTaskOrLast()\n}\n\n\n\nexport default function TaskMenuCloseButton(props) {\n    return (\n        <button\n            className=\"task-menu-close-button\"\n            onClick={closeMenu}\n            aria-label=\"Close Task Menu\"\n        >\n            Close\n        </button>\n    )\n}","import \"../../../css/task_menu.css\"\nimport {connect} from \"react-redux\";\nimport TaskDataController from \"../../../modules/dataController/TaskDataController\";\nimport AppDataController from \"../../../modules/dataController/AppDataController\";\nimport focusRecentTaskOrLast from \"../../../modules/focusRecentTaskOrLast\";\n\nasync function deleteTask(id) {\n    if (!id) return\n    AppDataController.hideTaskMenu()\n    await TaskDataController.deleteTask(id)\n    focusRecentTaskOrLast()\n\n}\n\nfunction TaskMenuDeleteButton({activeTask}) {\n\n\n    return (\n        <button\n            className=\"task-menu-delete-button\"\n            onClick={() => deleteTask(activeTask)}\n            aria-label=\"Delete Selected Task\"\n        >\n            Delete\n        </button>\n    )\n}\n\n\nfunction stateProps(state) {\n    return {\n        activeTask:state.tasks.activeTask\n    }\n}\n\n\nexport default connect(stateProps)(TaskMenuDeleteButton)\n\n\n\n","import TaskMenuCloseButton from \"./TaskMenuCloseButton\";\nimport TaskMenuDeleteButton from \"./TaskMenuDeleteButton\";\nimport \"../../../css/task_menu.css\"\n\nexport default function TaskMenuBar(props) {\n    return (\n        <div className=\"task-menu-bar\">\n            <h2 className=\"task-menu-title\"> Task </h2>\n            <div>\n                <TaskMenuDeleteButton/>\n                <TaskMenuCloseButton/>\n            </div>\n\n        </div>\n    )\n}","import TaskDataController from \"../../modules/dataController/TaskDataController\";\nimport {connect} from \"react-redux\";\nimport AppDataController from \"../../modules/dataController/AppDataController\";\n\nasync function updateActiveTask(event,id) {\n    const text = event.currentTarget.value\n    await TaskDataController.updateTaskText(id,text)\n}\n\nasync function shouldCreateNewTask(event) {\n    const isEnter = event.key === \"Enter\"\n    const inputForm = event.currentTarget\n    if (isEnter) {\n        const newID = await TaskDataController.createTask()\n        AppDataController.setActiveTask(newID)\n        inputForm.value = \"\"\n\n\n\n    }\n}\n\n\n\nfunction TaskEditor({activeTask,task}) {\n\n    return (\n        <div\n            className=\"task-editor-container\"\n        >\n          <input\n              id=\"task-editor\"\n              aria-label=\"Set Task Text\"\n              value={task ? task.text : \"\"}\n              autoFocus\n              onKeyPress={(e) => shouldCreateNewTask(e)}\n              onChange={ (e) => updateActiveTask(e,activeTask) }\n          />\n        </div>\n    )\n\n}\n\nfunction stateMap(state) {\n\n    return {\n        activeTask:state.tasks.activeTask,\n        task: TaskDataController.getTask(state.tasks.activeTask)\n    }\n}\n\nexport default connect(stateMap)(TaskEditor)","import TaskMenuBar from \"./TaskMenuBar/TaskMenuBar\";\nimport TaskEditor from \"./TaskEditor\";\nimport \"../../css/task_menu.css\"\n\nexport default function TaskMenu(props) {\n    return (\n        <div className=\"task-menu-container\">\n            <TaskMenuBar/>\n            <TaskEditor/>\n        </div>\n    )\n}","\r\nconst classes = {\r\n    0: \"high-priority\",\r\n    1: \"medium-priority\",\r\n    2: \"low-priority\",\r\n}\r\n\r\n\r\nexport default function PriorityIcon({priority}) {\r\n    const classList = priority == -1 ? \"no-priority\" : classes[priority]\r\n    return (\r\n        <div className={classList + \" priority-icon\"}/>\r\n    )\r\n}","import PriorityIcon from \"../PriorityIcon\";\r\nimport {connect} from \"react-redux\"\r\nimport TaskDataController from \"../../../modules/dataController/TaskDataController\";\r\n\r\nfunction changePriority(id,priority) {\r\n    TaskDataController.updateTaskPriority(id,priority)\r\n}\r\n\r\nfunction PriorityItem(props) {\r\n    const isSelection = props.priority == props.selection\r\n    const classes = isSelection ? \"priority-item priority-selection\"\r\n        : \"priority-item\"\r\n\r\n    return (\r\n        <button\r\n            aria-label={`Set Task Priority to ${props.priorityText}`}\r\n            className={classes}\r\n            tabIndex={0}\r\n            onClick={() => changePriority(props.id,props.priority)}\r\n            autoFocus={isSelection}\r\n        >\r\n            <span> {props.priorityText}</span>\r\n            <PriorityIcon priority={props.priority}/>\r\n        </button>\r\n    )\r\n}\r\n\r\nfunction mapToState(state) {\r\n    const id = state.priority.priorityMenuActiveID\r\n    const selection = state.tasks.tasks.find(task => task.id ==id).priority\r\n\r\n    return {\r\n        id,\r\n        selection,\r\n    }\r\n}\r\n\r\nexport default connect(mapToState)(PriorityItem)","import AppDataController from \"../../../modules/dataController/AppDataController\";\r\nimport focusRecentTaskOrLast from \"../../../modules/focusRecentTaskOrLast\";\r\n\r\nfunction closePriorityMenu() {\r\n    AppDataController.hidePriorityMenu()\r\n    focusRecentTaskOrLast()\r\n}\r\n\r\n\r\nexport default function PriorityCloseButton(props) {\r\n    return <button\r\n            className=\"priority-close-button\"\r\n            onClick={closePriorityMenu}\r\n            aria-label=\"Close Priority Selection Menu\"\r\n            >\r\n                <span> x </span>\r\n            </button>\r\n}","import PriorityCloseButton from \"./PriorityCloseButton\"\r\n\r\n\r\n\r\nexport default function PriorityMenuBar(props) {\r\n\r\n\r\n    return (\r\n        <div className=\"priority-menu-bar\">\r\n            <h2 className=\"priority-title\"> Priority </h2>\r\n            <PriorityCloseButton/>\r\n        </div>\r\n    )\r\n}","import PriorityItem from \"./PriorityItem\";\r\nimport PriorityMenuBar from \"./PriorityMenuBar\"\r\nimport \"../../../css/priority.css\"\r\n\r\nconst priorityData = [\r\n    {priorityText:\"No Priority\",priority:-1},\r\n    {priorityText: \"Low Priority\", priority:2},\r\n    {priorityText: \"Medium Priority\", priority:1},\r\n    {priorityText: \"High Priority\", priority:0}\r\n]\r\n\r\nexport default function PriorityMenuContainer(props) {\r\n    return (\r\n        <div className=\"priority-menu-container\">\r\n            <PriorityMenuBar/>\r\n            <div className=\"priority-item-container\">\r\n                {\r\n                    priorityData.map((data,index)=> {\r\n                        return <PriorityItem  index={index} key ={index} {...data}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import AppDataController from \"../../modules/dataController/AppDataController\"\r\nimport \"../../css/action_button.css\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\"\r\nimport TaskDataController from \"../../modules/dataController/TaskDataController\";\r\n\r\nfunction handleOnClick() {\r\n    const taskID = TaskDataController.createTask()\r\n    AppDataController.setActiveTask(taskID)\r\n    AppDataController.showTaskMenu()\r\n}\r\n\r\nexport default function ActionButton() {\r\n    return (\r\n        <button\r\n            id=\"action-button\"\r\n            aria-label=\"Add new Task\"\r\n            class=\"action-button\"\r\n            onClick={handleOnClick}\r\n            autoFocus\r\n        >\r\n        <FontAwesomeIcon icon={faPlus} />\r\n        </button>\r\n    )\r\n}\r\n\r\n","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport store from \"../../modules/localStore/store\";\nimport {showListSettingsAction} from \"../../modules/localStore/actions/listSettingsActions\";\n\n\n\n\nexport default function SettingsButton(props) {\n    const classes = \"sort-button black\"\n    //@todo\n    return (\n        <button\n            className={ classes}\n            onClick={showSettings}\n        >\n         <FontAwesomeIcon icon={faCog}/>\n         </button>\n    )\n}\n\nfunction showSettings() {\n    store.dispatch(showListSettingsAction())\n}","/**\n *\n * @param props {\n *     heading:string;\n * }\n */\nexport default function ActiveListHeading({heading}) {\n\n    return (\n        <h1> {heading} </h1>\n    )\n}","import ListController from \"../../modules/listController\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAngleLeft} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function BackButton() {\n\n    return <button\n        onClick={goToListMenu}\n        className=\"drop-down black menu-item\"\n    >\n        <FontAwesomeIcon icon={faAngleLeft}/>\n    </button>\n}\n\nfunction goToListMenu() {\n    ListController.navToList(null)\n}","import SettingsButton from \"./SettingsButton\";\nimport {connect} from \"react-redux\";\nimport ActiveListHeading from \"./ActiveListHeading\";\nimport BackButton from \"./BackButton\";\nimport firebase from \"../../modules/db/firebase\"\n/**\n * @props {\n *     activeList\n * }\n */\nfunction ActiveListBanner({activeList}) {\n    const isOwnedList =  !!firebase.auth().currentUser ? activeList.owner == firebase.auth().currentUser.email : false\n\n    return (\n        <div className=\"active-list-banner\">\n            <BackButton/>\n            <ActiveListHeading heading={activeList.title}/>\n           <SettingsButton isOwnedList={isOwnedList}/>\n        </div>\n    )\n}\n\nfunction mapToState({lists}) {\n    const {activeList} = lists\n    return {activeList}\n}\n\nexport default connect(mapToState)(ActiveListBanner)","import \"../../css/global.css\"\nimport \"typeface-roboto\"\nimport { connect } from \"react-redux\";\nimport SectionContainer from \"../Section/SectionContainer\";\nimport UndoButton from \"../Undo/UndoButton\";\nimport SortMenuContainer from \"../SortMenu/SortMenuContainer\";\nimport TaskMenu from \"../TaskMenu/TaskMenu\";\nimport PriorityMenu from \"../../components/Priority/PriorityMenu/PriorityMenuContainer\"\nimport ActionButton from \"../Action Commands/ActionButton\";\nimport ActiveListBanner from \"../ActiveListBanner\";\n\nfunction Main(\n    {showTaskMenu,showUndo,showSortMenu,showPriorityMenu}\n) {\n    return (\n    <div>\n        <ActiveListBanner/>\n        <SectionContainer\n            className='todo-bar'\n            sectionTitle=\"To Do\"\n        />\n        {\n            !showSortMenu && !showPriorityMenu &&\n            <SectionContainer\n                className='completed-bar'\n                sectionTitle=\"Completed\"\n            />\n        }\n        <ActionButton/>\n        { showUndo && <UndoButton/> }\n        { showSortMenu && <SortMenuContainer/> }\n        { showPriorityMenu && <PriorityMenu/> }\n        { showTaskMenu && <TaskMenu/> }\n\n    </div>\n    )\n}\n\nfunction mapToState(state) {\n    return {\n        showUndo: state.tasks.showUndo,\n        showSortMenu: state.sortMenu.showSortMenu,\n        showPriorityMenu: state.priority.showPriorityMenu,\n        showTaskMenu: state.taskMenu.showTaskMenu,\n        showListSettings: state.listSettings.showListSettings\n    }\n}\nexport default connect(mapToState)(Main)","import \"../../css/banner.css\"\r\nimport DropDownButton from \"./DropDownButton\"\r\n\r\nexport default function Header(props) {\r\n\r\n    return (\r\n        <div class=\"banner\">\r\n            <h1 class=\"title\"> Todoiz.IO</h1>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import {StyledFirebaseAuth} from \"react-firebaseui\";\nimport firebase from \"../../modules/db/firebase\"\nimport \"firebase/compat/auth\"\n\nconst uiConfig = {\n    signInSuccessUrl: \"/cs124\",\n    signInFlow: \"popup\",\n    signInOptions: [\n        firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    ]\n}\n\nexport default function SignInScreen() {\n    return <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\n}","import  \"../../../css/list.css\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChevronDown,faChevronRight} from \"@fortawesome/free-solid-svg-icons\";\nimport {PENDING_LISTS, SHARED_LISTS, YOUR_LISTS} from \"../index\";\nimport ListController from \"../../../modules/listController\";\n\n/**\n *\n * @param props {\n *     heading: string;\n *     showList: boolean;\n *\n * }\n */\nexport default function ListBanner({classes,heading,showList}) {\n    return (\n        <div className={\"list-banner \" +classes}>\n            <button\n                className={\"list-banner-toggle \" + classes}\n                onClick={() => toggleList(heading)}\n            >\n                <FontAwesomeIcon icon={showList ? faChevronDown : faChevronRight}/>\n            </button>\n            <h2 className=\"list-banner-heading\"> { heading }</h2>\n        </div>\n    )\n}\n\n\nfunction toggleList(listType) {\n    switch(listType) {\n        case YOUR_LISTS: return ListController.toggleOwnListMenu()\n        case SHARED_LISTS: return ListController.toggleSharedListMenu()\n        case PENDING_LISTS: return ListController.togglePendingListMenu()\n    }\n}","import ListController from \"../../../modules/listController\";\nimport {PENDING_LISTS, SHARED_LISTS, YOUR_LISTS} from \"../index\";\nimport store from \"../../../modules/localStore/store\";\nimport {showRequestMenuAction, updateActiveRequestAction} from \"../../../modules/localStore/actions/requestAction\";\n\n\n/**\n *\n * @param props {\n *     list\n *\n *     ...;\n * }\n */\nexport default function ListItem({heading,list}) {\n\n    return (\n       <button\n           onClick={() => navToList(heading,list)}\n           className=\"list-item\"\n       >\n           {list.title}\n       </button>\n    )\n}\n\n\nfunction showRequest(list) {\n    store.dispatch(updateActiveRequestAction(list))\n    store.dispatch(showRequestMenuAction())\n}\n\nfunction navToList(heading,list) {\n    switch(heading) {\n        case YOUR_LISTS: return ListController.navToList(list);\n        case PENDING_LISTS: return showRequest(list)\n        case SHARED_LISTS: return ListController.navToList(list)\n    }\n\n}","import store from \"../../../modules/localStore/store\";\nimport {showNewListMenuAction} from \"../../../modules/localStore/actions/newListMenuAction\";\n\n\nexport default function NewListButton(props) {\n\n    return (\n        <button\n            onClick={showMenu}\n            className=\"list-item\"\n        >\n            Add New List\n        </button>\n    )\n}\n\n\nfunction showMenu() {\n    store.dispatch(showNewListMenuAction())\n}","/**\n *\n *\n * @param props {\n *     showList: boolean;\n *     listItems: listItem[];\n *     heading:string;\n * }\n *\n * interface listItem {\n *     listID: string;\n *     title:string;\n * }\n */\nimport ListItem from \"./ListItem\";\nimport {YOUR_LISTS} from \"../index\";\nimport NewListButton from \"./NewListButton\";\n\nexport default function ListItems({heading,showList,listItems}) {\n\n\n    return (\n        <div className={showList ? \"list-item-container\" : \"hide-list\"}>\n            {\n                heading === YOUR_LISTS &&  <NewListButton/>\n            }\n            {\n                listItems.map((list,index) => <ListItem key={index} heading={heading} list={list}/>)\n            }\n        </div>\n    )\n}","import ListBanner from \"./ListBanner\";\nimport ListItems from \"./ListItems\"\n\n/**\n *\n * @param props: {\n *     heading:string;\n *     listItems: listItem[];\n *     showList: boolean;\n *     classes:string;\n * }\n */\nexport default function ListContainer({classes,heading,listItems,showList}) {\n    return (\n        <div className={\"list-container\"}>\n            <ListBanner\n                heading={heading}\n                classes={classes}\n                showList={showList}\n            />\n            <ListItems\n                heading={heading}\n                listItems={listItems}\n                showList={showList}\n            />\n        </div>\n    )\n}","import ListContainer from \"./ListContainer\";\nimport {connect} from \"react-redux\";\n\n\nexport const YOUR_LISTS = \"Your Lists\"\nexport const SHARED_LISTS = \"Shared Lists\"\nexport const PENDING_LISTS = \"Pending Shared Lists\"\n\nfunction ListComponent(props) {\n    return (\n        <div>\n            <ListContainer\n                heading={YOUR_LISTS}\n                listItems={props.ownedLists}\n                showList={props.showOwnedLists}\n                classes=\"orange\"\n            />\n            <ListContainer\n                heading={SHARED_LISTS}\n                listItems={props.sharedLists}\n                showList={props.showSharedLists}\n                classes=\"red\"\n            />\n            <ListContainer\n                heading={PENDING_LISTS}\n                listItems={props.pendingLists}\n                showList={props.showPendingLists}\n                classes=\"grey\"\n            />\n        </div>\n    )\n}\n\n\nfunction mapToState({lists}) {\n    const {\n        ownedLists,\n        showOwnedLists,\n        sharedLists,\n        showSharedLists,\n        pendingLists,\n        showPendingLists\n    } = lists\n\n    return {\n        ownedLists,\n        showOwnedLists,\n        sharedLists,\n        showSharedLists,\n        pendingLists,\n        showPendingLists\n    }\n}\n\n\nexport default connect(mapToState)(ListComponent)\n\n\n","import \"../../css/dialog.css\"\n\n\n\nexport default function Overlay(props) {\n    return (\n        <div>\n            <div className=\"dialog-overlay\"/>\n            {props.children }\n        </div>\n    )\n}","\n\nexport default function Menu(props) {\n    return (\n        <div className=\"dialog-menu\">\n            <div className=\"dialog-menu-container\">\n                {props.children}\n            </div>\n        </div>\n    )\n}","\nexport default function DialogHeading({heading}) {\n    return (\n        <div className=\"dialog-banner\">\n            <h2 className=\"dialog-heading\"> {heading} </h2>\n        </div>\n    )\n}","import store from \"../../../modules/localStore/store\";\nimport {updateNewListName} from \"../../../modules/localStore/actions/newListMenuAction\";\n\n\nexport default function ListName(props) {\n\n    return (\n        <div className=\"dialog-item\">\n            <input onChange={(e) => updateText(e)} placeholder=\"Type in a List Name\"/>\n        </div>\n\n    )\n}\n\n\nfunction updateText(event) {\n    store.dispatch(updateNewListName(event.currentTarget.value))\n}","/**\n *\n * @param props {\n *     text:string;\n *     command: Function;\n *     classes: string;\n * }\n */\n\nexport default function DialogButton({text,command,classes}) {\n    return (\n        <button\n            className={\"dialog-button \" + classes}\n            onClick={() => command()}\n        >\n            {text}\n        </button>\n    )\n}","/**\n *\n * @props {\n *     leftText:string;\n *     leftCommand:Function\n *     leftClasses:string;\n *\n *     rightText:string;\n *     rightCommand:Function\n *     rightClasses:string;\n * }\n */\nimport DialogButton from \"./DialogButton\";\n\nexport default function TwoButtonMenu(props) {\n\n    return (\n        <div className=\"dialog-two-button-container\">\n            <DialogButton\n                text={props.leftText}\n                classes={props.leftClasses}\n                command={props.leftCommand}\n            />\n            <DialogButton\n                text={props.rightText}\n                classes={props.rightClasses}\n                command={props.rightCommand}\n            />\n        </div>\n    )\n}","import Overlay from \"../../Dialog/Overlay\";\nimport Menu from \"../../Dialog/Menu\";\nimport DialogHeading from \"../../Dialog/DialogHeading\";\nimport ListName from \"./ListName\";\nimport TwoButtonMenu from \"../../Dialog/TwoButtonMenu\";\nimport store from \"../../../modules/localStore/store\";\nimport {\n    hideNewListMenuAction,\n    updateNewListName\n} from \"../../../modules/localStore/actions/newListMenuAction\";\n\nimport ListController from \"../../../modules/listController\";\nexport default function NewListMenu() {\n    return (\n        <Overlay>\n            <Menu>\n                <DialogHeading heading=\"New List\"/>\n                <ListName/>\n                <TwoButtonMenu\n                    leftText=\"Confirm\"\n                    leftClasses=\"\"\n                    leftCommand={ confirmNewList}\n                    rightText=\"Cancel\"\n                    rightClasses=\"\"\n                    rightCommand={closeMenu}\n                />\n            </Menu>\n        </Overlay>\n    )\n}\n\n\nfunction confirmNewList() {\n    const {newListName} = store.getState().newListMenu\n    if (newListName === \"\") return\n    ListController.createList(newListName)\n    closeMenu()\n}\n\nfunction closeMenu() {\n    store.dispatch(updateNewListName(\"\"))\n    store.dispatch(hideNewListMenuAction())\n}\n\n","import {connect} from \"react-redux\";\nimport \"../../css/list_settings.css\"\n\nfunction ListSettingsHeading({activeList}) {\n    return (\n        <div className=\"list-settings-heading orange\">\n            <h1>{activeList ? activeList.title : \"\"}</h1>\n        </div>\n    )\n}\n\n\nfunction mapToState({lists}) {\n    const {activeList} = lists\n    return {\n        activeList\n    }\n}\n\n\nexport default connect(mapToState)(ListSettingsHeading)","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAngleLeft} from \"@fortawesome/free-solid-svg-icons\";\nimport store from \"../../modules/localStore/store\";\nimport {hideListSettingsAction} from \"../../modules/localStore/actions/listSettingsActions\";\n\n\nexport default function CloseSettingsButton() {\n    return (\n        <button\n            className=\"list-settings-button\"\n            onClick={closeSettings}\n        >\n            <FontAwesomeIcon icon={faAngleLeft}/>\n        </button>\n    )\n\n}\n\nfunction closeSettings() {\n    store.dispatch(hideListSettingsAction())\n}","import CloseSettingsButton from \"./CloseSettingsButton\";\n\n\nexport default function ListSettingsBanner() {\n    return (\n        <div className=\"list-settings-banner red\">\n            <CloseSettingsButton/>\n            <h2> List Settings </h2>\n        </div>\n    )\n}","/**\n *\n * @param props {\n *     command: Function,\n *     name:string;\n * }\n */\n\nimport firebase from \"../../modules/db/firebase\"\nexport default function SettingsCommand({activeList,command,name,_private}) {\n    const isAllowed = _private == false ? true : activeList && activeList.owner == firebase.auth().currentUser.email\n\n    const classes = isAllowed && _private !== \"only\" || (!isAllowed && _private == \"only\") ? \"list-settings-command\" : \"hidden\"\n\n    return (\n            <button\n                className={classes}\n                onClick={() => command()}\n            >\n                {name}\n            </button>\n    )\n}","import SettingsCommand from \"./SettingsCommand\";\nimport store from \"../../modules/localStore/store\";\nimport {\n    hideListSettingsAction,\n    showChangeNameMenuAction,\n    showDeleteListMenuAction, showRemoveSharedMenuAction,\n    showShareMenuAction\n} from \"../../modules/localStore/actions/listSettingsActions\";\nimport firebase from \"../../modules/db/firebase\"\nimport DataSyncController from \"../../modules/dataController/DataSyncController\";\nimport {updateAuthStatusAction} from \"../../modules/localStore/actions/authActions\";\n\nexport default function SettingsCommandContainer({activeList}) {\n    return (\n    <div className=\"list-settings-container\">\n        {commands.map((command,index) => <SettingsCommand activeList={activeList} key={index} {...command}/>)}\n    </div>\n    )\n}\n\nconst commands = [\n    {\n        name:\"Change List Name\",\n        command:showChangeNameMenu,\n        _private:true,\n    },\n    {\n        name:\"Manage Share Settings\",\n        command: showShareMenu,\n        _private:true,\n    },\n    {\n        name:\"Delete List\",\n        command: showDeleteListMenu,\n        _private:true ,\n    },\n    {\n        name: \"Remove From Shared\",\n        command: showRemoveSharedListMenu,\n        _private: \"only\"\n    },\n    {\n        name:\"Log Out\",\n        command: logOut,\n        _private:false,\n    },\n\n]\n\nfunction showRemoveSharedListMenu() {\n store.dispatch(showRemoveSharedMenuAction())\n}\n\nfunction showShareMenu() {\n    store.dispatch(showShareMenuAction())\n}\n\nasync function logOut() {\n    DataSyncController.clearAll()\n    await firebase.auth().signOut()\n    store.dispatch(hideListSettingsAction())\n    store.dispatch(updateAuthStatusAction(false))\n}\n\nfunction showDeleteListMenu() {\n    store.dispatch(showDeleteListMenuAction())\n}\n\nfunction showChangeNameMenu() {\n    store.dispatch(showChangeNameMenuAction())\n}","import \"../../css/dialog.css\"\n/**\n *\n * @props {\n *     placeholder:string;\n *     changeEvent:(event) => void\n * }\n */\nexport default function TextInput({placeholder,changeEvent}) {\n    return (\n        <div className=\"dialog-input-container\">\n            <input\n                className=\"dialog-input\"\n                placeholder={placeholder}\n                onChange={(e) =>changeEvent((e)) }\n            />\n        </div>\n    )\n}","import Overlay from \"../../Dialog/Overlay\";\nimport Menu from \"../../Dialog/Menu\";\nimport TwoButtonMenu from \"../../Dialog/TwoButtonMenu\";\nimport DialogHeading from \"../../Dialog/DialogHeading\";\nimport store from \"../../../modules/localStore/store\";\nimport {hideChangeNameMenuAction, updateListNameAction} from \"../../../modules/localStore/actions/listSettingsActions\";\nimport TextInput from \"../../Dialog/TextInput\";\nimport ListController from \"../../../modules/listController\";\n\n\nexport default function ChangeNameMenu() {\n    return (\n       <Overlay>\n           <Menu>\n               <DialogHeading heading=\"list Name\"/>\n               <TextInput\n                   placeholder=\"Enter List Name\"\n                   changeEvent={updateName}\n               />\n               <TwoButtonMenu\n                   leftText=\"Confirm\"\n                   leftClasses=\"\"\n                   leftCommand={setListName}\n                   rightText=\"Cancel\"\n                   rightClasses=\"\"\n                   rightCommand={hideMenu}\n               />\n           </Menu>\n       </Overlay>\n    )\n}\n\n\nasync function setListName() {\n    const name = store.getState().listSettings.listTitle\n    if (!name) return\n    await ListController.updateListName(name)\n    store.dispatch(updateListNameAction(null))\n    hideMenu()\n\n}\n\nfunction updateName(e) {\n    const text = e.currentTarget.value\n    store.dispatch(updateListNameAction(text))\n\n}\nfunction hideMenu() {\n    store.dispatch(hideChangeNameMenuAction())\n}","\n\n\nexport default function DialogText({text}) {\n    return (\n        <div className=\"dialog-text-container\">\n            <p> {text} </p>\n        </div>\n    )\n}","import Overlay from \"../../Dialog/Overlay\";\nimport Menu from \"../../Dialog/Menu\";\nimport DialogHeading from \"../../Dialog/DialogHeading\";\nimport TwoButtonMenu from \"../../Dialog/TwoButtonMenu\";\nimport store from \"../../../modules/localStore/store\";\nimport {\n    hideDeleteListMenuAction,\n    hideListSettingsAction\n} from \"../../../modules/localStore/actions/listSettingsActions\";\nimport ListController from \"../../../modules/listController\";\nimport DialogText from \"../../Dialog/DialogText\";\n\n\nexport default function DeleteListMenu() {\n\n    return (\n        <Overlay>\n            <Menu>\n                <DialogHeading heading=\"Delete List\"/>\n                <DialogText\n                    text=\"Are you sure you want to delete this list?\"\n                />\n                <TwoButtonMenu\n                    leftText=\"Yes\"\n                    leftClasses=\"red\"\n                    leftCommand={deleteList}\n\n                    rightText=\"Cancel\"\n                    rightClasses=\"grey\"\n                    rightCommand={hideMenu}\n                />\n            </Menu>\n        </Overlay>\n    )\n}\n\n\nasync function deleteList() {\n    await ListController.deleteActiveList()\n    hideMenu()\n    store.dispatch(hideListSettingsAction())\n}\n\n\nfunction hideMenu() {\n    store.dispatch(hideDeleteListMenuAction())\n}","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAngleLeft} from \"@fortawesome/free-solid-svg-icons\";\nimport store from \"../../modules/localStore/store\";\nimport {hideShareMenuAction} from \"../../modules/localStore/actions/listSettingsActions\";\n\nexport default function ListSettingsShareBanner() {\n    return (\n        <div className=\"list-settings-banner red\">\n            <button\n                className=\"list-settings-button\"\n                onClick={closeShareSettings}\n            >\n                <FontAwesomeIcon icon={faAngleLeft}/>\n            </button>\n            <h2> Share Setting </h2>\n        </div>\n    )\n}\n\nfunction closeShareSettings() {\n    store.dispatch(hideShareMenuAction())\n}","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport store from \"../../modules/localStore/store\";\nimport {showShareDialogOneAction} from \"../../modules/localStore/actions/listSettingsActions\";\n\nexport default function ShareMenuBanner() {\n    return (\n        <div className=\" share-banner grey\">\n            <button\n                className=\"button\"\n                onClick={openShareMenu}\n            >\n                <FontAwesomeIcon icon={faPlus}/>\n            </button>\n            <h2> Users With Access </h2>\n        </div>\n    )\n}\n\n\nfunction openShareMenu() {\n    store.dispatch(showShareDialogOneAction())\n}","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport store from \"../../modules/localStore/store\";\nimport {showRemoveMenuAction, updateSelectedUser} from \"../../modules/localStore/actions/requestAction\";\n\nexport default function User({email}) {\n    return (\n       <div className=\"users-container\">\n           <p> {email}</p>\n           <button\n               className=\"button\"\n               onClick={() => showRemoveUserDialog(email)}\n           >\n               <FontAwesomeIcon icon={faTimesCircle}/>\n           </button>\n       </div>\n    )\n}\n\nfunction showRemoveUserDialog(user) {\n    store.dispatch(updateSelectedUser(user))\n    store.dispatch(showRemoveMenuAction())\n\n}","import User from \"./User\";\nimport {connect} from \"react-redux\";\n\n function UsersContainer({activeList}) {\n    return (\n        <div>\n            {activeList.usersSharedWith.map(user => <User email={user}/> )}\n        </div>\n    )\n}\n\nfunction mapToState({lists}) {\n     const {activeList} = lists\n     return {activeList}\n}\n\nexport default connect(mapToState)(UsersContainer)","import DialogButton from \"./DialogButton\";\n\nexport default function SingleButtonMenu({text,classes,command}) {\n    return (\n        <div className=\"dialog-button-container\">\n            <DialogButton\n                text={text}\n                classes={classes}\n                command={command}\n            />\n        </div>\n    )\n}","import Overlay from \"../Dialog/Overlay\";\nimport DialogHeading from \"../Dialog/DialogHeading\";\nimport TextInput from \"../Dialog/TextInput\";\nimport store from \"../../modules/localStore/store\";\nimport {\n    hideShareDialogOneAction,\n    showShareDialogTwoAction,\n    updateShareUserAction\n} from \"../../modules/localStore/actions/listSettingsActions\";\nimport SingleButtonMenu from \"../Dialog/SingleButtonMenu\";\nimport Menu from \"../Dialog/Menu\";\nimport ListController from \"../../modules/listController\";\n\n\nexport default function ShareWithDialog(props) {\n\n    return (\n        <Overlay>\n            <Menu>\n                <DialogHeading heading=\"Share List\"/>\n                <TextInput\n                    placeholder=\"Enter User Email\"\n                    changeEvent={updateShareUser}\n                />\n                <SingleButtonMenu\n                    text=\"Submit\"\n                    classes=\"green\"\n                    command={sendRequest}\n                />\n            </Menu>\n        </Overlay>\n    )\n}\n\nasync function sendRequest() {\n    const {shareWithUser} = store.getState().listSettings\n    if (!shareWithUser) return\n    await ListController.sendShareRequest(shareWithUser)\n    store.dispatch(hideShareDialogOneAction())\n    store.dispatch(showShareDialogTwoAction())\n\n}\n\nfunction updateShareUser(event) {\n    const text = event.currentTarget.value\n    store.dispatch(updateShareUserAction(text))\n}","import Overlay from \"../Dialog/Overlay\";\nimport SingleButtonMenu from \"../Dialog/SingleButtonMenu\";\nimport store from \"../../modules/localStore/store\";\nimport {hideShareDialogTwoAction, updateShareUserAction} from \"../../modules/localStore/actions/listSettingsActions\";\nimport Menu from \"../Dialog/Menu\";\nimport DialogText from \"../Dialog/DialogText\";\nimport {connect} from \"react-redux\";\n\n function ShareWithDialogTwo({user}){\n\n    return (\n        <Overlay>\n            <Menu>\n                <DialogText\n                    text={`if ${user} is a valid user, they have successfully received an invite!`}\n                />\n                <SingleButtonMenu\n                    text=\"Close\"\n                    classes=\"grey\"\n                    command={closeMenu}\n                />\n            </Menu>\n        </Overlay>\n    )\n}\n\nfunction closeMenu() {\n    store.dispatch(updateShareUserAction(null))\n    store.dispatch(hideShareDialogTwoAction())\n}\n\nfunction mapToState({listSettings}) {\n     return {\n         user:listSettings.shareWithUser\n     }\n}\n\nexport default connect(mapToState)(ShareWithDialogTwo)","import Overlay from \"../Dialog/Overlay\";\nimport DialogText from \"../Dialog/DialogText\";\nimport TwoButtonMenu from \"../Dialog/TwoButtonMenu\";\nimport ListController from \"../../modules/listController\";\nimport store from \"../../modules/localStore/store\";\nimport {hideRemoveMenuAction} from \"../../modules/localStore/actions/requestAction\";\nimport {connect} from \"react-redux\";\nimport Menu from \"../Dialog/Menu\";\nimport {navToListAction} from \"../../modules/localStore/actions/listActions\";\n\nfunction RemoveDialog({selectedUser}){\n    return (\n        <Overlay>\n            <Menu>\n                <DialogText text={`Are you sure you want to remove access from\n                ${selectedUser} to this list?`}\n                />\n                <TwoButtonMenu\n                    leftText=\"Yes\"\n                    leftClasses=\"red\"\n                    leftCommand={() => removeUser(selectedUser)}\n\n                    rightText=\"No\"\n                    rightClasses=\"grey\"\n                    rightCommand={closeMenu}\n                />\n\n            </Menu>\n        </Overlay>\n    )\n}\n\nfunction mapToState({request}) {\n    const {selectedUser} = request\n    return {selectedUser}\n}\n\nfunction closeMenu() {\n    store.dispatch(hideRemoveMenuAction())\n}\n\nasync function removeUser(user) {\n   const newList =  await ListController.removeAccess(user)\n    store.dispatch(navToListAction(newList.data()))\n    closeMenu()\n}\n\nexport default connect(mapToState)(RemoveDialog)","import ShareMenuBanner from \"./ShareMenuBanner\";\nimport \"../../css/share_menu.css\"\nimport UsersContainer from \"./UsersContainer\";\nimport {connect} from \"react-redux\";\nimport ShareWithDialog from \"./ShareWithDialog\";\nimport ShareWithDialogTwo from \"./ShareWithDialogTwo\";\nimport RemoveDialog from \"../RemoveDialog\";\n\nfunction ShareMenu({showShareDialogOne,showRemoveMenu,showShareDialogTwo}) {\n    return (\n        <div>\n            <ShareMenuBanner/>\n            <UsersContainer/>\n            {showShareDialogOne && <ShareWithDialog/>}\n            {showShareDialogTwo && <ShareWithDialogTwo/>}\n            {  showRemoveMenu && <RemoveDialog/>}\n\n        </div>\n    )\n}\n\nfunction mapToState({listSettings,request}) {\n    const {showShareDialogOne,showShareDialogTwo} = listSettings\n    const {showRemoveMenu} = request\n\n    return {\n        showShareDialogTwo,\n        showRemoveMenu,\n        showShareDialogOne,\n    }\n}\n\nexport default connect(mapToState)(ShareMenu)","import Overlay from \"../Dialog/Overlay\";\nimport DialogText from \"../Dialog/DialogText\";\nimport TwoButtonMenu from \"../Dialog/TwoButtonMenu\";\nimport Menu from \"../Dialog/Menu\";\nimport store from \"../../modules/localStore/store\";\nimport {hideListSettingsAction, hideRemoveSharedMenuAction} from \"../../modules/localStore/actions/listSettingsActions\";\nimport firebase from \"../../modules/db/firebase\"\nimport ListController from \"../../modules/listController\";\nimport {navToListAction} from \"../../modules/localStore/actions/listActions\";\n\nexport default function RemoveSharedDialog() {\n    return (\n        <Overlay>\n            <Menu>\n                <DialogText\n                    text={'Are you sure you want to remove your access to this list?'}\n                />\n                <TwoButtonMenu\n                    leftText=\"Yes\"\n                    leftClasses=\"red\"\n                    leftCommand={removeAccess}\n\n                    rightText=\"No\"\n                    rightClasses=\"grey\"\n                    rightCommand={closeMenu}\n                />\n            </Menu>\n        </Overlay>\n    )\n\n}\n\n\nasync function removeAccess() {\n    const {email} = firebase.auth().currentUser\n    await ListController.removeAccess(email)\n    store.dispatch(hideListSettingsAction())\n    store.dispatch(navToListAction(null))\n    closeMenu()\n}\n\nfunction closeMenu() {\n    store.dispatch(hideRemoveSharedMenuAction())\n}\n","import ListSettingsHeading from \"./ListSettingsHeading\";\nimport ListSettingsBanner from \"./ListSettingsBanner\";\nimport SettingsCommandContainer from \"./SettingsCommandContainer\";\nimport \"../../css/list_settings.css\"\nimport ChangeNameMenu from \"./ChangeNameMenu\";\nimport {connect} from \"react-redux\";\nimport DeleteListMenu from \"../ListComponent/DeleteListMenu\";\nimport ListSettingsShareBanner from \"./ListSettingsShareBanner\";\nimport ShareMenu from \"../ShareMenu\";\nimport RemoveSharedDialog from \"../RemoveSharedDialog\";\n\nfunction ListSettings({showRemoveSharedMenu,activeList,showChangeNameMenu,showDeleteListMenu,showShareMenu}) {\n    return (\n        <div className=\"list-settings\">\n            <ListSettingsHeading/>\n            { !showShareMenu && <ListSettingsBanner/> }\n            { showShareMenu && <ListSettingsShareBanner/> }\n            {!showShareMenu && <SettingsCommandContainer activeList={activeList}/>}\n\n            { showShareMenu && <ShareMenu/> }\n            { showChangeNameMenu && <ChangeNameMenu/>}\n            { showDeleteListMenu && <DeleteListMenu/>}\n            { showRemoveSharedMenu && <RemoveSharedDialog/>}\n\n        </div>\n    )\n}\n\nfunction mapToState({listSettings,lists}) {\n    const {activeList,showRemoveSharedMenu} = lists\n    const {\n        showChangeNameMenu,\n        showDeleteListMenu,\n        showShareMenu\n    } = listSettings\n\n    return {\n        showChangeNameMenu,\n        showDeleteListMenu,\n        showShareMenu,\n        activeList,\n        showRemoveSharedMenu\n    }\n}\n\nexport default connect(mapToState)(ListSettings)","import Overlay from \"../Dialog/Overlay\";\nimport Menu from \"../Dialog/Menu\";\nimport DialogHeading from \"../Dialog/DialogHeading\";\nimport DialogText from \"../Dialog/DialogText\";\nimport TwoButtonMenu from \"../Dialog/TwoButtonMenu\";\nimport {connect} from \"react-redux\";\nimport ListController from \"../../modules/listController\";\nimport store from \"../../modules/localStore/store\";\nimport {hideShareMenuAction} from \"../../modules/localStore/actions/listSettingsActions\";\nimport {hideRequestMenuAction} from \"../../modules/localStore/actions/requestAction\";\n\nfunction ShareRequest({list}) {\n    const user = list ? list.owner : null\n    const title = list ? list.title : null\n    return (\n        <Overlay>\n            <Menu>\n                <DialogHeading heading=\"Share Request\"/>\n                <DialogText text={`${user} wants to share their ${title} list`}/>\n                <TwoButtonMenu\n                    leftText=\"Accept\"\n                    leftClasses=\"green\"\n                    leftCommand={() => accept(list)}\n\n                    rightText=\"Decline\"\n                    rightClasses=\"red\"\n                    rightCommand={() => reject(list)}\n                />\n            </Menu>\n        </Overlay>\n    )\n}\n\n\nasync function accept(list) {\n    await ListController.acceptShareRequest(list)\n    store.dispatch(hideRequestMenuAction())\n}\n\nasync function reject(list) {\n    await ListController.rejectShareRequest(list)\n    store.dispatch(hideRequestMenuAction())\n}\n\nfunction mapToState({request}) {\n    const {activeRequest} = request\n\n    if (!activeRequest) return {\n        list:null\n    }\n\n    else return {\n        list:activeRequest\n    }\n}\n\nexport default connect(mapToState)(ShareRequest)","import \"./css/global.css\"\r\nimport \"typeface-roboto\"\r\nimport Main from \"./components/Main/index\"\r\nimport Header from \"./components/Header/Header\";\r\nimport { connect } from \"react-redux\";\r\nimport SignInScreen from \"./components/SignInScreen\";\r\nimport ListComponent from \"./components/ListComponent\";\r\nimport NewListMenu from \"./components/ListComponent/NewListMenu\";\r\nimport ListSettings from \"./components/ListSettings\";\r\nimport ShareRequest from \"./components/ShareRequest\";\r\n\r\nfunction App({ showRequestMenu,showListSettings,isSignedIn,activeList,showNewListMenu}) {\r\n  return (\r\n      <div className='container'>\r\n        <Header/>\r\n        { (isSignedIn && activeList &&!showListSettings) && <Main/> }\r\n        { (isSignedIn && !activeList) && <ListComponent/> }\r\n        { !isSignedIn && <SignInScreen/> }\r\n        { showNewListMenu && <NewListMenu/> }\r\n        { showListSettings && <ListSettings/>}\r\n          { showRequestMenu && <ShareRequest/> }\r\n      </div>\r\n  )\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n      isSignedIn:state.auth.isSignedIn,\r\n      activeList: state.lists.activeList,\r\n      showNewListMenu: state.newListMenu.showNewListMenu,\r\n      showListSettings: state.listSettings.showListSettings,\r\n      showRequestMenu: state.request.showRequestMenu\r\n  }\r\n}\r\nexport default connect(mapToState)(App)","import DataSyncController from \"../dataController/DataSyncController\"\r\nimport {USERS_COLLECTION, DEFAULT_DOC_ID} from \"../localStore/constants\"\r\nimport db from \"../db/index\"\r\nimport {LIST_COLLECTION} from \"../listController\";\r\nimport firebase from \"../db/firebase\"\r\n\r\nexport default function () {\r\n    const owner = firebase.auth().currentUser\r\n    if (!owner) return\r\n\r\n    DataSyncController.setOwnedListSubscription(db.collection(LIST_COLLECTION).where(\"owner\",\"==\",owner.email))\r\n    DataSyncController.setPendingSubscription(db.collection(LIST_COLLECTION).where(\"pendingUsers\",\"array-contains\",owner.email))\r\n    DataSyncController.setSharedSubscription(db.collection(LIST_COLLECTION).where(\"usersSharedWith\",'array-contains',owner.email))\r\n}","import firebase from \"firebase/compat/app\"\nimport \"firebase/compat/auth\"\nimport store from \"../localStore/store\"\nimport {updateAuthStatusAction} from \"../localStore/actions/authActions\";\nimport { USERS_COLLECTION} from \"../localStore/constants\";\nimport initSubscriptions from \"../setup/initSubscriptions\";\nconst db = firebase.firestore()\n\nexport default class AuthListener {\n    static init() {\n        firebase.auth().onAuthStateChanged(async user => {\n            if (!user) return\n            if (!(await hasUserFile(user))) await createUser(user)\n            initSubscriptions()\n            const action = updateAuthStatusAction(!!user)\n            store.dispatch(action)\n        })\n    }\n}\n\n\nasync function createUser({uid,email}) {\n    await db.collection(USERS_COLLECTION)\n        .doc(uid).set({\n            id:uid,\n            email,\n            pendingRequests:[],\n            sentRequestIDs: [],\n        })\n}\n\nasync function hasUserFile({uid}) {\n    const doc = await db.collection(USERS_COLLECTION).doc(uid).get()\n    return doc.exists\n}","import AuthListener from \"../AuthListener\";\n\nexport default async function () {\n    AuthListener.init()\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./modules/localStore/store.js\"\r\nimport init from \"./modules/setup/init\";\r\n\r\ninit()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n"],"sourceRoot":""}