{"version":3,"sources":["modules/dataController/actions.js","modules/dataController/reducer.js","modules/dataController/store.js","modules/dataController/AppDataController.js","components/Action Commands/ActionButton.js","components/Header.js","modules/dataController/TaskDataController.js","components/Tasks/Task.js","components/Tasks/TaskList.js","components/Section/SectionButton.js","components/Section/SectionBar.js","components/Section/SectionContainer.js","components/Action Commands/ActionMenuItem.js","components/Action Commands/ActionMenu.js","components/Undo/UndoButton.js","App.js","index.js"],"names":["CREATE_TASK","DELETE_TASK","UPDATE_TASK_TEXT","TOGGLE_TASK_COMPLETION","DELETE_ALL_COMPLETED_TASK","TOGGLE_TODO_LIST","TOGGLE_COMPLETED_LIST","SHOW_MENU","HIDE_MENU","UNDO_TASK","SHOW_UNDO","HIDE_UNDO","initialState","tasks","stack","showUndo","showCompleted","showTodo","showMenu","createTask","state","task","text","isCompleted","id","uuidv4","newState","map","x","push","deleteTask","filter","updateTaskText","newTasks","find","toggleTaskCompletion","deleteAllCompletedTasks","undoTask","pop","toggleCompletedList","toggleToDoList","hideMenu","hideUndo","store","createStore","action","type","payload","AppDataController","dispatch","getState","handleOnClick","ActionButton","class","onClick","icon","faPlus","Header","props","TaskDataController","updateTaskTextAction","toggleTaskCompletionAction","deleteTaskAction","Task","classes","alt","value","onChange","e","checked","event","currentTarget","handleTextEvent","TaskList","key","connect","isOpen","isToDo","showToDo","faAngleDown","faAngleRight","toggleTodoList","SectionBar","className","sectionTitle","ownProps","todo","showContainer","completed","ActionMenuItem","command","menuItems","deleteAllCompleted","setTimeout","faMinus","ActionMenu","closeMenu","menuItem","UndoButton","menuIsActive","undoIsActive","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3fc5cc9.chunk.js","sourcesContent":["export const CREATE_TASK = \"createTask\"\r\nexport const DELETE_TASK = \"deleteTask\"\r\nexport const UPDATE_TASK_TEXT = \"updateTaskText\"\r\nexport const TOGGLE_TASK_COMPLETION = \"toggleTaskCompletion\"\r\nexport const DELETE_ALL_COMPLETED_TASK = \"deleteAllCompletedTasks\"\r\nexport const TOGGLE_TODO_LIST = \"toggleTodoList\"\r\nexport const TOGGLE_COMPLETED_LIST = \"toggleCompletedList\"\r\nexport const SHOW_MENU = \"showMenu\"\r\nexport const HIDE_MENU = \"hideMenu\"\r\nexport const UNDO_TASK = \"undoTask\"\r\nexport const SHOW_UNDO = \"showUndo\"\r\nexport const HIDE_UNDO = \"hideUndo\"\r\n\r\nexport const showUndoAction = () => ({type:SHOW_UNDO})\r\nexport const hideUndoAction = () => ({type:HIDE_UNDO})\r\nexport const undoTaskAction = () => ({type:UNDO_TASK})\r\nexport const showMenuAction = () => ({type:SHOW_MENU})\r\nexport const hideMenuAction = () => ({type:HIDE_MENU})\r\nexport const createTaskAction = () => ({type:CREATE_TASK})\r\nexport const deleteTaskAction = (id) => ({type:DELETE_TASK, payload:{id}})\r\nexport const updateTaskTextAction = (id,text) => ({type: UPDATE_TASK_TEXT,payload: {id,text}})\r\nexport const toggleTaskCompletionAction = (id) => ({type: TOGGLE_TASK_COMPLETION,payload:{id}})\r\nexport const deleteAllCompletedTasksAction = () => ({type: DELETE_ALL_COMPLETED_TASK})\r\nexport const toggleCompletedListAction = () => ({type:TOGGLE_COMPLETED_LIST})\r\nexport const toggleToDoListAction = () => ({type:TOGGLE_TODO_LIST})\r\n","/* eslint-disable no-lone-blocks */\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CREATE_TASK, DELETE_ALL_COMPLETED_TASK, DELETE_TASK, HIDE_MENU, HIDE_UNDO, SHOW_MENU, SHOW_UNDO, TOGGLE_COMPLETED_LIST, TOGGLE_TASK_COMPLETION, TOGGLE_TODO_LIST, TOGGLE_UNDO, UNDO_TASK, UPDATE_TASK_TEXT } from './actions';\r\n\r\nconst initialState = {\r\n    tasks: [],\r\n    stack:[],\r\n    showUndo: false,\r\n    showCompleted: false,\r\n    showTodo: true,\r\n    showMenu: false \r\n}\r\n\r\nfunction createTask(state) {\r\n    const id = uuidv4()\r\n    const task = {text:\"\",isCompleted:false,id}\r\n    const newState = state.tasks.map(x => x)\r\n    newState.push(task)\r\n\r\n    return {\r\n        ...state,\r\n        tasks:newState\r\n    }\r\n \r\n}\r\n\r\nfunction deleteTask(state,id) {\r\n    const tasks = state.tasks.filter(task => task.id !== id)\r\n    return {\r\n        ...state,\r\n        tasks \r\n    }\r\n}\r\n\r\nfunction updateTaskText(state,{id,text}) {\r\n    const newTasks = state.tasks.map(x => x)\r\n    const task = newTasks.find(task => task.id === id)\r\n    if (!task) return state\r\n\r\n    task.text = text \r\n\r\n\r\n    return {\r\n        ...state,\r\n        tasks: newTasks\r\n    }\r\n}\r\n\r\nfunction toggleTaskCompletion(state,id) {\r\n    const newTasks = state.tasks.map(x => x)\r\n    const task = newTasks.find(task => task.id === id)\r\n    task.isCompleted = !task.isCompleted\r\n\r\n    return {\r\n        ...state,\r\n        tasks:newTasks \r\n    }\r\n\r\n}\r\n\r\nfunction deleteAllCompletedTasks(state) {\r\n    const stack = state.stack.map(x => x)\r\n    stack.push(state.tasks)\r\n\r\n   const newTasks = state.tasks.filter(task => task.isCompleted !== true)\r\n   return {\r\n       ...state,\r\n       stack,\r\n       tasks:newTasks \r\n   }\r\n}\r\n\r\n\r\nfunction undoTask(state) {\r\n    const stack = state.stack.map(x => x)\r\n\r\n    return {\r\n        ...state,\r\n        tasks: stack.pop(),\r\n        stack \r\n    }\r\n}\r\n\r\nfunction toggleCompletedList(state) {\r\n    return {\r\n        ...state,\r\n        showCompleted: !state.showCompleted\r\n    }\r\n}\r\n\r\nfunction toggleToDoList(state) {\r\n    return {\r\n        ...state,\r\n        showTodo: !state.showTodo \r\n    }\r\n}\r\n\r\nfunction showMenu(state) {\r\n    return {\r\n        ...state,\r\n        showMenu: true \r\n        }\r\n}\r\n\r\nfunction hideMenu(state) {\r\n    return {\r\n        ...state,\r\n        showMenu:false \r\n    }\r\n}\r\n\r\nfunction showUndo(state) {\r\n    return {\r\n        ...state,\r\n        showUndo: true\r\n    }\r\n}\r\n\r\nfunction hideUndo(state) {\r\n    return {\r\n        ...state,\r\n        showUndo: false \r\n    }\r\n}\r\n\r\nexport default function toDoReducer(state = initialState, action){\r\n    switch (action.type){\r\n        case CREATE_TASK: return createTask(state)\r\n        case DELETE_TASK: return deleteTask(state,action.payload.id)\r\n        case UPDATE_TASK_TEXT: return updateTaskText(state,action.payload)\r\n        case TOGGLE_TASK_COMPLETION: return toggleTaskCompletion(state,action.payload.id)\r\n        case DELETE_ALL_COMPLETED_TASK: return deleteAllCompletedTasks(state)\r\n        case TOGGLE_TODO_LIST: return toggleToDoList(state)\r\n        case TOGGLE_COMPLETED_LIST: return toggleCompletedList(state)\r\n        case SHOW_MENU: return showMenu(state)\r\n        case HIDE_MENU: return hideMenu(state)\r\n        case UNDO_TASK: return undoTask(state)\r\n        case SHOW_UNDO: return showUndo(state)\r\n        case HIDE_UNDO: return hideUndo(state)\r\n        default:\r\n            return state \r\n    }\r\n\r\n\r\n}","import {createStore} from \"redux\"\r\nimport rootReducer  from \"./reducer\"\r\n\r\nconst store = createStore(rootReducer)\r\nexport default store ","import { hideMenuAction, hideUndoAction, showMenuAction, showUndoAction, toggleCompletedListAction, toggleToDoListAction, toggleUndoAction, undoTaskAction } from \"./actions.js\"\r\nimport store from \"./store.js\"\r\n\r\nexport default class AppDataController {\r\n\r\n    static toggleTodoList() {\r\n        const action = toggleToDoListAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static showToDo() {\r\n        return store.getState().showTodo \r\n    }\r\n    \r\n    static showCompleted() {\r\n        return store.getState().showCompleted \r\n    }\r\n\r\n    static showMenu() {\r\n        const action = showMenuAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static closeMenu() {\r\n        const action = hideMenuAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static menuIsActive() {\r\n        return store.getState().showMenu \r\n    }\r\n\r\n    static toggleCompletedList() {\r\n        const action = toggleCompletedListAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static showUndo() {\r\n        const action = showUndoAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static hideUndo() {\r\n        const action = hideUndoAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static undoTask() {\r\n        const action = undoTaskAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static undoIsActive() {\r\n        return store.getState().showUndo \r\n    }\r\n\r\n}","import AppDataController from \"../../modules/dataController/AppDataController\"\r\nimport \"../../css/action_button.css\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nfunction handleOnClick() {\r\n    AppDataController.showMenu()\r\n}\r\n\r\nexport default function ActionButton() {\r\n    return (\r\n        <button \r\n            class=\"action-button\"\r\n            onClick={handleOnClick}\r\n        >\r\n        <FontAwesomeIcon icon={faPlus} />\r\n        </button>\r\n    )\r\n}\r\n\r\n","import \"../css/banner.css\"\r\n\r\n\r\nexport default function Header(props) {\r\n\r\n    return (\r\n        <div class=\"banner\">\r\n            <h1 class=\"title\"> Todoiz.IO</h1>\r\n        </div>\r\n    )\r\n}","import { createTaskAction, deleteAllCompletedTasksAction, deleteTaskAction, toggleTaskCompletionAction, updateTaskTextAction } from \"./actions\"\r\nimport store from \"./store.js\"\r\nclass TaskDataController {\r\n    static updateTaskText(id,text) {\r\n            const action = updateTaskTextAction(id,text)\r\n            store.dispatch(action)\r\n    }\r\n\r\n    static toggleTaskCompletion(id) {\r\n        const action = toggleTaskCompletionAction(id)\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static createTask() {\r\n        const action = createTaskAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static deleteTask(id) {\r\n        const action = deleteTaskAction(id)\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static deleteAllCompleted() {\r\n        const action = deleteAllCompletedTasksAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static todo() {\r\n        return store.getState()\r\n        .tasks.filter(task => task.isCompleted === false)\r\n    }\r\n\r\n    static completed() {\r\n        return store.getState()\r\n        .tasks.filter(task => task.isCompleted === true)\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\nexport default TaskDataController","import \"../../css/task.css\"\r\nimport TaskDataController from \"../../modules/dataController/TaskDataController\"\r\n/*\r\nprops: {\r\n    text:string;\r\n    isCompleted:boolean\r\n    id:string \r\n}\r\n*/\r\nexport default function Task(props) {\r\n    const classes = `task-item ${props.isCompleted ? 'completed' : ''}`\r\n    return (\r\n        <div class={classes}>\r\n            <input \r\n                alt='task completion status' \r\n                class='checkbox' \r\n                type=\"checkbox\"\r\n                value={ props.isCompleted}\r\n                onChange= {(e) => handleCheckBoxEvent(props.id)}\r\n                checked= {props.isCompleted}\r\n            />\r\n            <input \r\n                class='task-text' \r\n                type='text' \r\n                alt='task text' \r\n                onChange= { (e) => handleTextEvent(props.id,e)}\r\n                value={props.text}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction handleTextEvent(id,event) {\r\n    const text = event.currentTarget.value\r\n    TaskDataController.updateTaskText(id,text)\r\n}\r\n\r\nfunction handleCheckBoxEvent(id) {\r\n    TaskDataController.toggleTaskCompletion(id)\r\n}","import Task from \"./Task\";\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nprops:{\r\n    tasks: TaskItem[]\r\n\r\n}\r\n*/\r\nexport default function TaskList(props) {\r\n\r\n    return (\r\n        <div class='container'>\r\n            {\r\n            props.tasks.map(task => {\r\n            return <Task \r\n                        {...task}\r\n                        key={task.id}\r\n                    />\r\n            })\r\n            }\r\n        </div>   \r\n    )\r\n    \r\n}","import { faAngleDown, faAngleRight } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { connect } from \"react-redux\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController\"\r\n\r\nfunction SectionButton(props) {\r\n    const icon = props.isOpen ? faAngleDown : faAngleRight\r\n    return (\r\n        <button class=\"drop-down\" onClick={(e) => handleOnClick(props.isToDo)}>\r\n            <FontAwesomeIcon icon={icon} />\r\n        </button>\r\n    )\r\n}   \r\n\r\nfunction handleOnClick(isToDo) {\r\n    if (isToDo) {\r\n        AppDataController.toggleTodoList()\r\n    }\r\n    else AppDataController.toggleCompletedList()\r\n}\r\n\r\nfunction mapToState(state,{isToDo}) {\r\n    return {\r\n        isOpen: \r\n            isToDo ? AppDataController.showToDo() \r\n            : AppDataController.showCompleted()\r\n        }\r\n}\r\n\r\nexport default connect(mapToState)(SectionButton)","import \"../../css/bar.css\"\r\nimport \"../../css/todo.css\"\r\nimport \"../../css/completed.css\"\r\nimport SectionButton from \"./SectionButton\"\r\n\r\nexport default function SectionBar(props) {\r\n    const classes = `bar ${props.className}`\r\n    return (\r\n        <div class={classes}>\r\n            <SectionButton isToDo = { props.className === \"todo-bar\" }/>\r\n            <h1 class=\"bar-title\"> {props.sectionTitle} </h1>\r\n        </div>  \r\n    )\r\n}","import { connect } from \"react-redux\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController.js\"\r\nimport TaskDataController from \"../../modules/dataController/TaskDataController.js\"\r\nimport TaskList from \"../Tasks/TaskList.js\"\r\nimport SectionBar from \"./SectionBar.js\"\r\n\r\n/*\r\n@props: {\r\n    className: \"todo-bar| completed-bar\";\r\n    sectionTitle: string;\r\n    tasks: TaskItem[]\r\n    showContainer: boolean\r\n}\r\n*/\r\n\r\nfunction SectionContainer(props) {\r\n    return (\r\n        <div>\r\n            <SectionBar sectionTitle = {props.sectionTitle} className={props.className}/>\r\n            { props.showContainer && <TaskList tasks={props.tasks} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state,ownProps) {\r\n    const isToDo = ownProps.sectionTitle === \"To Do\"\r\n\r\n    if (isToDo) return { \r\n        tasks: TaskDataController.todo(),\r\n        showContainer: AppDataController.showToDo()\r\n    }\r\n    \r\n    return {\r\n        tasks: TaskDataController.completed(),\r\n        showContainer: AppDataController.showCompleted()\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SectionContainer)","\r\n\r\n\r\n/* \r\n\r\n\r\nprops: {\r\n    text: string;\r\n    command: Function \r\n    icon: FontAwesomeIcon\r\n}\r\n*/\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function ActionMenuItem(props) {\r\n\r\n    return (\r\n        <button onClick={() => props.command()} class=\"action-item\">\r\n            { props.icon && <FontAwesomeIcon icon= {props.icon}/> }\r\n            <div class=\"action-text\">\r\n                <p> {props.text} </p>\r\n            </div>\r\n        </button>\r\n    )\r\n}\r\n\r\n","import ActionMenuItem from \"./ActionMenuItem.js\"\r\nimport \"../../css/action_list.css\"\r\nimport TaskDataController from \"../../modules/dataController/TaskDataController.js\"\r\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController.js\"\r\n/*\r\nprops: {\r\n    menuItems: MenuItem[]\r\n}\r\n\r\nmenuItem {\r\n    text: string;\r\n\r\n    command: Function\r\n}\r\n*/\r\n\r\n\r\nfunction deleteAll() {\r\n    TaskDataController.deleteAllCompleted()\r\n    AppDataController.showUndo()\r\n    setTimeout( () => {\r\n        AppDataController.hideUndo()\r\n    },3000)\r\n    \r\n}\r\nconst menuItems = [\r\n    {text:\"Add Task\", command: TaskDataController.createTask, icon: faPlus},\r\n    {text: \"Clear Completed Tasks\", command:deleteAll, icon: faMinus},\r\n]\r\n\r\nexport default function ActionMenu(props) {\r\n    return (\r\n        <div class='overlay'onClick= {AppDataController.closeMenu}>\r\n            <div class='action-container'>\r\n                { menuItems.map(menuItem => {\r\n                    return <ActionMenuItem {...menuItem} key={menuItem.text}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n     \r\n    )\r\n}","import \"../../css/action_button.css\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController\"\r\n\r\nfunction undoTask() {\r\n    AppDataController.undoTask()\r\n    AppDataController.hideUndo()\r\n}\r\n\r\nexport default function UndoButton() {\r\n    return (\r\n        <div class=\"undo\">\r\n            <p> Completed tasks cleared</p>\r\n            <button alt=\"undo task clear\" onClick={undoTask}> Undo </button>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n","import \"./css/global.css\"\r\nimport \"typeface-roboto\"\r\nimport ActionButton from \"./components/Action Commands/ActionButton\";\r\nimport AppDataController from \"./modules/dataController/AppDataController\";\r\nimport Header from './components/Header';\r\nimport SectionContainer from \"./components/Section/SectionContainer.js\"\r\nimport ActionMenu from \"./components/Action Commands/ActionMenu\";\r\nimport { connect } from \"react-redux\";\r\nimport UndoButton from \"./components/Undo/UndoButton\";\r\n\r\nfunction App({menuIsActive,showUndo}) {\r\n\r\n  return (\r\n    <div class='container'>\r\n      <Header/>\r\n      <SectionContainer \r\n        className='todo-bar' \r\n        sectionTitle=\"To Do\"\r\n      />\r\n      <SectionContainer \r\n        className='completed-bar' \r\n        sectionTitle=\"Completed\"\r\n      />\r\n      { menuIsActive && <ActionMenu/> }\r\n      <ActionButton/>\r\n      { showUndo && <UndoButton/> }\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    menuIsActive: AppDataController.menuIsActive(),\r\n    showUndo: AppDataController.undoIsActive()\r\n  }\r\n}\r\n\r\nexport default connect(mapToState)(App)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./modules/dataController/store.js\"\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}