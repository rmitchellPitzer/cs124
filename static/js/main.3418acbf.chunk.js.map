{"version":3,"sources":["modules/dataController/actions.js","modules/sorting/sortingAlgorithm.js","modules/dataController/reducer.js","modules/dataController/store.js","modules/dataController/AppDataController.js","components/Action Commands/ActionButton.js","components/Header.js","modules/db/index.js","modules/db/firebaseConfig.js","modules/dataController/constants.js","modules/dataController/TaskDataController.js","components/Priority/PriorityIcon.js","components/Priority/PriorityButton/PriorityButton.js","components/Tasks/Task.js","components/Tasks/TaskList.js","components/Section/SectionButton.js","components/Section/FilterButton.js","components/Section/SectionBar.js","components/Section/SectionContainer.js","components/Action Commands/ActionMenuItem.js","components/Action Commands/ActionMenu.js","components/Undo/UndoButton.js","modules/dataController/TaskOrderController.js","components/SortMenu/addFilterButton.js","components/SortMenu/CloseMenuButton.js","components/SortMenu/SortEntry/EntryOrderButton.js","components/SortMenu/SortEntry/SortCriteriaDropDown.js","components/SortMenu/SortEntry/isAscendingButton.js","components/SortMenu/SortEntry/DeleteButton.js","components/SortMenu/SortEntry/SortEntryContainer.js","components/SortMenu/SortMenuContainer.js","components/Priority/PriorityMenu/PriorityItem.js","components/Priority/PriorityMenu/PriorityCloseButton.js","components/Priority/PriorityMenu/PriorityMenuBar.js","components/Priority/PriorityMenu/PriorityMenuContainer.js","App.js","modules/dataController/DataSyncController.js","modules/setup/initSubscriptions.js","index.js"],"names":["TOGGLE_TASK_COMPLETION","TOGGLE_TODO_LIST","TOGGLE_COMPLETED_LIST","SHOW_MENU","HIDE_MENU","UNDO_TASK","SHOW_UNDO","HIDE_UNDO","UPDATE_TASKS","UPDATE_SORTING_FIELDS","SHOW_SORT_FIELD_MENU","HIDE_SORT_FIELD_MENU","SHOW_PRIORITY_MENU","HIDE_PRIORITY_MENU","applySorting","sortDataList","tasks","i","length","sortData","sortFunction","getSortFunction","sortTasks","prevSortData","sortBySecondaryKey","map","x","sort","a","b","isAscending","prevSortFunction","valuesAreEqual","field","sortByName","sortByTime","sortByPriority","taskA","taskB","comparison","text","localeCompare","priority","creationDate","initialState","stack","sortingFields","showUndo","showCompleted","showTodo","showMenu","showSortMenu","showPriorityMenu","priorityMenuActiveID","toggleTaskCompletion","state","id","newTasks","task","find","isCompleted","undoTask","pop","toggleCompletedList","toggleToDoList","hideMenu","hideUndo","updateTasks","oldTasks","sortingAlgorithm","updateSortingFields","hideSortFieldMenu","showSortFieldMenu","payload","hidePriorityMenu","store","createStore","action","type","AppDataController","dispatch","getState","showPriorityMenuAction","handleOnClick","ActionButton","class","onClick","icon","faPlus","Header","props","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","COLLECTION_NAME","DEFAULT_DOC_ID","TASK_SUBCOLLECTION","collectionRef","db","collection","getTask","doc","TaskDataController","update","get","data","uuidv4","set","Date","now","delete","where","docs","s","ref","filter","classes","PriorityIcon","classList","className","PriorityButton","openPriorityMenu","connect","ownProps","isSelected","alt","value","onChange","e","checked","event","currentTarget","updateTaskText","handleTextEvent","TaskList","key","isOpen","isToDo","showToDo","faAngleDown","faAngleRight","toggleTodoList","toggleButton","openSortFieldMenu","FilterButton","faSort","SectionBar","sectionTitle","todo","showContainer","completed","ActionMenuItem","command","menuItems","createTask","deleteAllCompleted","setTimeout","faMinus","ActionMenu","closeMenu","menuItem","UndoButton","TaskOrderController","getSortFields","sortFilters","isAlreadyEnabled","enableFilter","old","newField","prevField","f","hasFieldAlready","updateSortFields","hasName","hasTime","hasPriority","addSortField","sortFields","getDoc","newSortingFields","newIndex","currentIndex","getCurrentIndexOfField","entry","splice","push","addFilterSection","addRandomField","AddFilterButton","hideSortMenu","CloseMenuButton","newOrder","console","log","changeSortFieldOrder","result","onOrderChange","parseInt","index","_","SortCriteriaDropDown","changeSortField","change","changeAscending","IsAscendingButton","faSortAmountUp","faSortAmountDown","DeleteButton","fieldName","removeSortField","SortEntryContainer","selection","updateTaskPriority","priorityText","closePriorityMenu","PriorityCloseButton","PriorityMenuBar","priorityData","PriorityMenuContainer","menuIsActive","undoIsActive","_db","_taskSubscription","_sortSubscrption","query","this","onSnapshot","snapshot","updateTasksAction","updateSortingFieldsAction","DataSyncController","setTaskSubscription","setSortSubscription","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3418acbf.chunk.js","sourcesContent":["export const CREATE_TASK = \"createTask\"\r\nexport const DELETE_TASK = \"deleteTask\"\r\nexport const UPDATE_TASK_TEXT = \"updateTaskText\"\r\nexport const TOGGLE_TASK_COMPLETION = \"toggleTaskCompletion\"\r\nexport const DELETE_ALL_COMPLETED_TASK = \"deleteAllCompletedTasks\"\r\nexport const TOGGLE_TODO_LIST = \"toggleTodoList\"\r\nexport const TOGGLE_COMPLETED_LIST = \"toggleCompletedList\"\r\nexport const SHOW_MENU = \"showMenu\"\r\nexport const HIDE_MENU = \"hideMenu\"\r\nexport const UNDO_TASK = \"undoTask\"\r\nexport const SHOW_UNDO = \"showUndo\"\r\nexport const HIDE_UNDO = \"hideUndo\"\r\nexport const UPDATE_TASKS = \"updateTasks\"\r\nexport const UPDATE_SORTING_FIELDS = \"updateSortingFields\"\r\nexport const SHOW_SORT_FIELD_MENU = \"showSortFieldMenu\"\r\nexport const HIDE_SORT_FIELD_MENU = \"hideSortFieldMenu\"\r\nexport const SHOW_PRIORITY_MENU = \"showPriorityMenu\"\r\nexport const HIDE_PRIORITY_MENU = \"hidePriorityMenu\"\r\n\r\nexport const showUndoAction = () => ({type:SHOW_UNDO})\r\nexport const hideUndoAction = () => ({type:HIDE_UNDO})\r\nexport const undoTaskAction = () => ({type:UNDO_TASK})\r\nexport const showMenuAction = () => ({type:SHOW_MENU})\r\nexport const hideMenuAction = () => ({type:HIDE_MENU})\r\nexport const createTaskAction = () => ({type:CREATE_TASK})\r\nexport const deleteTaskAction = (id) => ({type:DELETE_TASK, payload:{id}})\r\nexport const updateTaskTextAction = (id,text) => ({type: UPDATE_TASK_TEXT,payload: {id,text}})\r\nexport const toggleTaskCompletionAction = (id) => ({type: TOGGLE_TASK_COMPLETION,payload:{id}})\r\nexport const deleteAllCompletedTasksAction = () => ({type: DELETE_ALL_COMPLETED_TASK})\r\nexport const toggleCompletedListAction = () => ({type:TOGGLE_COMPLETED_LIST})\r\nexport const toggleToDoListAction = () => ({type:TOGGLE_TODO_LIST})\r\nexport const updateTasksAction = (tasks) => ({type:UPDATE_TASKS,payload:{tasks}})\r\nexport const updateSortingFieldsAction = (sortingFields) => ({type:UPDATE_SORTING_FIELDS, payload: {sortingFields}})\r\nexport const showSortFieldAction = () => ({type:SHOW_SORT_FIELD_MENU})\r\nexport const hideSortFieldAction = () => ({type:HIDE_SORT_FIELD_MENU})\r\nexport const showPriorityMenuAction = (id) => ({type:SHOW_PRIORITY_MENU, payload: {id}})\r\nexport const hidePriorityMenuAction = () => ({type:HIDE_PRIORITY_MENU})","/*\r\n\r\n@ISortData: {\r\nfield:\"name\"|\"time\"|\"priority\",\r\nisAscending:Boolean\r\n}\r\n\r\n@ITask: {\r\n    _id:String (UUIDV4);\r\n    isCompleted:Boolean;\r\n    text:String;\r\n    creationDate:Number (Unix);\r\n    priority: Number;\r\n}\r\n */\r\n\r\nexport const NAME = \"name\"\r\nexport const TIME = \"time\"\r\nexport const PRIORITY = \"priority\"\r\n\r\nexport default function applySorting(sortDataList,tasks) {\r\n    for (let i = 0; i < sortDataList.length; i++) {\r\n        const sortData = sortDataList[i]\r\n        const sortFunction = getSortFunction(sortData)\r\n        if (isFirstSortField(i)) {\r\n           sortTasks(tasks,sortFunction,sortData)\r\n        }\r\n        else {\r\n            const prevSortData = sortDataList[i - 1]\r\n            const prevSortFunction = getSortFunction(prevSortData)\r\n            sortBySecondaryKey(prevSortData,prevSortFunction,sortData,tasks,sortFunction)\r\n        }\r\n\r\n    }\r\n    return tasks.map(x => x)\r\n}\r\n\r\nfunction isFirstSortField(index) {\r\n    return index == 0\r\n}\r\n\r\nfunction sortTasks(tasks,sortFunction,sortData) {\r\n    tasks.sort((a, b) => sortFunction(a, b, sortData.isAscending))\r\n}\r\n\r\nfunction sortBySecondaryKey(prevSortData,prevSortFunction,sortData,tasks,sortFunction) {\r\n    tasks.sort((a,b) => {\r\n        if (valuesAreEqual(prevSortData,prevSortFunction,a,b)) {\r\n            return sortFunction(a,b,sortData.isAscending)\r\n        }\r\n    })\r\n}\r\n\r\nfunction valuesAreEqual(sortData,sortFunction,a,b) {\r\n    return sortFunction(a,b,sortData.isAscending) == 0\r\n}\r\n\r\nfunction getSortFunction({field,isAscending}) {\r\n    switch (field) {\r\n        case NAME : return sortByName;\r\n        case TIME: return sortByTime;\r\n        case PRIORITY: return sortByPriority;\r\n        default: return\r\n    }\r\n}\r\n\r\nfunction sortByName(taskA,taskB,isAscending) {\r\n    const comparison = taskA.text.localeCompare(taskB.text)\r\n    return isAscending ? comparison : -1 * comparison\r\n}\r\n\r\nfunction sortByPriority(taskA,taskB,isAscending) {\r\n    if (taskA.priority == -1) return 1\r\n    if (taskB.priority == -1) return -1\r\n\r\n    const comparison = taskA.priority - taskB.priority\r\n    return isAscending ? -1 * comparison : comparison\r\n}\r\n\r\nfunction sortByTime(taskA,taskB,isAscending) {\r\n    const comparison = taskA.creationDate - taskB.creationDate\r\n    return isAscending ? comparison : -1 * comparison\r\n}","/* eslint-disable no-lone-blocks */\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n    HIDE_MENU,\r\n    HIDE_UNDO,\r\n    SHOW_MENU,\r\n    SHOW_UNDO,\r\n    TOGGLE_COMPLETED_LIST,\r\n    TOGGLE_TASK_COMPLETION,\r\n    TOGGLE_TODO_LIST,\r\n    UNDO_TASK,\r\n    UPDATE_TASKS,\r\n\r\n    UPDATE_SORTING_FIELDS,\r\n    SHOW_SORT_FIELD_MENU,\r\n    HIDE_SORT_FIELD_MENU, SHOW_PRIORITY_MENU, HIDE_PRIORITY_MENU\r\n} from './actions';\r\n\r\nimport sortingAlgorithm from \"../sorting/sortingAlgorithm\"\r\n\r\nconst initialState = {\r\n    tasks: [],\r\n    stack:[],\r\n    sortingFields:[],\r\n    showUndo: false,\r\n    showCompleted: false,\r\n    showTodo: true,\r\n    showMenu: false,\r\n    showSortMenu: false,\r\n    showPriorityMenu: false ,\r\n    priorityMenuActiveID: null,\r\n}\r\n\r\nfunction createTask(state) {\r\n    const id = uuidv4()\r\n    const task = {\r\n        text:\"\",\r\n        isCompleted:false,\r\n        id,\r\n        priority: -1,\r\n        creationDate: Date.now()\r\n    }\r\n    const newState = state.tasks.map(x => x)\r\n    newState.push(task)\r\n    const tasks = sortingAlgorithm(state.sortingFields,newState)\r\n    return {\r\n        ...state,\r\n        tasks\r\n    }\r\n}\r\n\r\nfunction deleteTask(state,id) {\r\n    const tasks = state.tasks.filter(task => task.id !== id)\r\n    return {\r\n        ...state,\r\n        tasks \r\n    }\r\n}\r\n\r\nfunction updateTaskText(state,{id,text}) {\r\n    const newTasks = state.tasks.map(x => x)\r\n    const task = newTasks.find(task => task.id === id)\r\n    if (!task) return state\r\n    task.text = text\r\n\r\n    const tasks = sortingAlgorithm(state.sortingFields,newTasks)\r\n\r\n\r\n    return {\r\n        ...state,\r\n        tasks\r\n    }\r\n}\r\n\r\nfunction toggleTaskCompletion(state,id) {\r\n    const newTasks = state.tasks.map(x => x)\r\n    const task = newTasks.find(task => task.id === id)\r\n    task.isCompleted = !task.isCompleted\r\n\r\n    return {\r\n        ...state,\r\n        tasks:newTasks \r\n    }\r\n\r\n}\r\n\r\nfunction deleteAllCompletedTasks(state) {\r\n    const stack = state.stack.map(x => x)\r\n    stack.push(state.tasks)\r\n\r\n   const newTasks = state.tasks.filter(task => task.isCompleted !== true)\r\n   return {\r\n       ...state,\r\n       stack,\r\n       tasks:newTasks \r\n   }\r\n}\r\n\r\nfunction undoTask(state) {\r\n    const stack = state.stack.map(x => x)\r\n\r\n    return {\r\n        ...state,\r\n        tasks: stack.pop(),\r\n        stack \r\n    }\r\n}\r\n\r\nfunction toggleCompletedList(state) {\r\n    return {\r\n        ...state,\r\n        showCompleted: !state.showCompleted\r\n    }\r\n}\r\n\r\nfunction toggleToDoList(state) {\r\n    return {\r\n        ...state,\r\n        showTodo: !state.showTodo \r\n    }\r\n}\r\n\r\nfunction showMenu(state) {\r\n    return {\r\n        ...state,\r\n        showMenu: true \r\n        }\r\n}\r\n\r\nfunction hideMenu(state) {\r\n    return {\r\n        ...state,\r\n        showMenu:false \r\n    }\r\n}\r\n\r\nfunction showUndo(state) {\r\n    return {\r\n        ...state,\r\n        showUndo: true\r\n    }\r\n}\r\n\r\nfunction hideUndo(state) {\r\n    return {\r\n        ...state,\r\n        showUndo: false \r\n    }\r\n}\r\n\r\nfunction updateTasks(state,oldTasks) {\r\n    const tasks = sortingAlgorithm(state.sortingFields,oldTasks)\r\n    return {\r\n        ...state,\r\n        tasks\r\n    }\r\n}\r\n\r\nfunction updateSortingFields(state,{sortingFields}) {\r\n    const tasks = sortingAlgorithm(sortingFields,state.tasks)\r\n    return {\r\n        ...state,\r\n        tasks,\r\n        sortingFields\r\n    }\r\n}\r\n\r\nfunction openSortFieldMenu(state) {\r\n    return {\r\n        ...state,\r\n        showSortMenu: true,\r\n        showPriorityMenu:false,\r\n\r\n    }\r\n}\r\n\r\nfunction hideSortFieldMenu(state) {\r\n    return {\r\n        ...state,\r\n        showSortMenu: false\r\n    }\r\n}\r\n\r\nfunction showSortFieldMenu(state) {\r\n    return {\r\n        ...state,\r\n        showSortMenu: true,\r\n        showPriorityMenu:false,\r\n    }\r\n}\r\n\r\nfunction showPriorityMenu(state,payload) {\r\n    return {\r\n        ...state,\r\n       priorityMenuActiveID: payload.id,\r\n       showPriorityMenu:true,\r\n       showSortMenu: false\r\n    }\r\n}\r\n\r\nfunction hidePriorityMenu(state) {\r\n        return {\r\n            ...state,\r\n            showPriorityMenu:false,\r\n        }\r\n}\r\nexport default function toDoReducer(state = initialState, action){\r\n    switch (action.type){\r\n        case TOGGLE_TASK_COMPLETION: return toggleTaskCompletion(state,action.payload.id)\r\n        case TOGGLE_TODO_LIST: return toggleToDoList(state)\r\n        case TOGGLE_COMPLETED_LIST: return toggleCompletedList(state)\r\n        case SHOW_MENU: return showMenu(state)\r\n        case HIDE_MENU: return hideMenu(state)\r\n        case UNDO_TASK: return undoTask(state)\r\n        case SHOW_UNDO: return showUndo(state)\r\n        case HIDE_UNDO: return hideUndo(state)\r\n        case UPDATE_TASKS: return updateTasks(state,action.payload.tasks)\r\n        case UPDATE_SORTING_FIELDS: return updateSortingFields(state,action.payload)\r\n        case SHOW_SORT_FIELD_MENU: return showSortFieldMenu(state)\r\n        case HIDE_SORT_FIELD_MENU: return hideSortFieldMenu(state)\r\n        case SHOW_PRIORITY_MENU: return showPriorityMenu(state,action.payload)\r\n        case HIDE_PRIORITY_MENU: return hidePriorityMenu(state)\r\n        default:\r\n            return state \r\n    }\r\n\r\n\r\n}\r\n","import {createStore} from \"redux\"\r\nimport rootReducer  from \"./reducer\"\r\n\r\nconst store = createStore(rootReducer)\r\nexport default store ","import {\r\n    hideMenuAction, hidePriorityMenuAction, hideSortFieldAction,\r\n    hideUndoAction,\r\n    showMenuAction, showPriorityMenuAction,\r\n    showUndoAction,\r\n    toggleCompletedListAction,\r\n    showSortFieldAction,\r\n    toggleToDoListAction,\r\n    undoTaskAction\r\n} from \"./actions.js\"\r\nimport store from \"./store.js\"\r\n\r\nexport default class AppDataController {\r\n\r\n    static toggleTodoList() {\r\n        const action = toggleToDoListAction()\r\n        store.dispatch(action)\r\n    }\r\n    static showSortMenu() {\r\n        return store.getState().showSortMenu\r\n    }\r\n\r\n    static hideSortMenu() {\r\n        const action = hideSortFieldAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static openSortFieldMenu() {\r\n        const action = showSortFieldAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static showToDo() {\r\n        return store.getState().showTodo \r\n    }\r\n    \r\n    static showCompleted() {\r\n        return store.getState().showCompleted \r\n    }\r\n\r\n    static showMenu() {\r\n        const action = showMenuAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static closeMenu() {\r\n        const action = hideMenuAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static menuIsActive() {\r\n        return store.getState().showMenu \r\n    }\r\n\r\n    static toggleCompletedList() {\r\n        const action = toggleCompletedListAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static showUndo() {\r\n        const action = showUndoAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static hideUndo() {\r\n        const action = hideUndoAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static undoTask() {\r\n        const action = undoTaskAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static undoIsActive() {\r\n        return store.getState().showUndo \r\n    }\r\n\r\n    static showPriorityMenu(id) {\r\n        const action = showPriorityMenuAction(id)\r\n        store.dispatch(action)\r\n    }\r\n\r\n    static hidePriorityMenu() {\r\n        const action = hidePriorityMenuAction()\r\n        store.dispatch(action)\r\n    }\r\n\r\n}","import AppDataController from \"../../modules/dataController/AppDataController\"\r\nimport \"../../css/action_button.css\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nfunction handleOnClick() {\r\n    AppDataController.showMenu()\r\n}\r\n\r\nexport default function ActionButton() {\r\n    return (\r\n        <button \r\n            class=\"action-button\"\r\n            onClick={handleOnClick}\r\n        >\r\n        <FontAwesomeIcon icon={faPlus} />\r\n        </button>\r\n    )\r\n}\r\n\r\n","import \"../css/banner.css\"\r\n\r\n\r\nexport default function Header(props) {\r\n\r\n    return (\r\n        <div class=\"banner\">\r\n            <h1 class=\"title\"> Todoiz.IO</h1>\r\n        </div>\r\n    )\r\n}","import firebaseConfig from \"./firebaseConfig\"\r\nimport firebase from \"firebase/compat\";\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\nexport default firebase.firestore()","export default  {\r\n    apiKey: \"AIzaSyCcQ6XCOvMIA7pHME4bWBgy_7OVy_7XErA\",\r\n    authDomain: \"cs124-fall2021.firebaseapp.com\",\r\n    projectId: \"cs124-fall2021\",\r\n    storageBucket: \"cs124-fall2021.appspot.com\",\r\n    messagingSenderId: \"264318304667\",\r\n    appId: \"1:264318304667:web:4be8d27a02811b1ccd613e\"\r\n}","export const COLLECTION_NAME = \"todoiz.io\"\r\nexport const DEFAULT_DOC_ID = \"default\"\r\nexport const TASK_SUBCOLLECTION = \"tasks\"","import { createTaskAction, deleteAllCompletedTasksAction, deleteTaskAction, toggleTaskCompletionAction, updateTaskTextAction } from \"./actions\"\r\nimport store from \"./store.js\"\r\nimport db from \"../db/index\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {COLLECTION_NAME,DEFAULT_DOC_ID,TASK_SUBCOLLECTION} from \"./constants\"\r\n\r\n\r\nconst collectionRef = db.collection(COLLECTION_NAME)\r\n\r\n function getTask(id) {\r\n    return collectionRef.doc(DEFAULT_DOC_ID).collection(TASK_SUBCOLLECTION).doc(id)\r\n}\r\n\r\n\r\n/*\r\nTask {\r\n\r\n    isCompleted: boolean;\r\n    text: string;\r\n    \r\n\r\n}\r\n*/\r\nclass TaskDataController {\r\n    static async updateTaskText(id,text) {\r\n        // DOC\r\n        const task = await getTask(id)\r\n        await task.update({\r\n                text\r\n            })\r\n    } \r\n\r\n    static async toggleTaskCompletion(id) {\r\n        const doc = getTask(id)\r\n        const task = await doc.get()\r\n        if (!task) return \r\n        const {isCompleted} = task.data()\r\n        await doc.update({\r\n            isCompleted:!isCompleted\r\n        })\r\n    }\r\n\r\n    static createTask() {\r\n        const id = uuidv4()\r\n        collectionRef.doc(DEFAULT_DOC_ID).collection(TASK_SUBCOLLECTION).doc(id).set({\r\n            isCompleted: false,\r\n            text: \"\",\r\n            id,\r\n            priority: -1,\r\n            creationDate: Date.now()\r\n        })\r\n\r\n    }\r\n\r\n    static async deleteTask(id) {\r\n        const task = await getTask(id)\r\n        if (!task) return\r\n        await task.delete() \r\n    }\r\n\r\n    static async deleteAllCompleted() {\r\n        const tasks = await collectionRef\r\n            .doc(DEFAULT_DOC_ID)\r\n            .collection(TASK_SUBCOLLECTION)\r\n            .where(\"isCompleted\",\"==\",true)\r\n            .get()\r\n\r\n        for (const task of tasks.docs) {\r\n            await task.ref.delete()\r\n        }\r\n    }\r\n\r\n    static todo() {\r\n        return store.getState()\r\n        .tasks.filter(task => task.isCompleted === false)\r\n    }\r\n\r\n    static completed() {\r\n        return store.getState()\r\n        .tasks.filter(task => task.isCompleted === true)\r\n    }\r\n\r\n    static async updateTaskPriority(id,priority) {\r\n        const task = await  getTask(id)\r\n        await task.update({\r\n            priority\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default TaskDataController","\r\nconst classes = {\r\n    0: \"high-priority\",\r\n    1: \"medium-priority\",\r\n    2: \"low-priority\",\r\n}\r\n\r\n\r\nexport default function PriorityIcon({priority}) {\r\n    const classList = priority == -1 ? \"no-priority\" : classes[priority]\r\n    return (\r\n        <div className={classList + \" priority-icon\"}/>\r\n    )\r\n}","import PriorityIcon from \"../PriorityIcon\";\r\nimport AppDataController from \"../../../modules/dataController/AppDataController\";\r\n\r\nconst classList = {\r\n    0: \"high-priority\",\r\n    1: \"medium-priority\",\r\n    2: \"low-priority\",\r\n}\r\n\r\nfunction openPriorityMenu(id) {\r\n        AppDataController.showPriorityMenu(id)\r\n}\r\n\r\nexport default function PriorityButton({id,priority}) {\r\n    const classes = priority == -1 ? \"no-priority\" : classList[priority]\r\n\r\n    return <button\r\n            className={classes + \" priority-icon\"}\r\n            onClick={() => openPriorityMenu(id)}\r\n            >\r\n    </button>\r\n}","import \"../../css/task.css\"\r\nimport TaskDataController from \"../../modules/dataController/TaskDataController\"\r\nimport PriorityButton from \"../Priority/PriorityButton/PriorityButton\";\r\nimport {connect} from \"react-redux\"\r\n/*\r\nprops: {\r\n    text:string;\r\n    isCompleted:boolean\r\n    id:string \r\n}\r\n*/\r\n function Task(props) {\r\n\r\n     const classes = `task-item ${props.isCompleted ? 'completed' : ''} ${props.isSelected ? 'selected-task' : ''}`\r\n\r\n    return (\r\n        <div class={classes}>\r\n            <input \r\n                alt='task completion status' \r\n                class='checkbox' \r\n                type=\"checkbox\"\r\n                value={ props.isCompleted}\r\n                onChange= {(e) => handleCheckBoxEvent(props.id)}\r\n                checked= {props.isCompleted}\r\n            />\r\n            <input \r\n                class='task-text' \r\n                type='text' \r\n                alt='task text' \r\n                onChange= { (e) => handleTextEvent(props.id,e)}\r\n                value={props.text}\r\n            />\r\n            <PriorityButton id={props.id} priority={props.priority}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction handleTextEvent(id,event) {\r\n    const text = event.currentTarget.value\r\n    TaskDataController.updateTaskText(id,text)\r\n}\r\n\r\nfunction handleCheckBoxEvent(id) {\r\n    TaskDataController.toggleTaskCompletion(id)\r\n}\r\n\r\nfunction mapToState(state,ownProps) {\r\n    const isSelected = ownProps.id == state.priorityMenuActiveID && state.showPriorityMenu\r\n     return {\r\n         isSelected\r\n     }\r\n}\r\n\r\nexport default connect(mapToState)(Task)","import Task from \"./Task\";\r\nimport \"../../css/container.css\"\r\n\r\n\r\n\r\n\r\n/*\r\nprops:{\r\n    tasks: TaskItem[]\r\n\r\n}\r\n*/\r\nexport default function TaskList(props) {\r\n\r\n    return (\r\n        <div class='container scroll-container'>\r\n            {\r\n            props.tasks.map(task => {\r\n            return <Task \r\n                        {...task}\r\n                        key={task.id}\r\n                    />\r\n            })\r\n            }\r\n        </div>   \r\n    )\r\n    \r\n}","import { faAngleDown, faAngleRight } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { connect } from \"react-redux\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController\"\r\n\r\nfunction SectionButton(props) {\r\n    const icon = props.isOpen ? faAngleDown : faAngleRight\r\n    return (\r\n        <button class=\"drop-down\" onClick={(e) => handleOnClick(props.isToDo)}>\r\n            <FontAwesomeIcon icon={icon} />\r\n        </button>\r\n    )\r\n}   \r\n\r\nfunction handleOnClick(isToDo) {\r\n    if (isToDo) {\r\n        AppDataController.toggleTodoList()\r\n    }\r\n    else AppDataController.toggleCompletedList()\r\n}\r\n\r\nfunction mapToState(state,{isToDo}) {\r\n    return {\r\n        isOpen: \r\n            isToDo ? AppDataController.showToDo() \r\n            : AppDataController.showCompleted()\r\n        }\r\n}\r\n\r\nexport default connect(mapToState)(SectionButton)","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSort} from \"@fortawesome/free-solid-svg-icons\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController\";\r\nimport \"../../css/sort_button.css\"\r\n\r\nfunction toggleButton() {\r\n   AppDataController.openSortFieldMenu()\r\n}\r\n\r\nexport default function FilterButton(props) {\r\n   const classes = !props.isToDo ? \"sort-button hide\" : \"sort-button\"\r\n   return  (\r\n       <button className={classes} onClick={toggleButton}>\r\n            <FontAwesomeIcon icon={faSort}/>\r\n       </button>\r\n      )\r\n}\r\n\r\n\r\n\r\n\r\n","import \"../../css/bar.css\"\r\nimport \"../../css/todo.css\"\r\nimport \"../../css/completed.css\"\r\nimport SectionButton from \"./SectionButton\"\r\nimport FilterButton from \"./FilterButton\"\r\n\r\nexport default function SectionBar(props) {\r\n    const classes = `bar ${props.className}`\r\n    return (\r\n        <div class={classes}>\r\n            <SectionButton isToDo = { props.className === \"todo-bar\" }/>\r\n            <h1 class=\"bar-title\"> {props.sectionTitle} </h1>\r\n             <FilterButton isToDo={props.isToDo}/>\r\n        </div>  \r\n    )\r\n}","import { connect } from \"react-redux\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController.js\"\r\nimport TaskDataController from \"../../modules/dataController/TaskDataController.js\"\r\nimport TaskList from \"../Tasks/TaskList.js\"\r\nimport SectionBar from \"./SectionBar.js\"\r\n\r\n/*\r\n@props: {\r\n    className: \"todo-bar| completed-bar\";\r\n    sectionTitle: string;\r\n    tasks: TaskItem[]\r\n    showContainer: boolean\r\n}\r\n*/\r\n\r\nfunction SectionContainer(props) {\r\n    return (\r\n\r\n\r\n    <div>\r\n        <SectionBar isToDo = {props.isToDo} sectionTitle = {props.sectionTitle} className={props.className}/>\r\n        { props.showContainer && <TaskList tasks={props.tasks} />}\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state,ownProps) {\r\n    const isToDo = ownProps.sectionTitle === \"To Do\"\r\n\r\n    if (isToDo) return { \r\n        tasks: TaskDataController.todo(),\r\n        showContainer: AppDataController.showToDo(),\r\n        isToDo: true,\r\n        showSortMenu: state.showSortMenu\r\n    }\r\n    \r\n    return {\r\n        tasks: TaskDataController.completed(),\r\n        showContainer: AppDataController.showCompleted(),\r\n        isToDo: false,\r\n        showSortMenu: state.showSortMenu\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SectionContainer)","\r\n\r\n\r\n/* \r\n\r\n\r\nprops: {\r\n    text: string;\r\n    command: Function \r\n    icon: FontAwesomeIcon\r\n}\r\n*/\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function ActionMenuItem(props) {\r\n\r\n    return (\r\n        <button onClick={() => props.command()} class=\"action-item\">\r\n            { props.icon && <FontAwesomeIcon icon= {props.icon}/> }\r\n            <div class=\"action-text\">\r\n                <p> {props.text} </p>\r\n            </div>\r\n        </button>\r\n    )\r\n}\r\n\r\n","import ActionMenuItem from \"./ActionMenuItem.js\"\r\nimport \"../../css/action_list.css\"\r\nimport TaskDataController from \"../../modules/dataController/TaskDataController.js\"\r\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController.js\"\r\n/*\r\nprops: {\r\n    menuItems: MenuItem[]\r\n}\r\n\r\nmenuItem {\r\n    text: string;\r\n\r\n    command: Function\r\n}\r\n*/\r\n\r\n\r\nfunction deleteAll() {\r\n    TaskDataController.deleteAllCompleted()\r\n    AppDataController.showUndo()\r\n    setTimeout( () => {\r\n        AppDataController.hideUndo()\r\n    },3000)\r\n    \r\n}\r\nconst menuItems = [\r\n    {text:\"Add Task\", command: TaskDataController.createTask, icon: faPlus},\r\n    {text: \"Clear Completed Tasks\", command:deleteAll, icon: faMinus},\r\n]\r\n\r\nexport default function ActionMenu(props) {\r\n    return (\r\n        <div class='overlay'onClick= {AppDataController.closeMenu}>\r\n            <div class='action-container'>\r\n                { menuItems.map(menuItem => {\r\n                    return <ActionMenuItem {...menuItem} key={menuItem.text}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n     \r\n    )\r\n}","import \"../../css/action_button.css\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController\"\r\n\r\nfunction undoTask() {\r\n    AppDataController.undoTask()\r\n    AppDataController.hideUndo()\r\n}\r\n\r\nexport default function UndoButton() {\r\n    return (\r\n        <div class=\"undo\">\r\n            <p> Completed tasks cleared</p>\r\n            <button alt=\"undo task clear\" onClick={undoTask}> Undo </button>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n","import db from \"../db/index\"\r\nimport {COLLECTION_NAME,DEFAULT_DOC_ID} from \"./constants\"\r\nconst collectionRef = db.collection(COLLECTION_NAME)\r\n\r\nexport default class TaskOrderController {\r\n\r\n    static async addSortField(field,isAscending) {\r\n        const sortFilters = await getSortFields()\r\n        if (!sortFilters) return\r\n        if (isAlreadyEnabled(field,sortFilters)) return\r\n        else enableFilter(sortFilters,field,isAscending)\r\n    }\r\n\r\n    static async changeSortField(old,newField) {\r\n        const sortFilters = await getSortFields()\r\n        const prevField = sortFilters.find(f => f.field == old)\r\n        const hasFieldAlready = sortFilters.find(f => f.field == newField)\r\n        if (!prevField) return\r\n        prevField.field = hasFieldAlready ? old : newField\r\n        await updateSortFields(sortFilters)\r\n    }\r\n\r\n    static async changeAscending(field,isAscending) {\r\n        const sortFilters = await getSortFields()\r\n        const prevField = sortFilters.find(f => f.field == field)\r\n        if (!prevField) return\r\n        prevField.isAscending = isAscending\r\n        await updateSortFields(sortFilters)\r\n\r\n\r\n    }\r\n\r\n    static async addRandomField() {\r\n        const sortFilters = await getSortFields()\r\n        if (!sortFilters) return\r\n\r\n        const hasName = !!sortFilters.find(f => f.field == \"name\")\r\n        const hasTime = !!sortFilters.find(f => f.field == \"time\")\r\n        const hasPriority = !!sortFilters.find(f => f.field == \"priority\")\r\n\r\n        if (!hasName) await TaskOrderController.addSortField(\"name\",true)\r\n        else if (!hasTime) await TaskOrderController.addSortField(\"time\",true)\r\n        else if (!hasPriority) await TaskOrderController.addSortField(\"priority\",true)\r\n\r\n\r\n    }\r\n\r\n    static async removeSortField(field) {\r\n        const sortFields = await getSortFields()\r\n        const doc = getDoc()\r\n        if (!sortFields) return\r\n        const newSortingFields = sortFields.filter(f => f.field !== field)\r\n        await updateSortFields(newSortingFields)\r\n    }\r\n\r\n    static async changeSortFieldOrder(field,newIndex) {\r\n        const sortFields = await getSortFields()\r\n        if (!sortFields || newIndex < 0 || newIndex >= sortFields.length) return\r\n\r\n        const currentIndex = getCurrentIndexOfField(field,sortFields)\r\n        if (currentIndex == -1 ) return\r\n\r\n        const entry = sortFields.splice(currentIndex,1)\r\n        sortFields.splice(newIndex,0,entry[0])\r\n\r\n        await updateSortFields(sortFields)\r\n    }\r\n\r\n}\r\n\r\nfunction getDoc() {\r\n    return collectionRef.doc(DEFAULT_DOC_ID)\r\n}\r\n\r\nasync function getSortFields() {\r\n    const data = await getDoc().get()\r\n    return data ? data.data().sortingFields : null\r\n}\r\n\r\nasync function updateSortFields(sortingFields) {\r\n    const doc = getDoc()\r\n    await doc.update({sortingFields})\r\n}\r\n\r\nfunction getCurrentIndexOfField(field,sortFields) {\r\n        for (let i = 0 ; i < sortFields.length ;i++) {\r\n            const data = sortFields[i]\r\n            if (data.field == field) return i\r\n        }\r\n        return -1\r\n}\r\n\r\nfunction isAlreadyEnabled(field,sortFilters) {\r\n    return !!sortFilters.find(filter => filter.field == field)\r\n}\r\n\r\nasync function enableFilter(sortingFields,field,isAscending) {\r\n    const doc = getDoc()\r\n    sortingFields.push({field,isAscending})\r\n    await updateSortFields(sortingFields)\r\n}\r\n\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus} from \"@fortawesome/free-solid-svg-icons\"\r\nimport TaskOrderController from \"../../modules/dataController/TaskOrderController\";\r\n\r\nasync function addFilterSection() {\r\n  await TaskOrderController.addRandomField()\r\n}\r\n\r\nexport default function AddFilterButton(props) {\r\n    const classes = props.sortingFields.length < 3\r\n        ? \"sortButton sort-button-color\"\r\n        : \"hide\"\r\n\r\n    return (\r\n        <button onClick={addFilterSection} className={classes}>\r\n            <span> + Field </span>\r\n        </button>\r\n    )\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faWindowClose} from \"@fortawesome/free-solid-svg-icons\"\r\nimport AppDataController from \"../../modules/dataController/AppDataController\";\r\n\r\nfunction closeMenu() {\r\n    AppDataController.hideSortMenu()\r\n}\r\nexport default function CloseMenuButton(props) {\r\n    return (\r\n        <button className=\"sort-close-button sort-button-color\"  onClick={closeMenu}>\r\n           <span> x </span>\r\n        </button>\r\n    )\r\n\r\n}","import TaskOrderController from \"../../../modules/dataController/TaskOrderController\";\r\nimport \"../../../css/sort_entry.css\"\r\nimport {connect} from \"react-redux\"\r\n\r\nfunction EntryOrderButton(props) {\r\n\r\n    return (\r\n        <div>\r\n            <select\r\n                className=\"sort-order\"\r\n                onChange={ (result) => onOrderChange(props.field,parseInt(result.currentTarget.value))}\r\n                value={props.index}\r\n            >\r\n                {\r\n                    props.sortingFields.map((_,i) => {\r\n                        return <option key={i} value={i}> {i + 1} </option>\r\n                    })\r\n                }\r\n            </select>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nasync function onOrderChange(field,newOrder) {\r\n    console.log(newOrder)\r\n    await TaskOrderController.changeSortFieldOrder(field,newOrder)\r\n}\r\n\r\nfunction mapState(state) {\r\n    return {\r\n        sortingFields:state.sortingFields\r\n    }\r\n}\r\n\r\nexport default connect(mapState)(EntryOrderButton)\r\n\r\n","import TaskOrderController from \"../../../modules/dataController/TaskOrderController\";\r\nimport \"../../../css/sort_entry.css\"\r\n\r\nfunction change(old,event) {\r\n    TaskOrderController.changeSortField(old,event.currentTarget.value)\r\n}\r\n\r\nexport default function SortCriteriaDropDown(props) {\r\n\r\n    return(\r\n        <div >\r\n            <label> By </label>\r\n            <select\r\n                className=\"sort-type\"\r\n                onChange={(event) => change(props.field,event)}\r\n                value={props.field}\r\n            >\r\n                <option value='name' > Name </option>\r\n                <option value=\"time\"> Creation Date</option>\r\n                <option value=\"priority\"> Priority </option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import TaskOrderController from \"../../../modules/dataController/TaskOrderController\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSortAmountUp, faSortAmountDown} from \"@fortawesome/free-solid-svg-icons\"\r\nasync function change(field,value) {\r\n    console.log(field,value)\r\n    await TaskOrderController.changeAscending(field,!value)\r\n}\r\n\r\nexport default function IsAscendingButton(props) {\r\n    const icon = props.isAscending ? faSortAmountUp :faSortAmountDown\r\n    return (\r\n        <div>\r\n            <button className=\"direction-button\" onClick={() => change(props.field,props.isAscending)}>\r\n                <FontAwesomeIcon icon={icon}></FontAwesomeIcon>\r\n            </button>\r\n        </div>\r\n\r\n    )\r\n}","import TaskOrderController from \"../../../modules/dataController/TaskOrderController\";\r\n\r\n\r\nfunction deleteSort(fieldName) {\r\n    TaskOrderController.removeSortField(fieldName)\r\n}\r\n\r\nexport default function DeleteButton(props) {\r\n\r\n    return (\r\n        <button className=\"delete-button\" onClick={() => deleteSort(props.field)} >\r\n            <span> x </span>\r\n        </button>\r\n    )\r\n}\r\n\r\n","import EntryOrderButton from \"./EntryOrderButton\";\r\nimport SortCriteriaDropDown from \"./SortCriteriaDropDown\";\r\nimport IsAscendingButton from \"./isAscendingButton\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport \"../../../css/sort_entry.css\"\r\n\r\n/*\r\n@props() {\r\nfield\r\nisAscending\r\nindex\r\n\r\n}\r\n */\r\n\r\nexport default function SortEntryContainer(props) {\r\n    return (\r\n        <div className=\"entry-container\">\r\n            <EntryOrderButton\r\n                field={props.field}\r\n                index={props.index}\r\n            />\r\n            <SortCriteriaDropDown\r\n                field={props.field}\r\n            />\r\n            <IsAscendingButton\r\n                isAscending={props.isAscending}\r\n                field={props.field}\r\n            />\r\n            <DeleteButton field={props.field}/>\r\n        </div>\r\n    )\r\n}","import \"../../css/sort_container.css\"\r\nimport AddFilterButton from \"./addFilterButton\"\r\nimport CloseMenuButton from \"./CloseMenuButton\"\r\nimport {connect} from \"react-redux\"\r\nimport SortEntryContainer from \"./SortEntry/SortEntryContainer\"\r\n\r\n\r\nfunction SortMenuContainer(props) {\r\n\r\n    return (\r\n        <div className=\"sort-container\">\r\n            <div className=\"sort-bar\">\r\n                <h2 className=\"sort-title\"> Sort </h2>\r\n                <div className='sort-section'>\r\n                    <AddFilterButton sortingFields={props.sortingFields}/>\r\n                    <CloseMenuButton/>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <div class='field-container'>\r\n                {\r\n                    props.sortingFields.map((data,index) => {\r\n                        return <SortEntryContainer key={index} index={index} {...data} />\r\n                    })\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction mapToState(state) {\r\n    return {\r\n        sortingFields: state.sortingFields\r\n    }\r\n}\r\n\r\nexport default connect(mapToState)(SortMenuContainer)","import PriorityIcon from \"../PriorityIcon\";\r\nimport {connect} from \"react-redux\"\r\nimport TaskDataController from \"../../../modules/dataController/TaskDataController\";\r\n\r\nfunction changePriority(id,priority) {\r\n    TaskDataController.updateTaskPriority(id,priority)\r\n}\r\n\r\nfunction PriorityItem(props) {\r\n    const isSelection = props.priority == props.selection\r\n    const classes = isSelection ? \"priority-item priority-selection\"\r\n        : \"priority-item\"\r\n\r\n    return (\r\n        <div\r\n            className={classes}\r\n            onClick={() => changePriority(props.id,props.priority)}\r\n        >\r\n            <span> {props.priorityText}</span>\r\n            <PriorityIcon priority={props.priority}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapToState(state) {\r\n    const id = state.priorityMenuActiveID\r\n    const selection = state.tasks.find(task => task.id ==id).priority\r\n\r\n    return {\r\n        id,\r\n        selection,\r\n    }\r\n}\r\n\r\nexport default connect(mapToState)(PriorityItem)","import AppDataController from \"../../../modules/dataController/AppDataController\";\r\n\r\nfunction closePriorityMenu() {\r\n    AppDataController.hidePriorityMenu()\r\n}\r\n\r\n\r\nexport default function PriorityCloseButton(props) {\r\n    return <button\r\n            className=\"priority-close-button\"\r\n            onClick={closePriorityMenu}\r\n            >\r\n                <span> x </span>\r\n            </button>\r\n}","import PriorityCloseButton from \"./PriorityCloseButton\"\r\n\r\n\r\n\r\nexport default function PriorityMenuBar(props) {\r\n\r\n\r\n    return (\r\n        <div className=\"priority-menu-bar\">\r\n            <h2 className=\"priority-title\"> Priority </h2>\r\n            <PriorityCloseButton/>\r\n        </div>\r\n    )\r\n}","import PriorityItem from \"./PriorityItem\";\r\nimport PriorityMenuBar from \"./PriorityMenuBar\"\r\nimport \"../../../css/priority.css\"\r\n\r\nconst priorityData = [\r\n    {priorityText:\"No Priority\",priority:-1},\r\n    {priorityText: \"Low Priority\", priority:2},\r\n    {priorityText: \"Medium Priority\", priority:1},\r\n    {priorityText: \"High Priority\", priority:0}\r\n]\r\nexport default function PriorityMenuContainer(props) {\r\n\r\n    return (\r\n        <div className=\"priority-menu-container\">\r\n            <PriorityMenuBar/>\r\n            <div className=\"priority-item-container\">\r\n                {\r\n                    priorityData.map((data,index)=> {\r\n                        return <PriorityItem key ={index} {...data}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import \"./css/global.css\"\r\nimport \"typeface-roboto\"\r\nimport ActionButton from \"./components/Action Commands/ActionButton\";\r\nimport AppDataController from \"./modules/dataController/AppDataController\";\r\nimport Header from './components/Header';\r\nimport SectionContainer from \"./components/Section/SectionContainer.js\"\r\nimport ActionMenu from \"./components/Action Commands/ActionMenu\";\r\nimport { connect } from \"react-redux\";\r\nimport UndoButton from \"./components/Undo/UndoButton\";\r\nimport SortMenuContainer from \"./components/SortMenu/SortMenuContainer\";\r\nimport PriorityMenu from \"./components/Priority/PriorityMenu/PriorityMenuContainer\"\r\n\r\nfunction App({menuIsActive,showUndo,showSortMenu,showPriorityMenu}) {\r\n  return (\r\n    <div class='container'>\r\n      <Header/>\r\n      <SectionContainer \r\n        className='todo-bar' \r\n        sectionTitle=\"To Do\"\r\n      />\r\n        {\r\n            !showSortMenu && !showPriorityMenu && <SectionContainer\r\n                className='completed-bar'\r\n                sectionTitle=\"Completed\"\r\n            />\r\n        }\r\n\r\n      { menuIsActive && <ActionMenu/> }\r\n            <ActionButton/>\r\n      { showUndo && <UndoButton/> }\r\n    {showSortMenu && <SortMenuContainer/>}\r\n    {showPriorityMenu && <PriorityMenu/>}\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    menuIsActive: AppDataController.menuIsActive(),\r\n    showUndo: AppDataController.undoIsActive(),\r\n    showSortMenu: AppDataController.showSortMenu(),\r\n      showPriorityMenu: state.showPriorityMenu\r\n  }\r\n}\r\nexport default connect(mapToState)(App)","import db from \"../db/index\"\r\nimport {updateSortingFieldsAction, updateTasksAction} from \"./actions\"\r\nimport store from \"./store\"\r\n\r\nclass DataSyncController {\r\n    _db = db\r\n    _taskSubscription = null\r\n    _sortSubscrption = null\r\n\r\n    setTaskSubscription(query) {\r\n        this._taskSubscription = query.onSnapshot( snapshot => {\r\n            const tasks = snapshot.docs.map(task => task.data())\r\n            const action = updateTasksAction(tasks)\r\n            store.dispatch(action)\r\n        })\r\n    }\r\n\r\n    setSortSubscription(query) {\r\n        this._sortSubscrption = query.onSnapshot(snapshot => {\r\n            const {sortingFields} = snapshot.data()\r\n            const action = updateSortingFieldsAction(sortingFields)\r\n            store.dispatch(action)\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default new DataSyncController()","import DataSyncController from \"../dataController/DataSyncController\"\r\nimport {COLLECTION_NAME, DEFAULT_DOC_ID} from \"../dataController/constants\"\r\nimport db from \"../db/index\"\r\n\r\nconst collectionRef = db.collection(COLLECTION_NAME)\r\nconst tasks = collectionRef.doc(DEFAULT_DOC_ID).collection(\"tasks\")\r\nconst sortFilters = collectionRef.doc(DEFAULT_DOC_ID)\r\n\r\nexport default function () {\r\n    DataSyncController.setTaskSubscription(tasks)\r\n    DataSyncController.setSortSubscription(sortFilters)\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./modules/dataController/store.js\"\r\nimport initSubscription from \"./modules/setup/initSubscriptions\"\r\nimport TaskDataController from \"./modules/dataController/TaskDataController\";\r\n\r\n\r\n\r\ninitSubscription()\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n"],"sourceRoot":""}